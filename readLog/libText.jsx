function setFormatting(start, end, fontName, fontStyle, fontSize, colorArray,direction,firstLineIndentSize,leadingsize,justification,spaceBefore,bsln){		//Sanity checking: is the active layer a text layer?	if(app.activeDocument.activeLayer){		var activeLayer = app.activeDocument.activeLayer;		if(activeLayer.kind == LayerKind.TEXT){			//More checking: does the text layer have content, and are start and end set to reasonable values?			if((activeLayer.textItem.contents != "")&&(start >= 0)&&(end <= activeLayer.textItem.contents.length)){				var idsetd = app.charIDToTypeID( "setd" );				var action = new ActionDescriptor();				var idnull = app.charIDToTypeID( "null" );				//The action reference specifies the active text layer.				var reference = new ActionReference();				var idTxLr = app.charIDToTypeID( "TxLr" );				var idOrdn = app.charIDToTypeID( "Ordn" );				var idTrgt = app.charIDToTypeID( "Trgt" );				reference.putEnumerated( idTxLr, idOrdn, idTrgt );				action.putReference( idnull, reference );				var idT = app.charIDToTypeID( "T   " );				var textAction = new ActionDescriptor();				var idTxtt = app.charIDToTypeID( "Txtt" );				//actionList contains the sequence of formatting actions.				var actionList = new ActionList();				//textRange sets the range of characters to format.				var textRange = new ActionDescriptor();				var idFrom = app.charIDToTypeID( "From" );				textRange.putInteger( idFrom, start );				textRange.putInteger( idT, end );				var idTxtS = app.charIDToTypeID( "TxtS" );				//The "formatting" ActionDescriptor holds the formatting. It should be clear that you can				//add other attributes here--just get the relevant lines (usually 2) from the Script Listener 				//output and graft them into this section.				var formatting = new ActionDescriptor();				//Font name.                var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );                formatting.putString( idfontPostScriptName, fontName );				var idFntN = app.charIDToTypeID( "FntN" );				formatting.putString( idFntN, fontName );				//Font style.				var idFntS = app.charIDToTypeID( "FntS" );				formatting.putString( idFntS, fontStyle );				//Font size.				var idSz = app.charIDToTypeID( "Sz  " );				var idPnt = app.charIDToTypeID( "#Pnt" );				formatting.putUnitDouble( idSz, idPnt, fontSize );				//Fill color (as an RGB color).				var idClr = app.charIDToTypeID( "Clr " );				var colorAction = new ActionDescriptor();				var idRd = app.charIDToTypeID( "Rd  " );				colorAction.putDouble( idRd, colorArray[0] );				var idGrn = app.charIDToTypeID( "Grn " );				colorAction.putDouble( idGrn, colorArray[1]);				var idBl = app.charIDToTypeID( "Bl  " );				colorAction.putDouble( idBl, colorArray[2] );				var idRGBC = app.charIDToTypeID( "RGBC" );				formatting.putObject( idClr, idRGBC, colorAction );				//end color.                  //direction                                    be = direction.toString()                  ba = be.substr (be.indexOf(".",0) + 1,100)                  lists = ["HORIZONTAL","VERTICAL"]                  listt = ["Hrzn","Vrtc"]                  strJust = listt[arrayIndex(lists, ba)]                    var idTxLr = charIDToTypeID( "TxLr" );                    var idOrdn = charIDToTypeID( "Ordn" );                    var idTrgt = charIDToTypeID( "Trgt" );                    formatting.putEnumerated( idTxLr, idOrdn, idTrgt );				//firstLineIndent                  var idfirstLineIndent = stringIDToTypeID( "firstLineIndent" );                  var idPnt = charIDToTypeID( "#Pnt" );                  formatting.putUnitDouble( idfirstLineIndent, idPnt, firstLineIndentSize );                  //autoLeading                  var idautoLeading = stringIDToTypeID( "autoLeading" );                  if(leadingsize == 0){                      formatting.putBoolean( idautoLeading, 1 );                  }else{                      formatting.putBoolean( idautoLeading, 0);                      var idLdng = charIDToTypeID( "Ldng" );                      var idPnt = charIDToTypeID( "#Pnt" );                      formatting.putUnitDouble( idLdng, idPnt,leadingsize);                  }                  //JUSTIFIy                   be = justification.toString()                   ba = be.substr (be.indexOf(".",0) + 1,100)                   lists = ["FULLYJUSTIFIED","RIGHTJUSTIFIED","CENTERJUSTIFIED","LEFTJUSTIFIED","RIGHT","CENTER","LEFT"]                   listt = [charIDToTypeID( "JstA" ),stringIDToTypeID( "justifyRight" ),stringIDToTypeID( "justifyCenter" ),                                stringIDToTypeID( "justifyLeft" ),charIDToTypeID( "Rght" ),charIDToTypeID( "Cntr" ),charIDToTypeID( "Left" )]                   strJust = listt[arrayIndex(lists, ba)]                   var idAlgn = charIDToTypeID( "Algn" );                   var idAlg = charIDToTypeID( "Alg " );                   formatting.putEnumerated( idAlgn, idAlg, strJust );                    //idmojiZume                   var idmojiZume = stringIDToTypeID( "mojiZume" );                    formatting.putDouble( idmojiZume, 0.300000 );                                        //spaceBefore                        var idspaceBefore = stringIDToTypeID( "spaceBefore" );                        var idPnt = charIDToTypeID( "#Pnt" );                        formatting.putUnitDouble( idspaceBefore, idPnt, spaceBefore );                                               //                         var idBsln = charIDToTypeID( "Bsln" );                        var idPnt = charIDToTypeID( "#Pnt" );                        formatting.putUnitDouble( idBsln, idPnt, bsln);                //				textRange.putObject( idTxtS, idTxtS, formatting );				actionList.putObject( idTxtt, textRange );				textAction.putList( idTxtt, actionList );				action.putObject( idT, idTxLr, textAction );				app.executeAction( idsetd, action, DialogModes.NO );			}		}	}}/*private static function setFontSize(start:int, end:int, fontSize:Number):void{		//Sanity checking: is the active layer a text layer?	if(app.activeDocument.activeLayer is ArtLayer){		var activeLayer:ArtLayer = app.activeDocument.activeLayer as ArtLayer;		if(activeLayer.kind == LayerKind.TEXT){			//More checking: does the text layer have content, and are start and end set to reasonable values?			if((activeLayer.textItem.contents != "")&&(start >= 0)&&(end <= activeLayer.textItem.contents.length)){                //The indentation that the Script Listerner gives you is weird, but it’s useful.				var idsetd:Number = app.charIDToTypeID( "setd" );				var action:ActionDescriptor = new ActionDescriptor();				var idnull:Number = app.charIDToTypeID( "null" );				//The action reference specifies the active text layer.				var reference:ActionReference = new ActionReference();				var idTxLr:Number = app.charIDToTypeID( "TxLr" );				var idOrdn:Number = app.charIDToTypeID( "Ordn" );				var idTrgt:Number = app.charIDToTypeID( "Trgt" );				reference.putEnumerated( idTxLr, idOrdn, idTrgt );				action.putReference( idnull, reference );				var idT:Number = app.charIDToTypeID( "T   " );				var textAction:ActionDescriptor = new ActionDescriptor();				var idTxtt:Number = app.charIDToTypeID( "Txtt" );				//actionList contains the sequence of formatting actions.				var actionList:ActionList = new ActionList();				//textRange sets the range of characters to format.				var textRange:ActionDescriptor = new ActionDescriptor();				var idFrom:Number = app.charIDToTypeID( "From" );				textRange.putInteger( idFrom, start );				textRange.putInteger( idT, end );				var idTxtS:Number = app.charIDToTypeID( "TxtS" );				//The "formatting" ActionDescriptor holds the formatting. It should be clear that you can				//add other attributes here--just get the relevant lines (usually 2) from the Script Listener 				//output and graft them into this section.				var formatting:ActionDescriptor = new ActionDescriptor();				//Font size.				var idSz:Number = app.charIDToTypeID( "Sz  " );				var idPnt:Number = app.charIDToTypeID( "#Pnt" );				formatting.putUnitDouble( idSz, idPnt, fontSize );				textRange.putObject( idTxtS, idTxtS, formatting );				actionList.putObject( idTxtt, textRange );				textAction.putList( idTxtt, actionList );				action.putObject( idT, idTxLr, textAction );				app.executeAction( idsetd, action, DialogModes.NO );			}		}	}}*/function arrayIndex(array,content){    for(var i =0; i < array.length; i++){        if(array[i].indexOf (content,0) == 0 && array[i].length == content.length){            return i;        }textJustify    }    return -1}    function textDirection(direction){    be = direction.toString()    ba = be.substr (be.indexOf(".",0) + 1,100)    lists = ["HORIZONTAL","VERTICAL"]    listt = ["Hrzn","Vrtc"]    strJust = listt[arrayIndex(lists, ba)]// =======================================================var idsetd = charIDToTypeID( "setd" );    var desc1897 = new ActionDescriptor();    var idnull = charIDToTypeID( "null" );        var ref727 = new ActionReference();        var idPrpr = charIDToTypeID( "Prpr" );        var idOrnt = charIDToTypeID( "Ornt" );        ref727.putProperty( idPrpr, idOrnt );        var idTxLr = charIDToTypeID( "TxLr" );        var idOrdn = charIDToTypeID( "Ordn" );        var idTrgt = charIDToTypeID( "Trgt" );        ref727.putEnumerated( idTxLr, idOrdn, idTrgt );    desc1897.putReference( idnull, ref727);    var idT = charIDToTypeID( "T   " );    var idOrnt = charIDToTypeID( "Ornt" );    var idVrtc = charIDToTypeID( strJust );    desc1897.putEnumerated( idT, idOrnt, idVrtc );   // newid = textRange(desc1897)executeAction( idsetd, desc1897, DialogModes.NO );}function idHard(){    // =======================================================var idsetd = charIDToTypeID( "setd" );    var desc1875 = new ActionDescriptor();    var idnull = charIDToTypeID( "null" );        var ref714 = new ActionReference();        var idPrpr = charIDToTypeID( "Prpr" );        var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );        ref714.putProperty( idPrpr, idparagraphStyle );        var idTxLr = charIDToTypeID( "TxLr" );        var idOrdn = charIDToTypeID( "Ordn" );        var idTrgt = charIDToTypeID( "Trgt" );        ref714.putEnumerated( idTxLr, idOrdn, idTrgt );    desc1875.putReference( idnull, ref714 );    var idT = charIDToTypeID( "T   " );        var desc1876 = new ActionDescriptor();        var idtextOverrideFeatureName = stringIDToTypeID( "textOverrideFeatureName" );        desc1876.putInteger( idtextOverrideFeatureName, 808464695 );        var idkinsokuSetName = stringIDToTypeID( "kinsokuSetName" );        var idkinsokuSetName = stringIDToTypeID( "kinsokuSetName" );        var idHard = stringIDToTypeID( "Hard" );        desc1876.putEnumerated( idkinsokuSetName, idkinsokuSetName, idHard );    var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );    desc1875.putObject( idT, idparagraphStyle, desc1876 );executeAction( idsetd, desc1875, DialogModes.NO );}function textJustify(justification){    be = justification.toString()    ba = be.substr (be.indexOf(".",0) + 1,100)   // list1 = ["LEFT","CENTER","RIGHT","LEFTJUSTIFIED","CENTERJUSTIFIED","RIGHTJUSTIFIED","FULLYJUSTIFIED"]    lists = ["FULLYJUSTIFIED","RIGHTJUSTIFIED","CENTERJUSTIFIED","LEFTJUSTIFIED","RIGHT","CENTER","LEFT"]    listt = [charIDToTypeID( "JstA" ),stringIDToTypeID( "justifyRight" ),stringIDToTypeID( "justifyCenter" ),                stringIDToTypeID( "justifyLeft" ),charIDToTypeID( "Rght" ),charIDToTypeID( "Cntr" ),charIDToTypeID( "Left" )]    strJust = listt[arrayIndex(lists, ba)]    var idsetd = charIDToTypeID( "setd" );    var desc700 = new ActionDescriptor();    var idnull = charIDToTypeID( "null" );        var ref108 = new ActionReference();        var idPrpr = charIDToTypeID( "Prpr" );        var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );        ref108.putProperty( idPrpr, idparagraphStyle );        var idTxLr = charIDToTypeID( "TxLr" );        var idOrdn = charIDToTypeID( "Ordn" );        var idTrgt = charIDToTypeID( "Trgt" );        ref108.putEnumerated( idTxLr, idOrdn, idTrgt );    desc700.putReference( idnull, ref108 );    var idT = charIDToTypeID( "T   " );        var desc701 = new ActionDescriptor();        var idtextOverrideFeatureName = stringIDToTypeID( "textOverrideFeatureName" );        desc701.putInteger( idtextOverrideFeatureName, 808464433 );        var idAlgn = charIDToTypeID( "Algn" );        var idAlg = charIDToTypeID( "Alg " );        //var idjust = stringIDToTypeID(  );        desc701.putEnumerated( idAlgn, idAlg, strJust );    var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );    desc700.putObject( idT, idparagraphStyle, desc701 );executeAction( idsetd, desc700, DialogModes.NO );}function leading(isAuto,size){// =======================================================var idsetd = charIDToTypeID( "setd" );    var desc1702 = new ActionDescriptor();    var idnull = charIDToTypeID( "null" );        var ref696 = new ActionReference();        var idPrpr = charIDToTypeID( "Prpr" );        var idTxtS = charIDToTypeID( "TxtS" );        ref696.putProperty( idPrpr, idTxtS );        var idTxLr = charIDToTypeID( "TxLr" );        var idOrdn = charIDToTypeID( "Ordn" );        var idTrgt = charIDToTypeID( "Trgt" );        ref696.putEnumerated( idTxLr, idOrdn, idTrgt );    desc1702.putReference( idnull, ref696 );    var idT = charIDToTypeID( "T   " );        var desc1703 = new ActionDescriptor();        var idtextOverrideFeatureName = stringIDToTypeID( "textOverrideFeatureName" );        desc1703.putInteger( idtextOverrideFeatureName, 808465462 );        var idtypeStyleOperationType = stringIDToTypeID( "typeStyleOperationType" );        desc1703.putInteger( idtypeStyleOperationType, 3 );        var idautoLeading = stringIDToTypeID( "autoLeading" );        desc1703.putBoolean( idautoLeading, isAuto );        var idLdng = charIDToTypeID( "Ldng" );        var idPnt = charIDToTypeID( "#Pnt" );        desc1703.putUnitDouble( idLdng, idPnt,size);    var idTxtS = charIDToTypeID( "TxtS" );    desc1702.putObject( idT, idTxtS, desc1703 );executeAction( idsetd, desc1702, DialogModes.NO );}function fontType(fontName){// =======================================================var idsetd = charIDToTypeID( "setd" );    var desc1624 = new ActionDescriptor();    var idnull = charIDToTypeID( "null" );        var ref691 = new ActionReference();        var idPrpr = charIDToTypeID( "Prpr" );        var idTxtS = charIDToTypeID( "TxtS" );        ref691.putProperty( idPrpr, idTxtS );        var idTxLr = charIDToTypeID( "TxLr" );        var idOrdn = charIDToTypeID( "Ordn" );        var idTrgt = charIDToTypeID( "Trgt" );        ref691.putEnumerated( idTxLr, idOrdn, idTrgt );    desc1624.putReference( idnull, ref691 );    var idT = charIDToTypeID( "T   " );        var desc1625 = new ActionDescriptor();        var idtextOverrideFeatureName = stringIDToTypeID( "textOverrideFeatureName" );        desc1625.putInteger( idtextOverrideFeatureName, 808465457 );        var idtypeStyleOperationType = stringIDToTypeID( "typeStyleOperationType" );        desc1625.putInteger( idtypeStyleOperationType, 3 );        var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );        desc1625.putString( idfontPostScriptName, fontName );        var idFntN = charIDToTypeID( "FntN" );        desc1625.putString( idFntN, fontName );        var idFntS = charIDToTypeID( "FntS" );        desc1625.putString( idFntS, """Regular""" );        var idScrp = charIDToTypeID( "Scrp" );        desc1625.putInteger( idScrp, 25 );        var idFntT = charIDToTypeID( "FntT" );        desc1625.putInteger( idFntT, 1 );    var idTxtS = charIDToTypeID( "TxtS" );    desc1624.putObject( idT, idTxtS, desc1625 );executeAction( idsetd, desc1624, DialogModes.NO );}function fontSize(size){// =======================================================var idsetd = charIDToTypeID( "setd" );    var desc1622 = new ActionDescriptor();    var idnull = charIDToTypeID( "null" );        var ref690 = new ActionReference();        var idPrpr = charIDToTypeID( "Prpr" );        var idTxtS = charIDToTypeID( "TxtS" );        ref690.putProperty( idPrpr, idTxtS );        var idTxLr = charIDToTypeID( "TxLr" );        var idOrdn = charIDToTypeID( "Ordn" );        var idTrgt = charIDToTypeID( "Trgt" );        ref690.putEnumerated( idTxLr, idOrdn, idTrgt );    desc1622.putReference( idnull, ref690 );    var idT = charIDToTypeID( "T   " );        var desc1623 = new ActionDescriptor();        var idtextOverrideFeatureName = stringIDToTypeID( "textOverrideFeatureName" );        desc1623.putInteger( idtextOverrideFeatureName, 808465458 );        var idtypeStyleOperationType = stringIDToTypeID( "typeStyleOperationType" );        desc1623.putInteger( idtypeStyleOperationType, 3 );        var idSz = charIDToTypeID( "Sz  " );        var idPnt = charIDToTypeID( "#Pnt" );        desc1623.putUnitDouble( idSz, idPnt,size );    var idTxtS = charIDToTypeID( "TxtS" );    desc1622.putObject( idT, idTxtS, desc1623 );executeAction( idsetd, desc1622, DialogModes.NO );}function firstLineIndent(size){var idsetd = charIDToTypeID( "setd" );    var desc1241 = new ActionDescriptor();    var idnull = charIDToTypeID( "null" );        var ref672 = new ActionReference();        var idPrpr = charIDToTypeID( "Prpr" );        var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );        ref672.putProperty( idPrpr, idparagraphStyle );        var idTxLr = charIDToTypeID( "TxLr" );        var idOrdn = charIDToTypeID( "Ordn" );        var idTrgt = charIDToTypeID( "Trgt" );        ref672.putEnumerated( idTxLr, idOrdn, idTrgt );    desc1241.putReference( idnull, ref672 );    var idT = charIDToTypeID( "T   " );        var desc1242 = new ActionDescriptor();        var idtextOverrideFeatureName = stringIDToTypeID( "textOverrideFeatureName" );        desc1242.putInteger( idtextOverrideFeatureName, 808464434 );        var idfirstLineIndent = stringIDToTypeID( "firstLineIndent" );        var idPnt = charIDToTypeID( "#Pnt" );        desc1242.putUnitDouble( idfirstLineIndent, idPnt, size );    var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );    desc1241.putObject( idT, idparagraphStyle, desc1242 );executeAction( idsetd, desc1241, DialogModes.NO );}function kaiti(content,points){// =======================================================var idslct = charIDToTypeID( "slct" );    var desc1793 = new ActionDescriptor();    var idnull = charIDToTypeID( "null" );        var ref127 = new ActionReference();        var idmoveTool = stringIDToTypeID( "moveTool" );        ref127.putClass( idmoveTool );    desc1793.putReference( idnull, ref127 );    var iddontRecord = stringIDToTypeID( "dontRecord" );    desc1793.putBoolean( iddontRecord, true );    var idforceNotify = stringIDToTypeID( "forceNotify" );    desc1793.putBoolean( idforceNotify, true );executeAction( idslct, desc1793, DialogModes.NO );// =======================================================var idMk = charIDToTypeID( "Mk  " );    var desc1794 = new ActionDescriptor();    var idnull = charIDToTypeID( "null" );        var ref128 = new ActionReference();        var idTxLr = charIDToTypeID( "TxLr" );        ref128.putClass( idTxLr );    desc1794.putReference( idnull, ref128 );    var idUsng = charIDToTypeID( "Usng" );        var desc1795 = new ActionDescriptor();        var idTxt = charIDToTypeID( "Txt " );        desc1795.putString( idTxt, content);        var idwarp = stringIDToTypeID( "warp" );            var desc1796 = new ActionDescriptor();            var idwarpStyle = stringIDToTypeID( "warpStyle" );            var idwarpStyle = stringIDToTypeID( "warpStyle" );            var idwarpNone = stringIDToTypeID( "warpNone" );            desc1796.putEnumerated( idwarpStyle, idwarpStyle, idwarpNone );            var idwarpValue = stringIDToTypeID( "warpValue" );            desc1796.putDouble( idwarpValue, 0.000000 );            var idwarpPerspective = stringIDToTypeID( "warpPerspective" );            desc1796.putDouble( idwarpPerspective, 0.000000 );            var idwarpPerspectiveOther = stringIDToTypeID( "warpPerspectiveOther" );            desc1796.putDouble( idwarpPerspectiveOther, 0.000000 );            var idwarpRotate = stringIDToTypeID( "warpRotate" );            var idOrnt = charIDToTypeID( "Ornt" );            var idHrzn = charIDToTypeID( "Hrzn" );            desc1796.putEnumerated( idwarpRotate, idOrnt, idHrzn );        var idwarp = stringIDToTypeID( "warp" );        desc1795.putObject( idwarp, idwarp, desc1796 );        var idTxtC = charIDToTypeID( "TxtC" );            var desc1797 = new ActionDescriptor();            var idHrzn = charIDToTypeID( "Hrzn" );            var idPrc = charIDToTypeID( "#Prc" );            desc1797.putUnitDouble( idHrzn, idPrc, 0 );            var idVrtc = charIDToTypeID( "Vrtc" );            var idPrc = charIDToTypeID( "#Prc" );            desc1797.putUnitDouble( idVrtc, idPrc, 0 );        var idPnt = charIDToTypeID( "Pnt " );        desc1795.putObject( idTxtC, idPnt, desc1797 );        var idtextGridding = stringIDToTypeID( "textGridding" );        var idtextGridding = stringIDToTypeID( "textGridding" );        var idNone = charIDToTypeID( "None" );        desc1795.putEnumerated( idtextGridding, idtextGridding, idNone );        var idOrnt = charIDToTypeID( "Ornt" );        var idOrnt = charIDToTypeID( "Ornt" );        var idHrzn = charIDToTypeID( "Hrzn" );        desc1795.putEnumerated( idOrnt, idOrnt, idHrzn );        var idAntA = charIDToTypeID( "AntA" );        var idAnnt = charIDToTypeID( "Annt" );        var idAnSm = charIDToTypeID( "AnSm" );        desc1795.putEnumerated( idAntA, idAnnt, idAnSm );                      //>>shape        var idtextShape = stringIDToTypeID( "textShape" );            var list97 = new ActionList();                var desc535 = new ActionDescriptor();                                roundRect(desc535,points)                var idTEXT = charIDToTypeID( "TEXT" );                var idTEXT = charIDToTypeID( "TEXT" );                var idbox = stringIDToTypeID( "box" );                desc535.putEnumerated( idTEXT, idTEXT, idbox );                var idOrnt = charIDToTypeID( "Ornt" );                var idOrnt = charIDToTypeID( "Ornt" );                var idHrzn = charIDToTypeID( "Hrzn" );                desc535.putEnumerated( idOrnt, idOrnt, idHrzn );                var idTrnf = charIDToTypeID( "Trnf" );                    var desc536 = new ActionDescriptor();                    var idxx = stringIDToTypeID( "xx" );                    desc536.putDouble( idxx, 1.000000 );                    var idxy = stringIDToTypeID( "xy" );                    desc536.putDouble( idxy, 0.000000 );                    var idyx = stringIDToTypeID( "yx" );                    desc536.putDouble( idyx, 0.000000 );                    var idyy = stringIDToTypeID( "yy" );                    desc536.putDouble( idyy, 1.000000 );                    var idtx = stringIDToTypeID( "tx" );                    desc536.putDouble( idtx, 0.000000 );                    var idty = stringIDToTypeID( "ty" );                    desc536.putDouble( idty, 0.000000 );                var idTrnf = charIDToTypeID( "Trnf" );                desc535.putObject( idTrnf, idTrnf, desc536 );                var idrowCount = stringIDToTypeID( "rowCount" );                desc535.putInteger( idrowCount, 1 );                var idcolumnCount = stringIDToTypeID( "columnCount" );                desc535.putInteger( idcolumnCount, 1 );                var idrowMajorOrder = stringIDToTypeID( "rowMajorOrder" );                desc535.putBoolean( idrowMajorOrder, true );                var idrowGutter = stringIDToTypeID( "rowGutter" );                var idPnt = charIDToTypeID( "#Pnt" );                desc535.putUnitDouble( idrowGutter, idPnt, 0.000000 );                var idcolumnGutter = stringIDToTypeID( "columnGutter" );                var idPnt = charIDToTypeID( "#Pnt" );                desc535.putUnitDouble( idcolumnGutter, idPnt, 0.000000 );                var idSpcn = charIDToTypeID( "Spcn" );                var idPnt = charIDToTypeID( "#Pnt" );                desc535.putUnitDouble( idSpcn, idPnt, 0.000000 );                var idframeBaselineAlignment = stringIDToTypeID( "frameBaselineAlignment" );                var idframeBaselineAlignment = stringIDToTypeID( "frameBaselineAlignment" );                var idalignByAscent = stringIDToTypeID( "alignByAscent" );                desc535.putEnumerated( idframeBaselineAlignment, idframeBaselineAlignment, idalignByAscent );                var idfirstBaselineMinimum = stringIDToTypeID( "firstBaselineMinimum" );                var idPnt = charIDToTypeID( "#Pnt" );                desc535.putUnitDouble( idfirstBaselineMinimum, idPnt, 0.000000 );                var idbounds = stringIDToTypeID( "bounds" );                    var desc537 = new ActionDescriptor();                    var idTop = charIDToTypeID( "Top " );                    desc537.putDouble( idTop, 0.000000 );                    var idLeft = charIDToTypeID( "Left" );                    desc537.putDouble( idLeft, 0.000000 );                    var idBtom = charIDToTypeID( "Btom" );                    desc537.putDouble( idBtom, 0 );                    var idRght = charIDToTypeID( "Rght" );                    desc537.putDouble( idRght, 0 );                var idRctn = charIDToTypeID( "Rctn" );                desc535.putObject( idbounds, idRctn, desc537 );            var idtextShape = stringIDToTypeID( "textShape" );            list97.putObject( idtextShape, desc535 );            //<<<shape                        desc1795.putList( idtextShape, list97 );        var idTxtt = charIDToTypeID( "Txtt" );            var list104 = new ActionList();                var desc1812 = new ActionDescriptor();                var idFrom = charIDToTypeID( "From" );                desc1812.putInteger( idFrom, 0 );                var idT = charIDToTypeID( "T   " );                desc1812.putInteger( idT, 4614 );                var idTxtS = charIDToTypeID( "TxtS" );                    var desc1813 = new ActionDescriptor();                    var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );                    desc1813.putBoolean( idstyleSheetHasParent, true );                    var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );                    desc1813.putString( idfontPostScriptName, """KaiTi_GB2312""" );                    var idFntN = charIDToTypeID( "FntN" );                    desc1813.putString( idFntN, """KaiTi_GB2312""" );                    var idFntS = charIDToTypeID( "FntS" );                    desc1813.putString( idFntS, """Regular""" );                    var idScrp = charIDToTypeID( "Scrp" );                    desc1813.putInteger( idScrp, 25 );                    var idFntT = charIDToTypeID( "FntT" );                    desc1813.putInteger( idFntT, 1 );                    var idSz = charIDToTypeID( "Sz  " );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1813.putUnitDouble( idSz, idPnt, 13.795416 );                    var idHrzS = charIDToTypeID( "HrzS" );                    desc1813.putDouble( idHrzS, 100.000000 );                    var idVrtS = charIDToTypeID( "VrtS" );                    desc1813.putDouble( idVrtS, 100.000000 );                    var idsyntheticBold = stringIDToTypeID( "syntheticBold" );                    desc1813.putBoolean( idsyntheticBold, false );                    var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );                    desc1813.putBoolean( idsyntheticItalic, false );                    var idautoLeading = stringIDToTypeID( "autoLeading" );                    desc1813.putBoolean( idautoLeading, false );                    var idLdng = charIDToTypeID( "Ldng" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1813.putUnitDouble( idLdng, idPnt, 20.693126 );                    var idTrck = charIDToTypeID( "Trck" );                    desc1813.putInteger( idTrck, 0 );                    var idBsln = charIDToTypeID( "Bsln" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1813.putUnitDouble( idBsln, idPnt, 0.000000 );                    var idcharacterRotation = stringIDToTypeID( "characterRotation" );                    desc1813.putDouble( idcharacterRotation, 0.000000 );                    var idAtKr = charIDToTypeID( "AtKr" );                    var idAtKr = charIDToTypeID( "AtKr" );                    var idmanual = stringIDToTypeID( "manual" );                    desc1813.putEnumerated( idAtKr, idAtKr, idmanual );                    var idfontCaps = stringIDToTypeID( "fontCaps" );                    var idfontCaps = stringIDToTypeID( "fontCaps" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1813.putEnumerated( idfontCaps, idfontCaps, idNrml );                    var idbaseline = stringIDToTypeID( "baseline" );                    var idbaseline = stringIDToTypeID( "baseline" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1813.putEnumerated( idbaseline, idbaseline, idNrml );                    var idotbaseline = stringIDToTypeID( "otbaseline" );                    var idotbaseline = stringIDToTypeID( "otbaseline" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1813.putEnumerated( idotbaseline, idotbaseline, idNrml );                    var idstrikethrough = stringIDToTypeID( "strikethrough" );                    var idstrikethrough = stringIDToTypeID( "strikethrough" );                    var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );                    desc1813.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );                    var idUndl = charIDToTypeID( "Undl" );                    var idUndl = charIDToTypeID( "Undl" );                    var idunderlineOff = stringIDToTypeID( "underlineOff" );                    desc1813.putEnumerated( idUndl, idUndl, idunderlineOff );                    var idunderlineOffset = stringIDToTypeID( "underlineOffset" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1813.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );                    var idligature = stringIDToTypeID( "ligature" );                    desc1813.putBoolean( idligature, false );                    var idaltligature = stringIDToTypeID( "altligature" );                    desc1813.putBoolean( idaltligature, false );                    var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );                    desc1813.putBoolean( idcontextualLigatures, false );                    var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );                    desc1813.putBoolean( idalternateLigatures, false );                    var idoldStyle = stringIDToTypeID( "oldStyle" );                    desc1813.putBoolean( idoldStyle, false );                    var idfractions = stringIDToTypeID( "fractions" );                    desc1813.putBoolean( idfractions, false );                    var idordinals = stringIDToTypeID( "ordinals" );                    desc1813.putBoolean( idordinals, false );                    var idswash = stringIDToTypeID( "swash" );                    desc1813.putBoolean( idswash, false );                    var idtitling = stringIDToTypeID( "titling" );                    desc1813.putBoolean( idtitling, false );                    var idconnectionForms = stringIDToTypeID( "connectionForms" );                    desc1813.putBoolean( idconnectionForms, true );                    var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );                    desc1813.putBoolean( idstylisticAlternates, false );                    var idornaments = stringIDToTypeID( "ornaments" );                    desc1813.putBoolean( idornaments, false );                    var idfigureStyle = stringIDToTypeID( "figureStyle" );                    var idfigureStyle = stringIDToTypeID( "figureStyle" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1813.putEnumerated( idfigureStyle, idfigureStyle, idNrml );                    var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );                    desc1813.putBoolean( idproportionalMetrics, false );                    var idkana = stringIDToTypeID( "kana" );                    desc1813.putBoolean( idkana, false );                    var iditalics = stringIDToTypeID( "italics" );                    desc1813.putBoolean( iditalics, false );                    var idruby = stringIDToTypeID( "ruby" );                    desc1813.putBoolean( idruby, false );                    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                    var idrotated = stringIDToTypeID( "rotated" );                    desc1813.putEnumerated( idbaselineDirection, idbaselineDirection, idrotated );                    var idtextLanguage = stringIDToTypeID( "textLanguage" );                    var idtextLanguage = stringIDToTypeID( "textLanguage" );                    var idenglishLanguage = stringIDToTypeID( "englishLanguage" );                    desc1813.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );                    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );                    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );                    var iddefaultForm = stringIDToTypeID( "defaultForm" );                    desc1813.putEnumerated( idjapaneseAlternate, idjapaneseAlternate, iddefaultForm );                    var idmojiZume = stringIDToTypeID( "mojiZume" );                    desc1813.putDouble( idmojiZume, 0.300000 );                    var idgridAlignment = stringIDToTypeID( "gridAlignment" );                    var idgridAlignment = stringIDToTypeID( "gridAlignment" );                    var idroman = stringIDToTypeID( "roman" );                    desc1813.putEnumerated( idgridAlignment, idgridAlignment, idroman );                    var idenableWariChu = stringIDToTypeID( "enableWariChu" );                    desc1813.putBoolean( idenableWariChu, false );                    var idwariChuCount = stringIDToTypeID( "wariChuCount" );                    desc1813.putInteger( idwariChuCount, 2 );                    var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );                    desc1813.putInteger( idwariChuLineGap, 0 );                    var idwariChuScale = stringIDToTypeID( "wariChuScale" );                    desc1813.putDouble( idwariChuScale, 0.500000 );                    var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );                    desc1813.putInteger( idwariChuWidow, 2 );                    var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );                    desc1813.putInteger( idwariChuOrphan, 2 );                    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                    var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );                    desc1813.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );                    var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );                    desc1813.putInteger( idtcyUpDown, 0 );                    var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );                    desc1813.putInteger( idtcyLeftRight, 0 );                    var idleftAki = stringIDToTypeID( "leftAki" );                    desc1813.putDouble( idleftAki, -1.000000 );                    var idrightAki = stringIDToTypeID( "rightAki" );                    desc1813.putDouble( idrightAki, -1.000000 );                    var idjiDori = stringIDToTypeID( "jiDori" );                    desc1813.putInteger( idjiDori, 0 );                    var idnoBreak = stringIDToTypeID( "noBreak" );                    desc1813.putBoolean( idnoBreak, false );                    var idClr = charIDToTypeID( "Clr " );                        var desc1814 = new ActionDescriptor();                        var idCyn = charIDToTypeID( "Cyn " );                        desc1814.putDouble( idCyn, 74.520000 );                        var idMgnt = charIDToTypeID( "Mgnt" );                        desc1814.putDouble( idMgnt, 67.780000 );                        var idYlw = charIDToTypeID( "Ylw " );                        desc1814.putDouble( idYlw, 67.130000 );                        var idBlck = charIDToTypeID( "Blck" );                        desc1814.putDouble( idBlck, 89.630000 );                    var idCMYC = charIDToTypeID( "CMYC" );                    desc1813.putObject( idClr, idCMYC, desc1814 );                    var idstrokeColor = stringIDToTypeID( "strokeColor" );                        var desc1815 = new ActionDescriptor();                        var idCyn = charIDToTypeID( "Cyn " );                        desc1815.putDouble( idCyn, 0.000000 );                        var idMgnt = charIDToTypeID( "Mgnt" );                        desc1815.putDouble( idMgnt, 0.000000 );                        var idYlw = charIDToTypeID( "Ylw " );                        desc1815.putDouble( idYlw, 0.000000 );                        var idBlck = charIDToTypeID( "Blck" );                        desc1815.putDouble( idBlck, 0.000000 );                    var idCMYC = charIDToTypeID( "CMYC" );                    desc1813.putObject( idstrokeColor, idCMYC, desc1815 );                    var idFl = charIDToTypeID( "Fl  " );                    desc1813.putBoolean( idFl, true );                    var idStrk = charIDToTypeID( "Strk" );                    desc1813.putBoolean( idStrk, false );                    var idfillFirst = stringIDToTypeID( "fillFirst" );                    desc1813.putBoolean( idfillFirst, false );                    var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );                    desc1813.putBoolean( idfillOverPrint, false );                    var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );                    desc1813.putBoolean( idstrokeOverPrint, false );                    var idlineCap = stringIDToTypeID( "lineCap" );                    var idlineCap = stringIDToTypeID( "lineCap" );                    var idbuttCap = stringIDToTypeID( "buttCap" );                    desc1813.putEnumerated( idlineCap, idlineCap, idbuttCap );                    var idlineJoin = stringIDToTypeID( "lineJoin" );                    var idlineJoin = stringIDToTypeID( "lineJoin" );                    var idmiterJoin = stringIDToTypeID( "miterJoin" );                    desc1813.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );                    var idlineWidth = stringIDToTypeID( "lineWidth" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1813.putUnitDouble( idlineWidth, idPnt, 0.057600 );                    var idmiterLimit = stringIDToTypeID( "miterLimit" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1813.putUnitDouble( idmiterLimit, idPnt, 0.230400 );                    var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );                    desc1813.putDouble( idlineDashoffset, 0.000000 );                var idTxtS = charIDToTypeID( "TxtS" );                desc1812.putObject( idTxtS, idTxtS, desc1813 );            var idTxtt = charIDToTypeID( "Txtt" );            list104.putObject( idTxtt, desc1812 );                var desc1816 = new ActionDescriptor();                var idFrom = charIDToTypeID( "From" );                desc1816.putInteger( idFrom, 0 );                var idT = charIDToTypeID( "T   " );                desc1816.putInteger( idT, 4614 );                var idTxtS = charIDToTypeID( "TxtS" );                    var desc1817 = new ActionDescriptor();                    var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );                    desc1817.putBoolean( idstyleSheetHasParent, true );                    var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );                    desc1817.putString( idfontPostScriptName, """KaiTi_GB2312""" );                    var idFntN = charIDToTypeID( "FntN" );                    desc1817.putString( idFntN, """KaiTi_GB2312""" );                    var idFntS = charIDToTypeID( "FntS" );                    desc1817.putString( idFntS, """Regular""" );                    var idScrp = charIDToTypeID( "Scrp" );                    desc1817.putInteger( idScrp, 25 );                    var idFntT = charIDToTypeID( "FntT" );                    desc1817.putInteger( idFntT, 1 );                    var idSz = charIDToTypeID( "Sz  " );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1817.putUnitDouble( idSz, idPnt, 13.795416 );                    var idHrzS = charIDToTypeID( "HrzS" );                    desc1817.putDouble( idHrzS, 100.000000 );                    var idVrtS = charIDToTypeID( "VrtS" );                    desc1817.putDouble( idVrtS, 100.000000 );                    var idsyntheticBold = stringIDToTypeID( "syntheticBold" );                    desc1817.putBoolean( idsyntheticBold, false );                    var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );                    desc1817.putBoolean( idsyntheticItalic, false );                    var idautoLeading = stringIDToTypeID( "autoLeading" );                    desc1817.putBoolean( idautoLeading, false );                    var idLdng = charIDToTypeID( "Ldng" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1817.putUnitDouble( idLdng, idPnt, 20.693126 );                    var idTrck = charIDToTypeID( "Trck" );                    desc1817.putInteger( idTrck, 0 );                    var idBsln = charIDToTypeID( "Bsln" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1817.putUnitDouble( idBsln, idPnt, 0.000000 );                    var idcharacterRotation = stringIDToTypeID( "characterRotation" );                    desc1817.putDouble( idcharacterRotation, 0.000000 );                    var idAtKr = charIDToTypeID( "AtKr" );                    var idAtKr = charIDToTypeID( "AtKr" );                    var idmanual = stringIDToTypeID( "manual" );                    desc1817.putEnumerated( idAtKr, idAtKr, idmanual );                    var idfontCaps = stringIDToTypeID( "fontCaps" );                    var idfontCaps = stringIDToTypeID( "fontCaps" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1817.putEnumerated( idfontCaps, idfontCaps, idNrml );                    var idbaseline = stringIDToTypeID( "baseline" );                    var idbaseline = stringIDToTypeID( "baseline" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1817.putEnumerated( idbaseline, idbaseline, idNrml );                    var idotbaseline = stringIDToTypeID( "otbaseline" );                    var idotbaseline = stringIDToTypeID( "otbaseline" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1817.putEnumerated( idotbaseline, idotbaseline, idNrml );                    var idstrikethrough = stringIDToTypeID( "strikethrough" );                    var idstrikethrough = stringIDToTypeID( "strikethrough" );                    var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );                    desc1817.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );                    var idUndl = charIDToTypeID( "Undl" );                    var idUndl = charIDToTypeID( "Undl" );                    var idunderlineOff = stringIDToTypeID( "underlineOff" );                    desc1817.putEnumerated( idUndl, idUndl, idunderlineOff );                    var idunderlineOffset = stringIDToTypeID( "underlineOffset" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1817.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );                    var idligature = stringIDToTypeID( "ligature" );                    desc1817.putBoolean( idligature, false );                    var idaltligature = stringIDToTypeID( "altligature" );                    desc1817.putBoolean( idaltligature, false );                    var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );                    desc1817.putBoolean( idcontextualLigatures, false );                    var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );                    desc1817.putBoolean( idalternateLigatures, false );                    var idoldStyle = stringIDToTypeID( "oldStyle" );                    desc1817.putBoolean( idoldStyle, false );                    var idfractions = stringIDToTypeID( "fractions" );                    desc1817.putBoolean( idfractions, false );                    var idordinals = stringIDToTypeID( "ordinals" );                    desc1817.putBoolean( idordinals, false );                    var idswash = stringIDToTypeID( "swash" );                    desc1817.putBoolean( idswash, false );                    var idtitling = stringIDToTypeID( "titling" );                    desc1817.putBoolean( idtitling, false );                    var idconnectionForms = stringIDToTypeID( "connectionForms" );                    desc1817.putBoolean( idconnectionForms, true );                    var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );                    desc1817.putBoolean( idstylisticAlternates, false );                    var idornaments = stringIDToTypeID( "ornaments" );                    desc1817.putBoolean( idornaments, false );                    var idfigureStyle = stringIDToTypeID( "figureStyle" );                    var idfigureStyle = stringIDToTypeID( "figureStyle" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1817.putEnumerated( idfigureStyle, idfigureStyle, idNrml );                    var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );                    desc1817.putBoolean( idproportionalMetrics, false );                    var idkana = stringIDToTypeID( "kana" );                    desc1817.putBoolean( idkana, false );                    var iditalics = stringIDToTypeID( "italics" );                    desc1817.putBoolean( iditalics, false );                    var idruby = stringIDToTypeID( "ruby" );                    desc1817.putBoolean( idruby, false );                    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                    var idrotated = stringIDToTypeID( "rotated" );                    desc1817.putEnumerated( idbaselineDirection, idbaselineDirection, idrotated );                    var idtextLanguage = stringIDToTypeID( "textLanguage" );                    var idtextLanguage = stringIDToTypeID( "textLanguage" );                    var idenglishLanguage = stringIDToTypeID( "englishLanguage" );                    desc1817.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );                    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );                    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );                    var iddefaultForm = stringIDToTypeID( "defaultForm" );                    desc1817.putEnumerated( idjapaneseAlternate, idjapaneseAlternate, iddefaultForm );                    var idmojiZume = stringIDToTypeID( "mojiZume" );                    desc1817.putDouble( idmojiZume, 0.300000 );                    var idgridAlignment = stringIDToTypeID( "gridAlignment" );                    var idgridAlignment = stringIDToTypeID( "gridAlignment" );                    var idroman = stringIDToTypeID( "roman" );                    desc1817.putEnumerated( idgridAlignment, idgridAlignment, idroman );                    var idenableWariChu = stringIDToTypeID( "enableWariChu" );                    desc1817.putBoolean( idenableWariChu, false );                    var idwariChuCount = stringIDToTypeID( "wariChuCount" );                    desc1817.putInteger( idwariChuCount, 2 );                    var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );                    desc1817.putInteger( idwariChuLineGap, 0 );                    var idwariChuScale = stringIDToTypeID( "wariChuScale" );                    desc1817.putDouble( idwariChuScale, 0.500000 );                    var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );                    desc1817.putInteger( idwariChuWidow, 2 );                    var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );                    desc1817.putInteger( idwariChuOrphan, 2 );                    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                    var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );                    desc1817.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );                    var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );                    desc1817.putInteger( idtcyUpDown, 0 );                    var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );                    desc1817.putInteger( idtcyLeftRight, 0 );                    var idleftAki = stringIDToTypeID( "leftAki" );                    desc1817.putDouble( idleftAki, -1.000000 );                    var idrightAki = stringIDToTypeID( "rightAki" );                    desc1817.putDouble( idrightAki, -1.000000 );                    var idjiDori = stringIDToTypeID( "jiDori" );                    desc1817.putInteger( idjiDori, 0 );                    var idnoBreak = stringIDToTypeID( "noBreak" );                    desc1817.putBoolean( idnoBreak, false );                    var idClr = charIDToTypeID( "Clr " );                        var desc1818 = new ActionDescriptor();                        var idCyn = charIDToTypeID( "Cyn " );                        desc1818.putDouble( idCyn, 74.520000 );                        var idMgnt = charIDToTypeID( "Mgnt" );                        desc1818.putDouble( idMgnt, 67.780000 );                        var idYlw = charIDToTypeID( "Ylw " );                        desc1818.putDouble( idYlw, 67.130000 );                        var idBlck = charIDToTypeID( "Blck" );                        desc1818.putDouble( idBlck, 89.630000 );                    var idCMYC = charIDToTypeID( "CMYC" );                    desc1817.putObject( idClr, idCMYC, desc1818 );                    var idstrokeColor = stringIDToTypeID( "strokeColor" );                        var desc1819 = new ActionDescriptor();                        var idCyn = charIDToTypeID( "Cyn " );                        desc1819.putDouble( idCyn, 0.000000 );                        var idMgnt = charIDToTypeID( "Mgnt" );                        desc1819.putDouble( idMgnt, 0.000000 );                        var idYlw = charIDToTypeID( "Ylw " );                        desc1819.putDouble( idYlw, 0.000000 );                        var idBlck = charIDToTypeID( "Blck" );                        desc1819.putDouble( idBlck, 0.000000 );                    var idCMYC = charIDToTypeID( "CMYC" );                    desc1817.putObject( idstrokeColor, idCMYC, desc1819 );                    var idFl = charIDToTypeID( "Fl  " );                    desc1817.putBoolean( idFl, true );                    var idStrk = charIDToTypeID( "Strk" );                    desc1817.putBoolean( idStrk, false );                    var idfillFirst = stringIDToTypeID( "fillFirst" );                    desc1817.putBoolean( idfillFirst, false );                    var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );                    desc1817.putBoolean( idfillOverPrint, false );                    var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );                    desc1817.putBoolean( idstrokeOverPrint, false );                    var idlineCap = stringIDToTypeID( "lineCap" );                    var idlineCap = stringIDToTypeID( "lineCap" );                    var idbuttCap = stringIDToTypeID( "buttCap" );                    desc1817.putEnumerated( idlineCap, idlineCap, idbuttCap );                    var idlineJoin = stringIDToTypeID( "lineJoin" );                    var idlineJoin = stringIDToTypeID( "lineJoin" );                    var idmiterJoin = stringIDToTypeID( "miterJoin" );                    desc1817.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );                    var idlineWidth = stringIDToTypeID( "lineWidth" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1817.putUnitDouble( idlineWidth, idPnt, 0.057600 );                    var idmiterLimit = stringIDToTypeID( "miterLimit" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1817.putUnitDouble( idmiterLimit, idPnt, 0.230400 );                    var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );                    desc1817.putDouble( idlineDashoffset, 0.000000 );                var idTxtS = charIDToTypeID( "TxtS" );                desc1816.putObject( idTxtS, idTxtS, desc1817 );            var idTxtt = charIDToTypeID( "Txtt" );            list104.putObject( idTxtt, desc1816 );                var desc1820 = new ActionDescriptor();                var idFrom = charIDToTypeID( "From" );                desc1820.putInteger( idFrom, 0 );                var idT = charIDToTypeID( "T   " );                desc1820.putInteger( idT, 4614 );                var idTxtS = charIDToTypeID( "TxtS" );                    var desc1821 = new ActionDescriptor();                    var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );                    desc1821.putBoolean( idstyleSheetHasParent, true );                    var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );                    desc1821.putString( idfontPostScriptName, """KaiTi_GB2312""" );                    var idFntN = charIDToTypeID( "FntN" );                    desc1821.putString( idFntN, """KaiTi_GB2312""" );                    var idFntS = charIDToTypeID( "FntS" );                    desc1821.putString( idFntS, """Regular""" );                    var idScrp = charIDToTypeID( "Scrp" );                    desc1821.putInteger( idScrp, 25 );                    var idFntT = charIDToTypeID( "FntT" );                    desc1821.putInteger( idFntT, 1 );                    var idSz = charIDToTypeID( "Sz  " );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1821.putUnitDouble( idSz, idPnt, 13.795416 );                    var idHrzS = charIDToTypeID( "HrzS" );                    desc1821.putDouble( idHrzS, 100.000000 );                    var idVrtS = charIDToTypeID( "VrtS" );                    desc1821.putDouble( idVrtS, 100.000000 );                    var idsyntheticBold = stringIDToTypeID( "syntheticBold" );                    desc1821.putBoolean( idsyntheticBold, false );                    var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );                    desc1821.putBoolean( idsyntheticItalic, false );                    var idautoLeading = stringIDToTypeID( "autoLeading" );                    desc1821.putBoolean( idautoLeading, false );                    var idLdng = charIDToTypeID( "Ldng" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1821.putUnitDouble( idLdng, idPnt, 20.693126 );                    var idTrck = charIDToTypeID( "Trck" );                    desc1821.putInteger( idTrck, 0 );                    var idBsln = charIDToTypeID( "Bsln" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1821.putUnitDouble( idBsln, idPnt, 0.000000 );                    var idcharacterRotation = stringIDToTypeID( "characterRotation" );                    desc1821.putDouble( idcharacterRotation, 0.000000 );                    var idAtKr = charIDToTypeID( "AtKr" );                    var idAtKr = charIDToTypeID( "AtKr" );                    var idmanual = stringIDToTypeID( "manual" );                    desc1821.putEnumerated( idAtKr, idAtKr, idmanual );                    var idfontCaps = stringIDToTypeID( "fontCaps" );                    var idfontCaps = stringIDToTypeID( "fontCaps" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1821.putEnumerated( idfontCaps, idfontCaps, idNrml );                    var idbaseline = stringIDToTypeID( "baseline" );                    var idbaseline = stringIDToTypeID( "baseline" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1821.putEnumerated( idbaseline, idbaseline, idNrml );                    var idotbaseline = stringIDToTypeID( "otbaseline" );                    var idotbaseline = stringIDToTypeID( "otbaseline" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1821.putEnumerated( idotbaseline, idotbaseline, idNrml );                    var idstrikethrough = stringIDToTypeID( "strikethrough" );                    var idstrikethrough = stringIDToTypeID( "strikethrough" );                    var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );                    desc1821.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );                    var idUndl = charIDToTypeID( "Undl" );                    var idUndl = charIDToTypeID( "Undl" );                    var idunderlineOff = stringIDToTypeID( "underlineOff" );                    desc1821.putEnumerated( idUndl, idUndl, idunderlineOff );                    var idunderlineOffset = stringIDToTypeID( "underlineOffset" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1821.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );                    var idligature = stringIDToTypeID( "ligature" );                    desc1821.putBoolean( idligature, false );                    var idaltligature = stringIDToTypeID( "altligature" );                    desc1821.putBoolean( idaltligature, false );                    var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );                    desc1821.putBoolean( idcontextualLigatures, false );                    var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );                    desc1821.putBoolean( idalternateLigatures, false );                    var idoldStyle = stringIDToTypeID( "oldStyle" );                    desc1821.putBoolean( idoldStyle, false );                    var idfractions = stringIDToTypeID( "fractions" );                    desc1821.putBoolean( idfractions, false );                    var idordinals = stringIDToTypeID( "ordinals" );                    desc1821.putBoolean( idordinals, false );                    var idswash = stringIDToTypeID( "swash" );                    desc1821.putBoolean( idswash, false );                    var idtitling = stringIDToTypeID( "titling" );                    desc1821.putBoolean( idtitling, false );                    var idconnectionForms = stringIDToTypeID( "connectionForms" );                    desc1821.putBoolean( idconnectionForms, true );                    var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );                    desc1821.putBoolean( idstylisticAlternates, false );                    var idornaments = stringIDToTypeID( "ornaments" );                    desc1821.putBoolean( idornaments, false );                    var idfigureStyle = stringIDToTypeID( "figureStyle" );                    var idfigureStyle = stringIDToTypeID( "figureStyle" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1821.putEnumerated( idfigureStyle, idfigureStyle, idNrml );                    var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );                    desc1821.putBoolean( idproportionalMetrics, false );                    var idkana = stringIDToTypeID( "kana" );                    desc1821.putBoolean( idkana, false );                    var iditalics = stringIDToTypeID( "italics" );                    desc1821.putBoolean( iditalics, false );                    var idruby = stringIDToTypeID( "ruby" );                    desc1821.putBoolean( idruby, false );                    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                    var idrotated = stringIDToTypeID( "rotated" );                    desc1821.putEnumerated( idbaselineDirection, idbaselineDirection, idrotated );                    var idtextLanguage = stringIDToTypeID( "textLanguage" );                    var idtextLanguage = stringIDToTypeID( "textLanguage" );                    var idenglishLanguage = stringIDToTypeID( "englishLanguage" );                    desc1821.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );                    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );                    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );                    var iddefaultForm = stringIDToTypeID( "defaultForm" );                    desc1821.putEnumerated( idjapaneseAlternate, idjapaneseAlternate, iddefaultForm );                    var idmojiZume = stringIDToTypeID( "mojiZume" );                    desc1821.putDouble( idmojiZume, 0.300000 );                    var idgridAlignment = stringIDToTypeID( "gridAlignment" );                    var idgridAlignment = stringIDToTypeID( "gridAlignment" );                    var idroman = stringIDToTypeID( "roman" );                    desc1821.putEnumerated( idgridAlignment, idgridAlignment, idroman );                    var idenableWariChu = stringIDToTypeID( "enableWariChu" );                    desc1821.putBoolean( idenableWariChu, false );                    var idwariChuCount = stringIDToTypeID( "wariChuCount" );                    desc1821.putInteger( idwariChuCount, 2 );                    var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );                    desc1821.putInteger( idwariChuLineGap, 0 );                    var idwariChuScale = stringIDToTypeID( "wariChuScale" );                    desc1821.putDouble( idwariChuScale, 0.500000 );                    var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );                    desc1821.putInteger( idwariChuWidow, 2 );                    var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );                    desc1821.putInteger( idwariChuOrphan, 2 );                    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                    var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );                    desc1821.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );                    var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );                    desc1821.putInteger( idtcyUpDown, 0 );                    var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );                    desc1821.putInteger( idtcyLeftRight, 0 );                    var idleftAki = stringIDToTypeID( "leftAki" );                    desc1821.putDouble( idleftAki, -1.000000 );                    var idrightAki = stringIDToTypeID( "rightAki" );                    desc1821.putDouble( idrightAki, -1.000000 );                    var idjiDori = stringIDToTypeID( "jiDori" );                    desc1821.putInteger( idjiDori, 0 );                    var idnoBreak = stringIDToTypeID( "noBreak" );                    desc1821.putBoolean( idnoBreak, false );                    var idClr = charIDToTypeID( "Clr " );                        var desc1822 = new ActionDescriptor();                        var idCyn = charIDToTypeID( "Cyn " );                        desc1822.putDouble( idCyn, 74.520000 );                        var idMgnt = charIDToTypeID( "Mgnt" );                        desc1822.putDouble( idMgnt, 67.780000 );                        var idYlw = charIDToTypeID( "Ylw " );                        desc1822.putDouble( idYlw, 67.130000 );                        var idBlck = charIDToTypeID( "Blck" );                        desc1822.putDouble( idBlck, 89.630000 );                    var idCMYC = charIDToTypeID( "CMYC" );                    desc1821.putObject( idClr, idCMYC, desc1822 );                    var idstrokeColor = stringIDToTypeID( "strokeColor" );                        var desc1823 = new ActionDescriptor();                        var idCyn = charIDToTypeID( "Cyn " );                        desc1823.putDouble( idCyn, 0.000000 );                        var idMgnt = charIDToTypeID( "Mgnt" );                        desc1823.putDouble( idMgnt, 0.000000 );                        var idYlw = charIDToTypeID( "Ylw " );                        desc1823.putDouble( idYlw, 0.000000 );                        var idBlck = charIDToTypeID( "Blck" );                        desc1823.putDouble( idBlck, 0.000000 );                    var idCMYC = charIDToTypeID( "CMYC" );                    desc1821.putObject( idstrokeColor, idCMYC, desc1823 );                    var idFl = charIDToTypeID( "Fl  " );                    desc1821.putBoolean( idFl, true );                    var idStrk = charIDToTypeID( "Strk" );                    desc1821.putBoolean( idStrk, false );                    var idfillFirst = stringIDToTypeID( "fillFirst" );                    desc1821.putBoolean( idfillFirst, false );                    var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );                    desc1821.putBoolean( idfillOverPrint, false );                    var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );                    desc1821.putBoolean( idstrokeOverPrint, false );                    var idlineCap = stringIDToTypeID( "lineCap" );                    var idlineCap = stringIDToTypeID( "lineCap" );                    var idbuttCap = stringIDToTypeID( "buttCap" );                    desc1821.putEnumerated( idlineCap, idlineCap, idbuttCap );                    var idlineJoin = stringIDToTypeID( "lineJoin" );                    var idlineJoin = stringIDToTypeID( "lineJoin" );                    var idmiterJoin = stringIDToTypeID( "miterJoin" );                    desc1821.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );                    var idlineWidth = stringIDToTypeID( "lineWidth" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1821.putUnitDouble( idlineWidth, idPnt, 0.057600 );                    var idmiterLimit = stringIDToTypeID( "miterLimit" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1821.putUnitDouble( idmiterLimit, idPnt, 0.230400 );                    var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );                    desc1821.putDouble( idlineDashoffset, 0.000000 );                var idTxtS = charIDToTypeID( "TxtS" );                desc1820.putObject( idTxtS, idTxtS, desc1821 );            var idTxtt = charIDToTypeID( "Txtt" );            list104.putObject( idTxtt, desc1820 );                var desc1824 = new ActionDescriptor();                var idFrom = charIDToTypeID( "From" );                desc1824.putInteger( idFrom, 0 );                var idT = charIDToTypeID( "T   " );                desc1824.putInteger( idT, 4614 );                var idTxtS = charIDToTypeID( "TxtS" );                    var desc1825 = new ActionDescriptor();                    var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );                    desc1825.putBoolean( idstyleSheetHasParent, true );                    var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );                    desc1825.putString( idfontPostScriptName, """KaiTi_GB2312""" );                    var idFntN = charIDToTypeID( "FntN" );                    desc1825.putString( idFntN, """KaiTi_GB2312""" );                    var idFntS = charIDToTypeID( "FntS" );                    desc1825.putString( idFntS, """Regular""" );                    var idScrp = charIDToTypeID( "Scrp" );                    desc1825.putInteger( idScrp, 25 );                    var idFntT = charIDToTypeID( "FntT" );                    desc1825.putInteger( idFntT, 1 );                    var idSz = charIDToTypeID( "Sz  " );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1825.putUnitDouble( idSz, idPnt, 13.795416 );                    var idHrzS = charIDToTypeID( "HrzS" );                    desc1825.putDouble( idHrzS, 100.000000 );                    var idVrtS = charIDToTypeID( "VrtS" );                    desc1825.putDouble( idVrtS, 100.000000 );                    var idsyntheticBold = stringIDToTypeID( "syntheticBold" );                    desc1825.putBoolean( idsyntheticBold, false );                    var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );                    desc1825.putBoolean( idsyntheticItalic, false );                    var idautoLeading = stringIDToTypeID( "autoLeading" );                    desc1825.putBoolean( idautoLeading, false );                    var idLdng = charIDToTypeID( "Ldng" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1825.putUnitDouble( idLdng, idPnt, 20.693126 );                    var idTrck = charIDToTypeID( "Trck" );                    desc1825.putInteger( idTrck, 0 );                    var idBsln = charIDToTypeID( "Bsln" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1825.putUnitDouble( idBsln, idPnt, 0.000000 );                    var idcharacterRotation = stringIDToTypeID( "characterRotation" );                    desc1825.putDouble( idcharacterRotation, 0.000000 );                    var idAtKr = charIDToTypeID( "AtKr" );                    var idAtKr = charIDToTypeID( "AtKr" );                    var idmanual = stringIDToTypeID( "manual" );                    desc1825.putEnumerated( idAtKr, idAtKr, idmanual );                    var idfontCaps = stringIDToTypeID( "fontCaps" );                    var idfontCaps = stringIDToTypeID( "fontCaps" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1825.putEnumerated( idfontCaps, idfontCaps, idNrml );                    var idbaseline = stringIDToTypeID( "baseline" );                    var idbaseline = stringIDToTypeID( "baseline" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1825.putEnumerated( idbaseline, idbaseline, idNrml );                    var idotbaseline = stringIDToTypeID( "otbaseline" );                    var idotbaseline = stringIDToTypeID( "otbaseline" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1825.putEnumerated( idotbaseline, idotbaseline, idNrml );                    var idstrikethrough = stringIDToTypeID( "strikethrough" );                    var idstrikethrough = stringIDToTypeID( "strikethrough" );                    var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );                    desc1825.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );                    var idUndl = charIDToTypeID( "Undl" );                    var idUndl = charIDToTypeID( "Undl" );                    var idunderlineOff = stringIDToTypeID( "underlineOff" );                    desc1825.putEnumerated( idUndl, idUndl, idunderlineOff );                    var idunderlineOffset = stringIDToTypeID( "underlineOffset" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1825.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );                    var idligature = stringIDToTypeID( "ligature" );                    desc1825.putBoolean( idligature, false );                    var idaltligature = stringIDToTypeID( "altligature" );                    desc1825.putBoolean( idaltligature, false );                    var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );                    desc1825.putBoolean( idcontextualLigatures, false );                    var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );                    desc1825.putBoolean( idalternateLigatures, false );                    var idoldStyle = stringIDToTypeID( "oldStyle" );                    desc1825.putBoolean( idoldStyle, false );                    var idfractions = stringIDToTypeID( "fractions" );                    desc1825.putBoolean( idfractions, false );                    var idordinals = stringIDToTypeID( "ordinals" );                    desc1825.putBoolean( idordinals, false );                    var idswash = stringIDToTypeID( "swash" );                    desc1825.putBoolean( idswash, false );                    var idtitling = stringIDToTypeID( "titling" );                    desc1825.putBoolean( idtitling, false );                    var idconnectionForms = stringIDToTypeID( "connectionForms" );                    desc1825.putBoolean( idconnectionForms, true );                    var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );                    desc1825.putBoolean( idstylisticAlternates, false );                    var idornaments = stringIDToTypeID( "ornaments" );                    desc1825.putBoolean( idornaments, false );                    var idfigureStyle = stringIDToTypeID( "figureStyle" );                    var idfigureStyle = stringIDToTypeID( "figureStyle" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1825.putEnumerated( idfigureStyle, idfigureStyle, idNrml );                    var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );                    desc1825.putBoolean( idproportionalMetrics, false );                    var idkana = stringIDToTypeID( "kana" );                    desc1825.putBoolean( idkana, false );                    var iditalics = stringIDToTypeID( "italics" );                    desc1825.putBoolean( iditalics, false );                    var idruby = stringIDToTypeID( "ruby" );                    desc1825.putBoolean( idruby, false );                    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                    var idrotated = stringIDToTypeID( "rotated" );                    desc1825.putEnumerated( idbaselineDirection, idbaselineDirection, idrotated );                    var idtextLanguage = stringIDToTypeID( "textLanguage" );                    var idtextLanguage = stringIDToTypeID( "textLanguage" );                    var idenglishLanguage = stringIDToTypeID( "englishLanguage" );                    desc1825.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );                    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );                    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );                    var iddefaultForm = stringIDToTypeID( "defaultForm" );                    desc1825.putEnumerated( idjapaneseAlternate, idjapaneseAlternate, iddefaultForm );                    var idmojiZume = stringIDToTypeID( "mojiZume" );                    desc1825.putDouble( idmojiZume, 0.300000 );                    var idgridAlignment = stringIDToTypeID( "gridAlignment" );                    var idgridAlignment = stringIDToTypeID( "gridAlignment" );                    var idroman = stringIDToTypeID( "roman" );                    desc1825.putEnumerated( idgridAlignment, idgridAlignment, idroman );                    var idenableWariChu = stringIDToTypeID( "enableWariChu" );                    desc1825.putBoolean( idenableWariChu, false );                    var idwariChuCount = stringIDToTypeID( "wariChuCount" );                    desc1825.putInteger( idwariChuCount, 2 );                    var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );                    desc1825.putInteger( idwariChuLineGap, 0 );                    var idwariChuScale = stringIDToTypeID( "wariChuScale" );                    desc1825.putDouble( idwariChuScale, 0.500000 );                    var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );                    desc1825.putInteger( idwariChuWidow, 2 );                    var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );                    desc1825.putInteger( idwariChuOrphan, 2 );                    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                    var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );                    desc1825.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );                    var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );                    desc1825.putInteger( idtcyUpDown, 0 );                    var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );                    desc1825.putInteger( idtcyLeftRight, 0 );                    var idleftAki = stringIDToTypeID( "leftAki" );                    desc1825.putDouble( idleftAki, -1.000000 );                    var idrightAki = stringIDToTypeID( "rightAki" );                    desc1825.putDouble( idrightAki, -1.000000 );                    var idjiDori = stringIDToTypeID( "jiDori" );                    desc1825.putInteger( idjiDori, 0 );                    var idnoBreak = stringIDToTypeID( "noBreak" );                    desc1825.putBoolean( idnoBreak, false );                    var idClr = charIDToTypeID( "Clr " );                        var desc1826 = new ActionDescriptor();                        var idCyn = charIDToTypeID( "Cyn " );                        desc1826.putDouble( idCyn, 74.520000 );                        var idMgnt = charIDToTypeID( "Mgnt" );                        desc1826.putDouble( idMgnt, 67.780000 );                        var idYlw = charIDToTypeID( "Ylw " );                        desc1826.putDouble( idYlw, 67.130000 );                        var idBlck = charIDToTypeID( "Blck" );                        desc1826.putDouble( idBlck, 89.630000 );                    var idCMYC = charIDToTypeID( "CMYC" );                    desc1825.putObject( idClr, idCMYC, desc1826 );                    var idstrokeColor = stringIDToTypeID( "strokeColor" );                        var desc1827 = new ActionDescriptor();                        var idCyn = charIDToTypeID( "Cyn " );                        desc1827.putDouble( idCyn, 0.000000 );                        var idMgnt = charIDToTypeID( "Mgnt" );                        desc1827.putDouble( idMgnt, 0.000000 );                        var idYlw = charIDToTypeID( "Ylw " );                        desc1827.putDouble( idYlw, 0.000000 );                        var idBlck = charIDToTypeID( "Blck" );                        desc1827.putDouble( idBlck, 0.000000 );                    var idCMYC = charIDToTypeID( "CMYC" );                    desc1825.putObject( idstrokeColor, idCMYC, desc1827 );                    var idFl = charIDToTypeID( "Fl  " );                    desc1825.putBoolean( idFl, true );                    var idStrk = charIDToTypeID( "Strk" );                    desc1825.putBoolean( idStrk, false );                    var idfillFirst = stringIDToTypeID( "fillFirst" );                    desc1825.putBoolean( idfillFirst, false );                    var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );                    desc1825.putBoolean( idfillOverPrint, false );                    var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );                    desc1825.putBoolean( idstrokeOverPrint, false );                    var idlineCap = stringIDToTypeID( "lineCap" );                    var idlineCap = stringIDToTypeID( "lineCap" );                    var idbuttCap = stringIDToTypeID( "buttCap" );                    desc1825.putEnumerated( idlineCap, idlineCap, idbuttCap );                    var idlineJoin = stringIDToTypeID( "lineJoin" );                    var idlineJoin = stringIDToTypeID( "lineJoin" );                    var idmiterJoin = stringIDToTypeID( "miterJoin" );                    desc1825.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );                    var idlineWidth = stringIDToTypeID( "lineWidth" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1825.putUnitDouble( idlineWidth, idPnt, 0.057600 );                    var idmiterLimit = stringIDToTypeID( "miterLimit" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1825.putUnitDouble( idmiterLimit, idPnt, 0.230400 );                    var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );                    desc1825.putDouble( idlineDashoffset, 0.000000 );                var idTxtS = charIDToTypeID( "TxtS" );                desc1824.putObject( idTxtS, idTxtS, desc1825 );            var idTxtt = charIDToTypeID( "Txtt" );            list104.putObject( idTxtt, desc1824 );                var desc1828 = new ActionDescriptor();                var idFrom = charIDToTypeID( "From" );                desc1828.putInteger( idFrom, 0 );                var idT = charIDToTypeID( "T   " );                desc1828.putInteger( idT, 4614 );                var idTxtS = charIDToTypeID( "TxtS" );                    var desc1829 = new ActionDescriptor();                    var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );                    desc1829.putBoolean( idstyleSheetHasParent, true );                    var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );                    desc1829.putString( idfontPostScriptName, """KaiTi_GB2312""" );                    var idFntN = charIDToTypeID( "FntN" );                    desc1829.putString( idFntN, """KaiTi_GB2312""" );                    var idFntS = charIDToTypeID( "FntS" );                    desc1829.putString( idFntS, """Regular""" );                    var idScrp = charIDToTypeID( "Scrp" );                    desc1829.putInteger( idScrp, 25 );                    var idFntT = charIDToTypeID( "FntT" );                    desc1829.putInteger( idFntT, 1 );                    var idSz = charIDToTypeID( "Sz  " );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1829.putUnitDouble( idSz, idPnt, 13.795416 );                    var idHrzS = charIDToTypeID( "HrzS" );                    desc1829.putDouble( idHrzS, 100.000000 );                    var idVrtS = charIDToTypeID( "VrtS" );                    desc1829.putDouble( idVrtS, 100.000000 );                    var idsyntheticBold = stringIDToTypeID( "syntheticBold" );                    desc1829.putBoolean( idsyntheticBold, false );                    var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );                    desc1829.putBoolean( idsyntheticItalic, false );                    var idautoLeading = stringIDToTypeID( "autoLeading" );                    desc1829.putBoolean( idautoLeading, false );                    var idLdng = charIDToTypeID( "Ldng" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1829.putUnitDouble( idLdng, idPnt, 20.693126 );                    var idTrck = charIDToTypeID( "Trck" );                    desc1829.putInteger( idTrck, 0 );                    var idBsln = charIDToTypeID( "Bsln" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1829.putUnitDouble( idBsln, idPnt, 0.000000 );                    var idcharacterRotation = stringIDToTypeID( "characterRotation" );                    desc1829.putDouble( idcharacterRotation, 0.000000 );                    var idAtKr = charIDToTypeID( "AtKr" );                    var idAtKr = charIDToTypeID( "AtKr" );                    var idmanual = stringIDToTypeID( "manual" );                    desc1829.putEnumerated( idAtKr, idAtKr, idmanual );                    var idfontCaps = stringIDToTypeID( "fontCaps" );                    var idfontCaps = stringIDToTypeID( "fontCaps" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1829.putEnumerated( idfontCaps, idfontCaps, idNrml );                    var idbaseline = stringIDToTypeID( "baseline" );                    var idbaseline = stringIDToTypeID( "baseline" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1829.putEnumerated( idbaseline, idbaseline, idNrml );                    var idotbaseline = stringIDToTypeID( "otbaseline" );                    var idotbaseline = stringIDToTypeID( "otbaseline" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1829.putEnumerated( idotbaseline, idotbaseline, idNrml );                    var idstrikethrough = stringIDToTypeID( "strikethrough" );                    var idstrikethrough = stringIDToTypeID( "strikethrough" );                    var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );                    desc1829.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );                    var idUndl = charIDToTypeID( "Undl" );                    var idUndl = charIDToTypeID( "Undl" );                    var idunderlineOff = stringIDToTypeID( "underlineOff" );                    desc1829.putEnumerated( idUndl, idUndl, idunderlineOff );                    var idunderlineOffset = stringIDToTypeID( "underlineOffset" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1829.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );                    var idligature = stringIDToTypeID( "ligature" );                    desc1829.putBoolean( idligature, false );                    var idaltligature = stringIDToTypeID( "altligature" );                    desc1829.putBoolean( idaltligature, false );                    var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );                    desc1829.putBoolean( idcontextualLigatures, false );                    var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );                    desc1829.putBoolean( idalternateLigatures, false );                    var idoldStyle = stringIDToTypeID( "oldStyle" );                    desc1829.putBoolean( idoldStyle, false );                    var idfractions = stringIDToTypeID( "fractions" );                    desc1829.putBoolean( idfractions, false );                    var idordinals = stringIDToTypeID( "ordinals" );                    desc1829.putBoolean( idordinals, false );                    var idswash = stringIDToTypeID( "swash" );                    desc1829.putBoolean( idswash, false );                    var idtitling = stringIDToTypeID( "titling" );                    desc1829.putBoolean( idtitling, false );                    var idconnectionForms = stringIDToTypeID( "connectionForms" );                    desc1829.putBoolean( idconnectionForms, true );                    var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );                    desc1829.putBoolean( idstylisticAlternates, false );                    var idornaments = stringIDToTypeID( "ornaments" );                    desc1829.putBoolean( idornaments, false );                    var idfigureStyle = stringIDToTypeID( "figureStyle" );                    var idfigureStyle = stringIDToTypeID( "figureStyle" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1829.putEnumerated( idfigureStyle, idfigureStyle, idNrml );                    var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );                    desc1829.putBoolean( idproportionalMetrics, false );                    var idkana = stringIDToTypeID( "kana" );                    desc1829.putBoolean( idkana, false );                    var iditalics = stringIDToTypeID( "italics" );                    desc1829.putBoolean( iditalics, false );                    var idruby = stringIDToTypeID( "ruby" );                    desc1829.putBoolean( idruby, false );                    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                    var idrotated = stringIDToTypeID( "rotated" );                    desc1829.putEnumerated( idbaselineDirection, idbaselineDirection, idrotated );                    var idtextLanguage = stringIDToTypeID( "textLanguage" );                    var idtextLanguage = stringIDToTypeID( "textLanguage" );                    var idenglishLanguage = stringIDToTypeID( "englishLanguage" );                    desc1829.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );                    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );                    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );                    var iddefaultForm = stringIDToTypeID( "defaultForm" );                    desc1829.putEnumerated( idjapaneseAlternate, idjapaneseAlternate, iddefaultForm );                    var idmojiZume = stringIDToTypeID( "mojiZume" );                    desc1829.putDouble( idmojiZume, 0.300000 );                    var idgridAlignment = stringIDToTypeID( "gridAlignment" );                    var idgridAlignment = stringIDToTypeID( "gridAlignment" );                    var idroman = stringIDToTypeID( "roman" );                    desc1829.putEnumerated( idgridAlignment, idgridAlignment, idroman );                    var idenableWariChu = stringIDToTypeID( "enableWariChu" );                    desc1829.putBoolean( idenableWariChu, false );                    var idwariChuCount = stringIDToTypeID( "wariChuCount" );                    desc1829.putInteger( idwariChuCount, 2 );                    var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );                    desc1829.putInteger( idwariChuLineGap, 0 );                    var idwariChuScale = stringIDToTypeID( "wariChuScale" );                    desc1829.putDouble( idwariChuScale, 0.500000 );                    var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );                    desc1829.putInteger( idwariChuWidow, 2 );                    var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );                    desc1829.putInteger( idwariChuOrphan, 2 );                    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                    var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );                    desc1829.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );                    var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );                    desc1829.putInteger( idtcyUpDown, 0 );                    var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );                    desc1829.putInteger( idtcyLeftRight, 0 );                    var idleftAki = stringIDToTypeID( "leftAki" );                    desc1829.putDouble( idleftAki, -1.000000 );                    var idrightAki = stringIDToTypeID( "rightAki" );                    desc1829.putDouble( idrightAki, -1.000000 );                    var idjiDori = stringIDToTypeID( "jiDori" );                    desc1829.putInteger( idjiDori, 0 );                    var idnoBreak = stringIDToTypeID( "noBreak" );                    desc1829.putBoolean( idnoBreak, false );                    var idClr = charIDToTypeID( "Clr " );                        var desc1830 = new ActionDescriptor();                        var idCyn = charIDToTypeID( "Cyn " );                        desc1830.putDouble( idCyn, 74.520000 );                        var idMgnt = charIDToTypeID( "Mgnt" );                        desc1830.putDouble( idMgnt, 67.780000 );                        var idYlw = charIDToTypeID( "Ylw " );                        desc1830.putDouble( idYlw, 67.130000 );                        var idBlck = charIDToTypeID( "Blck" );                        desc1830.putDouble( idBlck, 89.630000 );                    var idCMYC = charIDToTypeID( "CMYC" );                    desc1829.putObject( idClr, idCMYC, desc1830 );                    var idstrokeColor = stringIDToTypeID( "strokeColor" );                        var desc1831 = new ActionDescriptor();                        var idCyn = charIDToTypeID( "Cyn " );                        desc1831.putDouble( idCyn, 0.000000 );                        var idMgnt = charIDToTypeID( "Mgnt" );                        desc1831.putDouble( idMgnt, 0.000000 );                        var idYlw = charIDToTypeID( "Ylw " );                        desc1831.putDouble( idYlw, 0.000000 );                        var idBlck = charIDToTypeID( "Blck" );                        desc1831.putDouble( idBlck, 0.000000 );                    var idCMYC = charIDToTypeID( "CMYC" );                    desc1829.putObject( idstrokeColor, idCMYC, desc1831 );                    var idFl = charIDToTypeID( "Fl  " );                    desc1829.putBoolean( idFl, true );                    var idStrk = charIDToTypeID( "Strk" );                    desc1829.putBoolean( idStrk, false );                    var idfillFirst = stringIDToTypeID( "fillFirst" );                    desc1829.putBoolean( idfillFirst, false );                    var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );                    desc1829.putBoolean( idfillOverPrint, false );                    var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );                    desc1829.putBoolean( idstrokeOverPrint, false );                    var idlineCap = stringIDToTypeID( "lineCap" );                    var idlineCap = stringIDToTypeID( "lineCap" );                    var idbuttCap = stringIDToTypeID( "buttCap" );                    desc1829.putEnumerated( idlineCap, idlineCap, idbuttCap );                    var idlineJoin = stringIDToTypeID( "lineJoin" );                    var idlineJoin = stringIDToTypeID( "lineJoin" );                    var idmiterJoin = stringIDToTypeID( "miterJoin" );                    desc1829.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );                    var idlineWidth = stringIDToTypeID( "lineWidth" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1829.putUnitDouble( idlineWidth, idPnt, 0.057600 );                    var idmiterLimit = stringIDToTypeID( "miterLimit" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1829.putUnitDouble( idmiterLimit, idPnt, 0.230400 );                    var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );                    desc1829.putDouble( idlineDashoffset, 0.000000 );                var idTxtS = charIDToTypeID( "TxtS" );                desc1828.putObject( idTxtS, idTxtS, desc1829 );            var idTxtt = charIDToTypeID( "Txtt" );            list104.putObject( idTxtt, desc1828 );                var desc1832 = new ActionDescriptor();                var idFrom = charIDToTypeID( "From" );                desc1832.putInteger( idFrom, 0 );                var idT = charIDToTypeID( "T   " );                desc1832.putInteger( idT, 4614 );                var idTxtS = charIDToTypeID( "TxtS" );                    var desc1833 = new ActionDescriptor();                    var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );                    desc1833.putBoolean( idstyleSheetHasParent, true );                    var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );                    desc1833.putString( idfontPostScriptName, """KaiTi_GB2312""" );                    var idFntN = charIDToTypeID( "FntN" );                    desc1833.putString( idFntN, """KaiTi_GB2312""" );                    var idFntS = charIDToTypeID( "FntS" );                    desc1833.putString( idFntS, """Regular""" );                    var idScrp = charIDToTypeID( "Scrp" );                    desc1833.putInteger( idScrp, 25 );                    var idFntT = charIDToTypeID( "FntT" );                    desc1833.putInteger( idFntT, 1 );                    var idSz = charIDToTypeID( "Sz  " );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1833.putUnitDouble( idSz, idPnt, 13.795416 );                    var idHrzS = charIDToTypeID( "HrzS" );                    desc1833.putDouble( idHrzS, 100.000000 );                    var idVrtS = charIDToTypeID( "VrtS" );                    desc1833.putDouble( idVrtS, 100.000000 );                    var idsyntheticBold = stringIDToTypeID( "syntheticBold" );                    desc1833.putBoolean( idsyntheticBold, false );                    var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );                    desc1833.putBoolean( idsyntheticItalic, false );                    var idautoLeading = stringIDToTypeID( "autoLeading" );                    desc1833.putBoolean( idautoLeading, false );                    var idLdng = charIDToTypeID( "Ldng" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1833.putUnitDouble( idLdng, idPnt, 20.693126 );                    var idTrck = charIDToTypeID( "Trck" );                    desc1833.putInteger( idTrck, 0 );                    var idBsln = charIDToTypeID( "Bsln" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1833.putUnitDouble( idBsln, idPnt, 0.000000 );                    var idcharacterRotation = stringIDToTypeID( "characterRotation" );                    desc1833.putDouble( idcharacterRotation, 0.000000 );                    var idAtKr = charIDToTypeID( "AtKr" );                    var idAtKr = charIDToTypeID( "AtKr" );                    var idmanual = stringIDToTypeID( "manual" );                    desc1833.putEnumerated( idAtKr, idAtKr, idmanual );                    var idfontCaps = stringIDToTypeID( "fontCaps" );                    var idfontCaps = stringIDToTypeID( "fontCaps" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1833.putEnumerated( idfontCaps, idfontCaps, idNrml );                    var idbaseline = stringIDToTypeID( "baseline" );                    var idbaseline = stringIDToTypeID( "baseline" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1833.putEnumerated( idbaseline, idbaseline, idNrml );                    var idotbaseline = stringIDToTypeID( "otbaseline" );                    var idotbaseline = stringIDToTypeID( "otbaseline" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1833.putEnumerated( idotbaseline, idotbaseline, idNrml );                    var idstrikethrough = stringIDToTypeID( "strikethrough" );                    var idstrikethrough = stringIDToTypeID( "strikethrough" );                    var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );                    desc1833.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );                    var idUndl = charIDToTypeID( "Undl" );                    var idUndl = charIDToTypeID( "Undl" );                    var idunderlineOff = stringIDToTypeID( "underlineOff" );                    desc1833.putEnumerated( idUndl, idUndl, idunderlineOff );                    var idunderlineOffset = stringIDToTypeID( "underlineOffset" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1833.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );                    var idligature = stringIDToTypeID( "ligature" );                    desc1833.putBoolean( idligature, false );                    var idaltligature = stringIDToTypeID( "altligature" );                    desc1833.putBoolean( idaltligature, false );                    var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );                    desc1833.putBoolean( idcontextualLigatures, false );                    var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );                    desc1833.putBoolean( idalternateLigatures, false );                    var idoldStyle = stringIDToTypeID( "oldStyle" );                    desc1833.putBoolean( idoldStyle, false );                    var idfractions = stringIDToTypeID( "fractions" );                    desc1833.putBoolean( idfractions, false );                    var idordinals = stringIDToTypeID( "ordinals" );                    desc1833.putBoolean( idordinals, false );                    var idswash = stringIDToTypeID( "swash" );                    desc1833.putBoolean( idswash, false );                    var idtitling = stringIDToTypeID( "titling" );                    desc1833.putBoolean( idtitling, false );                    var idconnectionForms = stringIDToTypeID( "connectionForms" );                    desc1833.putBoolean( idconnectionForms, true );                    var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );                    desc1833.putBoolean( idstylisticAlternates, false );                    var idornaments = stringIDToTypeID( "ornaments" );                    desc1833.putBoolean( idornaments, false );                    var idfigureStyle = stringIDToTypeID( "figureStyle" );                    var idfigureStyle = stringIDToTypeID( "figureStyle" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1833.putEnumerated( idfigureStyle, idfigureStyle, idNrml );                    var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );                    desc1833.putBoolean( idproportionalMetrics, false );                    var idkana = stringIDToTypeID( "kana" );                    desc1833.putBoolean( idkana, false );                    var iditalics = stringIDToTypeID( "italics" );                    desc1833.putBoolean( iditalics, false );                    var idruby = stringIDToTypeID( "ruby" );                    desc1833.putBoolean( idruby, false );                    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                    var idrotated = stringIDToTypeID( "rotated" );                    desc1833.putEnumerated( idbaselineDirection, idbaselineDirection, idrotated );                    var idtextLanguage = stringIDToTypeID( "textLanguage" );                    var idtextLanguage = stringIDToTypeID( "textLanguage" );                    var idenglishLanguage = stringIDToTypeID( "englishLanguage" );                    desc1833.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );                    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );                    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );                    var iddefaultForm = stringIDToTypeID( "defaultForm" );                    desc1833.putEnumerated( idjapaneseAlternate, idjapaneseAlternate, iddefaultForm );                    var idmojiZume = stringIDToTypeID( "mojiZume" );                    desc1833.putDouble( idmojiZume, 0.300000 );                    var idgridAlignment = stringIDToTypeID( "gridAlignment" );                    var idgridAlignment = stringIDToTypeID( "gridAlignment" );                    var idroman = stringIDToTypeID( "roman" );                    desc1833.putEnumerated( idgridAlignment, idgridAlignment, idroman );                    var idenableWariChu = stringIDToTypeID( "enableWariChu" );                    desc1833.putBoolean( idenableWariChu, false );                    var idwariChuCount = stringIDToTypeID( "wariChuCount" );                    desc1833.putInteger( idwariChuCount, 2 );                    var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );                    desc1833.putInteger( idwariChuLineGap, 0 );                    var idwariChuScale = stringIDToTypeID( "wariChuScale" );                    desc1833.putDouble( idwariChuScale, 0.500000 );                    var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );                    desc1833.putInteger( idwariChuWidow, 2 );                    var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );                    desc1833.putInteger( idwariChuOrphan, 2 );                    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                    var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );                    desc1833.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );                    var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );                    desc1833.putInteger( idtcyUpDown, 0 );                    var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );                    desc1833.putInteger( idtcyLeftRight, 0 );                    var idleftAki = stringIDToTypeID( "leftAki" );                    desc1833.putDouble( idleftAki, -1.000000 );                    var idrightAki = stringIDToTypeID( "rightAki" );                    desc1833.putDouble( idrightAki, -1.000000 );                    var idjiDori = stringIDToTypeID( "jiDori" );                    desc1833.putInteger( idjiDori, 0 );                    var idnoBreak = stringIDToTypeID( "noBreak" );                    desc1833.putBoolean( idnoBreak, false );                    var idClr = charIDToTypeID( "Clr " );                        var desc1834 = new ActionDescriptor();                        var idCyn = charIDToTypeID( "Cyn " );                        desc1834.putDouble( idCyn, 74.520000 );                        var idMgnt = charIDToTypeID( "Mgnt" );                        desc1834.putDouble( idMgnt, 67.780000 );                        var idYlw = charIDToTypeID( "Ylw " );                        desc1834.putDouble( idYlw, 67.130000 );                        var idBlck = charIDToTypeID( "Blck" );                        desc1834.putDouble( idBlck, 89.630000 );                    var idCMYC = charIDToTypeID( "CMYC" );                    desc1833.putObject( idClr, idCMYC, desc1834 );                    var idstrokeColor = stringIDToTypeID( "strokeColor" );                        var desc1835 = new ActionDescriptor();                        var idCyn = charIDToTypeID( "Cyn " );                        desc1835.putDouble( idCyn, 0.000000 );                        var idMgnt = charIDToTypeID( "Mgnt" );                        desc1835.putDouble( idMgnt, 0.000000 );                        var idYlw = charIDToTypeID( "Ylw " );                        desc1835.putDouble( idYlw, 0.000000 );                        var idBlck = charIDToTypeID( "Blck" );                        desc1835.putDouble( idBlck, 0.000000 );                    var idCMYC = charIDToTypeID( "CMYC" );                    desc1833.putObject( idstrokeColor, idCMYC, desc1835 );                    var idFl = charIDToTypeID( "Fl  " );                    desc1833.putBoolean( idFl, true );                    var idStrk = charIDToTypeID( "Strk" );                    desc1833.putBoolean( idStrk, false );                    var idfillFirst = stringIDToTypeID( "fillFirst" );                    desc1833.putBoolean( idfillFirst, false );                    var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );                    desc1833.putBoolean( idfillOverPrint, false );                    var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );                    desc1833.putBoolean( idstrokeOverPrint, false );                    var idlineCap = stringIDToTypeID( "lineCap" );                    var idlineCap = stringIDToTypeID( "lineCap" );                    var idbuttCap = stringIDToTypeID( "buttCap" );                    desc1833.putEnumerated( idlineCap, idlineCap, idbuttCap );                    var idlineJoin = stringIDToTypeID( "lineJoin" );                    var idlineJoin = stringIDToTypeID( "lineJoin" );                    var idmiterJoin = stringIDToTypeID( "miterJoin" );                    desc1833.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );                    var idlineWidth = stringIDToTypeID( "lineWidth" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1833.putUnitDouble( idlineWidth, idPnt, 0.057600 );                    var idmiterLimit = stringIDToTypeID( "miterLimit" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1833.putUnitDouble( idmiterLimit, idPnt, 0.230400 );                    var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );                    desc1833.putDouble( idlineDashoffset, 0.000000 );                var idTxtS = charIDToTypeID( "TxtS" );                desc1832.putObject( idTxtS, idTxtS, desc1833 );            var idTxtt = charIDToTypeID( "Txtt" );            list104.putObject( idTxtt, desc1832 );                var desc1836 = new ActionDescriptor();                var idFrom = charIDToTypeID( "From" );                desc1836.putInteger( idFrom, 0 );                var idT = charIDToTypeID( "T   " );                desc1836.putInteger( idT, 4614 );                var idTxtS = charIDToTypeID( "TxtS" );                    var desc1837 = new ActionDescriptor();                    var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );                    desc1837.putBoolean( idstyleSheetHasParent, true );                    var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );                    desc1837.putString( idfontPostScriptName, """KaiTi_GB2312""" );                    var idFntN = charIDToTypeID( "FntN" );                    desc1837.putString( idFntN, """KaiTi_GB2312""" );                    var idFntS = charIDToTypeID( "FntS" );                    desc1837.putString( idFntS, """Regular""" );                    var idScrp = charIDToTypeID( "Scrp" );                    desc1837.putInteger( idScrp, 25 );                    var idFntT = charIDToTypeID( "FntT" );                    desc1837.putInteger( idFntT, 1 );                    var idSz = charIDToTypeID( "Sz  " );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1837.putUnitDouble( idSz, idPnt, 13.795416 );                    var idHrzS = charIDToTypeID( "HrzS" );                    desc1837.putDouble( idHrzS, 100.000000 );                    var idVrtS = charIDToTypeID( "VrtS" );                    desc1837.putDouble( idVrtS, 100.000000 );                    var idsyntheticBold = stringIDToTypeID( "syntheticBold" );                    desc1837.putBoolean( idsyntheticBold, false );                    var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );                    desc1837.putBoolean( idsyntheticItalic, false );                    var idautoLeading = stringIDToTypeID( "autoLeading" );                    desc1837.putBoolean( idautoLeading, false );                    var idLdng = charIDToTypeID( "Ldng" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1837.putUnitDouble( idLdng, idPnt, 20.693126 );                    var idTrck = charIDToTypeID( "Trck" );                    desc1837.putInteger( idTrck, 0 );                    var idBsln = charIDToTypeID( "Bsln" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1837.putUnitDouble( idBsln, idPnt, 0.000000 );                    var idcharacterRotation = stringIDToTypeID( "characterRotation" );                    desc1837.putDouble( idcharacterRotation, 0.000000 );                    var idAtKr = charIDToTypeID( "AtKr" );                    var idAtKr = charIDToTypeID( "AtKr" );                    var idmanual = stringIDToTypeID( "manual" );                    desc1837.putEnumerated( idAtKr, idAtKr, idmanual );                    var idfontCaps = stringIDToTypeID( "fontCaps" );                    var idfontCaps = stringIDToTypeID( "fontCaps" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1837.putEnumerated( idfontCaps, idfontCaps, idNrml );                    var idbaseline = stringIDToTypeID( "baseline" );                    var idbaseline = stringIDToTypeID( "baseline" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1837.putEnumerated( idbaseline, idbaseline, idNrml );                    var idotbaseline = stringIDToTypeID( "otbaseline" );                    var idotbaseline = stringIDToTypeID( "otbaseline" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1837.putEnumerated( idotbaseline, idotbaseline, idNrml );                    var idstrikethrough = stringIDToTypeID( "strikethrough" );                    var idstrikethrough = stringIDToTypeID( "strikethrough" );                    var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );                    desc1837.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );                    var idUndl = charIDToTypeID( "Undl" );                    var idUndl = charIDToTypeID( "Undl" );                    var idunderlineOff = stringIDToTypeID( "underlineOff" );                    desc1837.putEnumerated( idUndl, idUndl, idunderlineOff );                    var idunderlineOffset = stringIDToTypeID( "underlineOffset" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1837.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );                    var idligature = stringIDToTypeID( "ligature" );                    desc1837.putBoolean( idligature, false );                    var idaltligature = stringIDToTypeID( "altligature" );                    desc1837.putBoolean( idaltligature, false );                    var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );                    desc1837.putBoolean( idcontextualLigatures, false );                    var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );                    desc1837.putBoolean( idalternateLigatures, false );                    var idoldStyle = stringIDToTypeID( "oldStyle" );                    desc1837.putBoolean( idoldStyle, false );                    var idfractions = stringIDToTypeID( "fractions" );                    desc1837.putBoolean( idfractions, false );                    var idordinals = stringIDToTypeID( "ordinals" );                    desc1837.putBoolean( idordinals, false );                    var idswash = stringIDToTypeID( "swash" );                    desc1837.putBoolean( idswash, false );                    var idtitling = stringIDToTypeID( "titling" );                    desc1837.putBoolean( idtitling, false );                    var idconnectionForms = stringIDToTypeID( "connectionForms" );                    desc1837.putBoolean( idconnectionForms, true );                    var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );                    desc1837.putBoolean( idstylisticAlternates, false );                    var idornaments = stringIDToTypeID( "ornaments" );                    desc1837.putBoolean( idornaments, false );                    var idfigureStyle = stringIDToTypeID( "figureStyle" );                    var idfigureStyle = stringIDToTypeID( "figureStyle" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1837.putEnumerated( idfigureStyle, idfigureStyle, idNrml );                    var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );                    desc1837.putBoolean( idproportionalMetrics, false );                    var idkana = stringIDToTypeID( "kana" );                    desc1837.putBoolean( idkana, false );                    var iditalics = stringIDToTypeID( "italics" );                    desc1837.putBoolean( iditalics, false );                    var idruby = stringIDToTypeID( "ruby" );                    desc1837.putBoolean( idruby, false );                    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                    var idrotated = stringIDToTypeID( "rotated" );                    desc1837.putEnumerated( idbaselineDirection, idbaselineDirection, idrotated );                    var idtextLanguage = stringIDToTypeID( "textLanguage" );                    var idtextLanguage = stringIDToTypeID( "textLanguage" );                    var idenglishLanguage = stringIDToTypeID( "englishLanguage" );                    desc1837.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );                    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );                    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );                    var iddefaultForm = stringIDToTypeID( "defaultForm" );                    desc1837.putEnumerated( idjapaneseAlternate, idjapaneseAlternate, iddefaultForm );                    var idmojiZume = stringIDToTypeID( "mojiZume" );                    desc1837.putDouble( idmojiZume, 0.300000 );                    var idgridAlignment = stringIDToTypeID( "gridAlignment" );                    var idgridAlignment = stringIDToTypeID( "gridAlignment" );                    var idroman = stringIDToTypeID( "roman" );                    desc1837.putEnumerated( idgridAlignment, idgridAlignment, idroman );                    var idenableWariChu = stringIDToTypeID( "enableWariChu" );                    desc1837.putBoolean( idenableWariChu, false );                    var idwariChuCount = stringIDToTypeID( "wariChuCount" );                    desc1837.putInteger( idwariChuCount, 2 );                    var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );                    desc1837.putInteger( idwariChuLineGap, 0 );                    var idwariChuScale = stringIDToTypeID( "wariChuScale" );                    desc1837.putDouble( idwariChuScale, 0.500000 );                    var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );                    desc1837.putInteger( idwariChuWidow, 2 );                    var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );                    desc1837.putInteger( idwariChuOrphan, 2 );                    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                    var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );                    desc1837.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );                    var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );                    desc1837.putInteger( idtcyUpDown, 0 );                    var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );                    desc1837.putInteger( idtcyLeftRight, 0 );                    var idleftAki = stringIDToTypeID( "leftAki" );                    desc1837.putDouble( idleftAki, -1.000000 );                    var idrightAki = stringIDToTypeID( "rightAki" );                    desc1837.putDouble( idrightAki, -1.000000 );                    var idjiDori = stringIDToTypeID( "jiDori" );                    desc1837.putInteger( idjiDori, 0 );                    var idnoBreak = stringIDToTypeID( "noBreak" );                    desc1837.putBoolean( idnoBreak, false );                    var idClr = charIDToTypeID( "Clr " );                        var desc1838 = new ActionDescriptor();                        var idCyn = charIDToTypeID( "Cyn " );                        desc1838.putDouble( idCyn, 74.520000 );                        var idMgnt = charIDToTypeID( "Mgnt" );                        desc1838.putDouble( idMgnt, 67.780000 );                        var idYlw = charIDToTypeID( "Ylw " );                        desc1838.putDouble( idYlw, 67.130000 );                        var idBlck = charIDToTypeID( "Blck" );                        desc1838.putDouble( idBlck, 89.630000 );                    var idCMYC = charIDToTypeID( "CMYC" );                    desc1837.putObject( idClr, idCMYC, desc1838 );                    var idstrokeColor = stringIDToTypeID( "strokeColor" );                        var desc1839 = new ActionDescriptor();                        var idCyn = charIDToTypeID( "Cyn " );                        desc1839.putDouble( idCyn, 0.000000 );                        var idMgnt = charIDToTypeID( "Mgnt" );                        desc1839.putDouble( idMgnt, 0.000000 );                        var idYlw = charIDToTypeID( "Ylw " );                        desc1839.putDouble( idYlw, 0.000000 );                        var idBlck = charIDToTypeID( "Blck" );                        desc1839.putDouble( idBlck, 0.000000 );                    var idCMYC = charIDToTypeID( "CMYC" );                    desc1837.putObject( idstrokeColor, idCMYC, desc1839 );                    var idFl = charIDToTypeID( "Fl  " );                    desc1837.putBoolean( idFl, true );                    var idStrk = charIDToTypeID( "Strk" );                    desc1837.putBoolean( idStrk, false );                    var idfillFirst = stringIDToTypeID( "fillFirst" );                    desc1837.putBoolean( idfillFirst, false );                    var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );                    desc1837.putBoolean( idfillOverPrint, false );                    var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );                    desc1837.putBoolean( idstrokeOverPrint, false );                    var idlineCap = stringIDToTypeID( "lineCap" );                    var idlineCap = stringIDToTypeID( "lineCap" );                    var idbuttCap = stringIDToTypeID( "buttCap" );                    desc1837.putEnumerated( idlineCap, idlineCap, idbuttCap );                    var idlineJoin = stringIDToTypeID( "lineJoin" );                    var idlineJoin = stringIDToTypeID( "lineJoin" );                    var idmiterJoin = stringIDToTypeID( "miterJoin" );                    desc1837.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );                    var idlineWidth = stringIDToTypeID( "lineWidth" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1837.putUnitDouble( idlineWidth, idPnt, 0.057600 );                    var idmiterLimit = stringIDToTypeID( "miterLimit" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1837.putUnitDouble( idmiterLimit, idPnt, 0.230400 );                    var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );                    desc1837.putDouble( idlineDashoffset, 0.000000 );                var idTxtS = charIDToTypeID( "TxtS" );                desc1836.putObject( idTxtS, idTxtS, desc1837 );            var idTxtt = charIDToTypeID( "Txtt" );            list104.putObject( idTxtt, desc1836 );                var desc1840 = new ActionDescriptor();                var idFrom = charIDToTypeID( "From" );                desc1840.putInteger( idFrom, 0 );                var idT = charIDToTypeID( "T   " );                desc1840.putInteger( idT, 4614 );                var idTxtS = charIDToTypeID( "TxtS" );                    var desc1841 = new ActionDescriptor();                    var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );                    desc1841.putBoolean( idstyleSheetHasParent, true );                    var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );                    desc1841.putString( idfontPostScriptName, """KaiTi_GB2312""" );                    var idFntN = charIDToTypeID( "FntN" );                    desc1841.putString( idFntN, """KaiTi_GB2312""" );                    var idFntS = charIDToTypeID( "FntS" );                    desc1841.putString( idFntS, """Regular""" );                    var idScrp = charIDToTypeID( "Scrp" );                    desc1841.putInteger( idScrp, 25 );                    var idFntT = charIDToTypeID( "FntT" );                    desc1841.putInteger( idFntT, 1 );                    var idSz = charIDToTypeID( "Sz  " );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1841.putUnitDouble( idSz, idPnt, 13.795416 );                    var idHrzS = charIDToTypeID( "HrzS" );                    desc1841.putDouble( idHrzS, 100.000000 );                    var idVrtS = charIDToTypeID( "VrtS" );                    desc1841.putDouble( idVrtS, 100.000000 );                    var idsyntheticBold = stringIDToTypeID( "syntheticBold" );                    desc1841.putBoolean( idsyntheticBold, false );                    var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );                    desc1841.putBoolean( idsyntheticItalic, false );                    var idautoLeading = stringIDToTypeID( "autoLeading" );                    desc1841.putBoolean( idautoLeading, false );                    var idLdng = charIDToTypeID( "Ldng" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1841.putUnitDouble( idLdng, idPnt, 20.693126 );                    var idTrck = charIDToTypeID( "Trck" );                    desc1841.putInteger( idTrck, 0 );                    var idBsln = charIDToTypeID( "Bsln" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1841.putUnitDouble( idBsln, idPnt, 0.000000 );                    var idcharacterRotation = stringIDToTypeID( "characterRotation" );                    desc1841.putDouble( idcharacterRotation, 0.000000 );                    var idAtKr = charIDToTypeID( "AtKr" );                    var idAtKr = charIDToTypeID( "AtKr" );                    var idmanual = stringIDToTypeID( "manual" );                    desc1841.putEnumerated( idAtKr, idAtKr, idmanual );                    var idfontCaps = stringIDToTypeID( "fontCaps" );                    var idfontCaps = stringIDToTypeID( "fontCaps" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1841.putEnumerated( idfontCaps, idfontCaps, idNrml );                    var idbaseline = stringIDToTypeID( "baseline" );                    var idbaseline = stringIDToTypeID( "baseline" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1841.putEnumerated( idbaseline, idbaseline, idNrml );                    var idotbaseline = stringIDToTypeID( "otbaseline" );                    var idotbaseline = stringIDToTypeID( "otbaseline" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1841.putEnumerated( idotbaseline, idotbaseline, idNrml );                    var idstrikethrough = stringIDToTypeID( "strikethrough" );                    var idstrikethrough = stringIDToTypeID( "strikethrough" );                    var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );                    desc1841.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );                    var idUndl = charIDToTypeID( "Undl" );                    var idUndl = charIDToTypeID( "Undl" );                    var idunderlineOff = stringIDToTypeID( "underlineOff" );                    desc1841.putEnumerated( idUndl, idUndl, idunderlineOff );                    var idunderlineOffset = stringIDToTypeID( "underlineOffset" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1841.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );                    var idligature = stringIDToTypeID( "ligature" );                    desc1841.putBoolean( idligature, false );                    var idaltligature = stringIDToTypeID( "altligature" );                    desc1841.putBoolean( idaltligature, false );                    var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );                    desc1841.putBoolean( idcontextualLigatures, false );                    var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );                    desc1841.putBoolean( idalternateLigatures, false );                    var idoldStyle = stringIDToTypeID( "oldStyle" );                    desc1841.putBoolean( idoldStyle, false );                    var idfractions = stringIDToTypeID( "fractions" );                    desc1841.putBoolean( idfractions, false );                    var idordinals = stringIDToTypeID( "ordinals" );                    desc1841.putBoolean( idordinals, false );                    var idswash = stringIDToTypeID( "swash" );                    desc1841.putBoolean( idswash, false );                    var idtitling = stringIDToTypeID( "titling" );                    desc1841.putBoolean( idtitling, false );                    var idconnectionForms = stringIDToTypeID( "connectionForms" );                    desc1841.putBoolean( idconnectionForms, true );                    var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );                    desc1841.putBoolean( idstylisticAlternates, false );                    var idornaments = stringIDToTypeID( "ornaments" );                    desc1841.putBoolean( idornaments, false );                    var idfigureStyle = stringIDToTypeID( "figureStyle" );                    var idfigureStyle = stringIDToTypeID( "figureStyle" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1841.putEnumerated( idfigureStyle, idfigureStyle, idNrml );                    var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );                    desc1841.putBoolean( idproportionalMetrics, false );                    var idkana = stringIDToTypeID( "kana" );                    desc1841.putBoolean( idkana, false );                    var iditalics = stringIDToTypeID( "italics" );                    desc1841.putBoolean( iditalics, false );                    var idruby = stringIDToTypeID( "ruby" );                    desc1841.putBoolean( idruby, false );                    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                    var idrotated = stringIDToTypeID( "rotated" );                    desc1841.putEnumerated( idbaselineDirection, idbaselineDirection, idrotated );                    var idtextLanguage = stringIDToTypeID( "textLanguage" );                    var idtextLanguage = stringIDToTypeID( "textLanguage" );                    var idenglishLanguage = stringIDToTypeID( "englishLanguage" );                    desc1841.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );                    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );                    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );                    var iddefaultForm = stringIDToTypeID( "defaultForm" );                    desc1841.putEnumerated( idjapaneseAlternate, idjapaneseAlternate, iddefaultForm );                    var idmojiZume = stringIDToTypeID( "mojiZume" );                    desc1841.putDouble( idmojiZume, 0.300000 );                    var idgridAlignment = stringIDToTypeID( "gridAlignment" );                    var idgridAlignment = stringIDToTypeID( "gridAlignment" );                    var idroman = stringIDToTypeID( "roman" );                    desc1841.putEnumerated( idgridAlignment, idgridAlignment, idroman );                    var idenableWariChu = stringIDToTypeID( "enableWariChu" );                    desc1841.putBoolean( idenableWariChu, false );                    var idwariChuCount = stringIDToTypeID( "wariChuCount" );                    desc1841.putInteger( idwariChuCount, 2 );                    var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );                    desc1841.putInteger( idwariChuLineGap, 0 );                    var idwariChuScale = stringIDToTypeID( "wariChuScale" );                    desc1841.putDouble( idwariChuScale, 0.500000 );                    var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );                    desc1841.putInteger( idwariChuWidow, 2 );                    var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );                    desc1841.putInteger( idwariChuOrphan, 2 );                    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                    var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );                    desc1841.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );                    var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );                    desc1841.putInteger( idtcyUpDown, 0 );                    var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );                    desc1841.putInteger( idtcyLeftRight, 0 );                    var idleftAki = stringIDToTypeID( "leftAki" );                    desc1841.putDouble( idleftAki, -1.000000 );                    var idrightAki = stringIDToTypeID( "rightAki" );                    desc1841.putDouble( idrightAki, -1.000000 );                    var idjiDori = stringIDToTypeID( "jiDori" );                    desc1841.putInteger( idjiDori, 0 );                    var idnoBreak = stringIDToTypeID( "noBreak" );                    desc1841.putBoolean( idnoBreak, false );                    var idClr = charIDToTypeID( "Clr " );                        var desc1842 = new ActionDescriptor();                        var idCyn = charIDToTypeID( "Cyn " );                        desc1842.putDouble( idCyn, 74.520000 );                        var idMgnt = charIDToTypeID( "Mgnt" );                        desc1842.putDouble( idMgnt, 67.780000 );                        var idYlw = charIDToTypeID( "Ylw " );                        desc1842.putDouble( idYlw, 67.130000 );                        var idBlck = charIDToTypeID( "Blck" );                        desc1842.putDouble( idBlck, 89.630000 );                    var idCMYC = charIDToTypeID( "CMYC" );                    desc1841.putObject( idClr, idCMYC, desc1842 );                    var idstrokeColor = stringIDToTypeID( "strokeColor" );                        var desc1843 = new ActionDescriptor();                        var idCyn = charIDToTypeID( "Cyn " );                        desc1843.putDouble( idCyn, 0.000000 );                        var idMgnt = charIDToTypeID( "Mgnt" );                        desc1843.putDouble( idMgnt, 0.000000 );                        var idYlw = charIDToTypeID( "Ylw " );                        desc1843.putDouble( idYlw, 0.000000 );                        var idBlck = charIDToTypeID( "Blck" );                        desc1843.putDouble( idBlck, 0.000000 );                    var idCMYC = charIDToTypeID( "CMYC" );                    desc1841.putObject( idstrokeColor, idCMYC, desc1843 );                    var idFl = charIDToTypeID( "Fl  " );                    desc1841.putBoolean( idFl, true );                    var idStrk = charIDToTypeID( "Strk" );                    desc1841.putBoolean( idStrk, false );                    var idfillFirst = stringIDToTypeID( "fillFirst" );                    desc1841.putBoolean( idfillFirst, false );                    var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );                    desc1841.putBoolean( idfillOverPrint, false );                    var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );                    desc1841.putBoolean( idstrokeOverPrint, false );                    var idlineCap = stringIDToTypeID( "lineCap" );                    var idlineCap = stringIDToTypeID( "lineCap" );                    var idbuttCap = stringIDToTypeID( "buttCap" );                    desc1841.putEnumerated( idlineCap, idlineCap, idbuttCap );                    var idlineJoin = stringIDToTypeID( "lineJoin" );                    var idlineJoin = stringIDToTypeID( "lineJoin" );                    var idmiterJoin = stringIDToTypeID( "miterJoin" );                    desc1841.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );                    var idlineWidth = stringIDToTypeID( "lineWidth" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1841.putUnitDouble( idlineWidth, idPnt, 0.057600 );                    var idmiterLimit = stringIDToTypeID( "miterLimit" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1841.putUnitDouble( idmiterLimit, idPnt, 0.230400 );                    var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );                    desc1841.putDouble( idlineDashoffset, 0.000000 );                var idTxtS = charIDToTypeID( "TxtS" );                desc1840.putObject( idTxtS, idTxtS, desc1841 );            var idTxtt = charIDToTypeID( "Txtt" );            list104.putObject( idTxtt, desc1840 );                var desc1844 = new ActionDescriptor();                var idFrom = charIDToTypeID( "From" );                desc1844.putInteger( idFrom, 0 );                var idT = charIDToTypeID( "T   " );                desc1844.putInteger( idT, 4614 );                var idTxtS = charIDToTypeID( "TxtS" );                    var desc1845 = new ActionDescriptor();                    var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );                    desc1845.putBoolean( idstyleSheetHasParent, true );                    var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );                    desc1845.putString( idfontPostScriptName, """KaiTi_GB2312""" );                    var idFntN = charIDToTypeID( "FntN" );                    desc1845.putString( idFntN, """KaiTi_GB2312""" );                    var idFntS = charIDToTypeID( "FntS" );                    desc1845.putString( idFntS, """Regular""" );                    var idScrp = charIDToTypeID( "Scrp" );                    desc1845.putInteger( idScrp, 25 );                    var idFntT = charIDToTypeID( "FntT" );                    desc1845.putInteger( idFntT, 1 );                    var idSz = charIDToTypeID( "Sz  " );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1845.putUnitDouble( idSz, idPnt, 13.795416 );                    var idHrzS = charIDToTypeID( "HrzS" );                    desc1845.putDouble( idHrzS, 100.000000 );                    var idVrtS = charIDToTypeID( "VrtS" );                    desc1845.putDouble( idVrtS, 100.000000 );                    var idsyntheticBold = stringIDToTypeID( "syntheticBold" );                    desc1845.putBoolean( idsyntheticBold, false );                    var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );                    desc1845.putBoolean( idsyntheticItalic, false );                    var idautoLeading = stringIDToTypeID( "autoLeading" );                    desc1845.putBoolean( idautoLeading, false );                    var idLdng = charIDToTypeID( "Ldng" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1845.putUnitDouble( idLdng, idPnt, 20.693126 );                    var idTrck = charIDToTypeID( "Trck" );                    desc1845.putInteger( idTrck, 0 );                    var idBsln = charIDToTypeID( "Bsln" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1845.putUnitDouble( idBsln, idPnt, 0.000000 );                    var idcharacterRotation = stringIDToTypeID( "characterRotation" );                    desc1845.putDouble( idcharacterRotation, 0.000000 );                    var idAtKr = charIDToTypeID( "AtKr" );                    var idAtKr = charIDToTypeID( "AtKr" );                    var idmanual = stringIDToTypeID( "manual" );                    desc1845.putEnumerated( idAtKr, idAtKr, idmanual );                    var idfontCaps = stringIDToTypeID( "fontCaps" );                    var idfontCaps = stringIDToTypeID( "fontCaps" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1845.putEnumerated( idfontCaps, idfontCaps, idNrml );                    var idbaseline = stringIDToTypeID( "baseline" );                    var idbaseline = stringIDToTypeID( "baseline" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1845.putEnumerated( idbaseline, idbaseline, idNrml );                    var idotbaseline = stringIDToTypeID( "otbaseline" );                    var idotbaseline = stringIDToTypeID( "otbaseline" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1845.putEnumerated( idotbaseline, idotbaseline, idNrml );                    var idstrikethrough = stringIDToTypeID( "strikethrough" );                    var idstrikethrough = stringIDToTypeID( "strikethrough" );                    var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );                    desc1845.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );                    var idUndl = charIDToTypeID( "Undl" );                    var idUndl = charIDToTypeID( "Undl" );                    var idunderlineOff = stringIDToTypeID( "underlineOff" );                    desc1845.putEnumerated( idUndl, idUndl, idunderlineOff );                    var idunderlineOffset = stringIDToTypeID( "underlineOffset" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1845.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );                    var idligature = stringIDToTypeID( "ligature" );                    desc1845.putBoolean( idligature, false );                    var idaltligature = stringIDToTypeID( "altligature" );                    desc1845.putBoolean( idaltligature, false );                    var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );                    desc1845.putBoolean( idcontextualLigatures, false );                    var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );                    desc1845.putBoolean( idalternateLigatures, false );                    var idoldStyle = stringIDToTypeID( "oldStyle" );                    desc1845.putBoolean( idoldStyle, false );                    var idfractions = stringIDToTypeID( "fractions" );                    desc1845.putBoolean( idfractions, false );                    var idordinals = stringIDToTypeID( "ordinals" );                    desc1845.putBoolean( idordinals, false );                    var idswash = stringIDToTypeID( "swash" );                    desc1845.putBoolean( idswash, false );                    var idtitling = stringIDToTypeID( "titling" );                    desc1845.putBoolean( idtitling, false );                    var idconnectionForms = stringIDToTypeID( "connectionForms" );                    desc1845.putBoolean( idconnectionForms, true );                    var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );                    desc1845.putBoolean( idstylisticAlternates, false );                    var idornaments = stringIDToTypeID( "ornaments" );                    desc1845.putBoolean( idornaments, false );                    var idfigureStyle = stringIDToTypeID( "figureStyle" );                    var idfigureStyle = stringIDToTypeID( "figureStyle" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1845.putEnumerated( idfigureStyle, idfigureStyle, idNrml );                    var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );                    desc1845.putBoolean( idproportionalMetrics, false );                    var idkana = stringIDToTypeID( "kana" );                    desc1845.putBoolean( idkana, false );                    var iditalics = stringIDToTypeID( "italics" );                    desc1845.putBoolean( iditalics, false );                    var idruby = stringIDToTypeID( "ruby" );                    desc1845.putBoolean( idruby, false );                    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                    var idrotated = stringIDToTypeID( "rotated" );                    desc1845.putEnumerated( idbaselineDirection, idbaselineDirection, idrotated );                    var idtextLanguage = stringIDToTypeID( "textLanguage" );                    var idtextLanguage = stringIDToTypeID( "textLanguage" );                    var idenglishLanguage = stringIDToTypeID( "englishLanguage" );                    desc1845.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );                    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );                    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );                    var iddefaultForm = stringIDToTypeID( "defaultForm" );                    desc1845.putEnumerated( idjapaneseAlternate, idjapaneseAlternate, iddefaultForm );                    var idmojiZume = stringIDToTypeID( "mojiZume" );                    desc1845.putDouble( idmojiZume, 0.300000 );                    var idgridAlignment = stringIDToTypeID( "gridAlignment" );                    var idgridAlignment = stringIDToTypeID( "gridAlignment" );                    var idroman = stringIDToTypeID( "roman" );                    desc1845.putEnumerated( idgridAlignment, idgridAlignment, idroman );                    var idenableWariChu = stringIDToTypeID( "enableWariChu" );                    desc1845.putBoolean( idenableWariChu, false );                    var idwariChuCount = stringIDToTypeID( "wariChuCount" );                    desc1845.putInteger( idwariChuCount, 2 );                    var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );                    desc1845.putInteger( idwariChuLineGap, 0 );                    var idwariChuScale = stringIDToTypeID( "wariChuScale" );                    desc1845.putDouble( idwariChuScale, 0.500000 );                    var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );                    desc1845.putInteger( idwariChuWidow, 2 );                    var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );                    desc1845.putInteger( idwariChuOrphan, 2 );                    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                    var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );                    desc1845.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );                    var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );                    desc1845.putInteger( idtcyUpDown, 0 );                    var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );                    desc1845.putInteger( idtcyLeftRight, 0 );                    var idleftAki = stringIDToTypeID( "leftAki" );                    desc1845.putDouble( idleftAki, -1.000000 );                    var idrightAki = stringIDToTypeID( "rightAki" );                    desc1845.putDouble( idrightAki, -1.000000 );                    var idjiDori = stringIDToTypeID( "jiDori" );                    desc1845.putInteger( idjiDori, 0 );                    var idnoBreak = stringIDToTypeID( "noBreak" );                    desc1845.putBoolean( idnoBreak, false );                    var idClr = charIDToTypeID( "Clr " );                        var desc1846 = new ActionDescriptor();                        var idCyn = charIDToTypeID( "Cyn " );                        desc1846.putDouble( idCyn, 74.520000 );                        var idMgnt = charIDToTypeID( "Mgnt" );                        desc1846.putDouble( idMgnt, 67.780000 );                        var idYlw = charIDToTypeID( "Ylw " );                        desc1846.putDouble( idYlw, 67.130000 );                        var idBlck = charIDToTypeID( "Blck" );                        desc1846.putDouble( idBlck, 89.630000 );                    var idCMYC = charIDToTypeID( "CMYC" );                    desc1845.putObject( idClr, idCMYC, desc1846 );                    var idstrokeColor = stringIDToTypeID( "strokeColor" );                        var desc1847 = new ActionDescriptor();                        var idCyn = charIDToTypeID( "Cyn " );                        desc1847.putDouble( idCyn, 0.000000 );                        var idMgnt = charIDToTypeID( "Mgnt" );                        desc1847.putDouble( idMgnt, 0.000000 );                        var idYlw = charIDToTypeID( "Ylw " );                        desc1847.putDouble( idYlw, 0.000000 );                        var idBlck = charIDToTypeID( "Blck" );                        desc1847.putDouble( idBlck, 0.000000 );                    var idCMYC = charIDToTypeID( "CMYC" );                    desc1845.putObject( idstrokeColor, idCMYC, desc1847 );                    var idFl = charIDToTypeID( "Fl  " );                    desc1845.putBoolean( idFl, true );                    var idStrk = charIDToTypeID( "Strk" );                    desc1845.putBoolean( idStrk, false );                    var idfillFirst = stringIDToTypeID( "fillFirst" );                    desc1845.putBoolean( idfillFirst, false );                    var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );                    desc1845.putBoolean( idfillOverPrint, false );                    var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );                    desc1845.putBoolean( idstrokeOverPrint, false );                    var idlineCap = stringIDToTypeID( "lineCap" );                    var idlineCap = stringIDToTypeID( "lineCap" );                    var idbuttCap = stringIDToTypeID( "buttCap" );                    desc1845.putEnumerated( idlineCap, idlineCap, idbuttCap );                    var idlineJoin = stringIDToTypeID( "lineJoin" );                    var idlineJoin = stringIDToTypeID( "lineJoin" );                    var idmiterJoin = stringIDToTypeID( "miterJoin" );                    desc1845.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );                    var idlineWidth = stringIDToTypeID( "lineWidth" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1845.putUnitDouble( idlineWidth, idPnt, 0.057600 );                    var idmiterLimit = stringIDToTypeID( "miterLimit" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1845.putUnitDouble( idmiterLimit, idPnt, 0.230400 );                    var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );                    desc1845.putDouble( idlineDashoffset, 0.000000 );                var idTxtS = charIDToTypeID( "TxtS" );                desc1844.putObject( idTxtS, idTxtS, desc1845 );            var idTxtt = charIDToTypeID( "Txtt" );            list104.putObject( idTxtt, desc1844 );                var desc1848 = new ActionDescriptor();                var idFrom = charIDToTypeID( "From" );                desc1848.putInteger( idFrom, 0 );                var idT = charIDToTypeID( "T   " );                desc1848.putInteger( idT, 4614 );                var idTxtS = charIDToTypeID( "TxtS" );                    var desc1849 = new ActionDescriptor();                    var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );                    desc1849.putBoolean( idstyleSheetHasParent, true );                    var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );                    desc1849.putString( idfontPostScriptName, """KaiTi_GB2312""" );                    var idFntN = charIDToTypeID( "FntN" );                    desc1849.putString( idFntN, """KaiTi_GB2312""" );                    var idFntS = charIDToTypeID( "FntS" );                    desc1849.putString( idFntS, """Regular""" );                    var idScrp = charIDToTypeID( "Scrp" );                    desc1849.putInteger( idScrp, 25 );                    var idFntT = charIDToTypeID( "FntT" );                    desc1849.putInteger( idFntT, 1 );                    var idSz = charIDToTypeID( "Sz  " );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1849.putUnitDouble( idSz, idPnt, 13.795416 );                    var idHrzS = charIDToTypeID( "HrzS" );                    desc1849.putDouble( idHrzS, 100.000000 );                    var idVrtS = charIDToTypeID( "VrtS" );                    desc1849.putDouble( idVrtS, 100.000000 );                    var idsyntheticBold = stringIDToTypeID( "syntheticBold" );                    desc1849.putBoolean( idsyntheticBold, false );                    var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );                    desc1849.putBoolean( idsyntheticItalic, false );                    var idautoLeading = stringIDToTypeID( "autoLeading" );                    desc1849.putBoolean( idautoLeading, false );                    var idLdng = charIDToTypeID( "Ldng" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1849.putUnitDouble( idLdng, idPnt, 20.693126 );                    var idTrck = charIDToTypeID( "Trck" );                    desc1849.putInteger( idTrck, 0 );                    var idBsln = charIDToTypeID( "Bsln" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1849.putUnitDouble( idBsln, idPnt, 0.000000 );                    var idcharacterRotation = stringIDToTypeID( "characterRotation" );                    desc1849.putDouble( idcharacterRotation, 0.000000 );                    var idAtKr = charIDToTypeID( "AtKr" );                    var idAtKr = charIDToTypeID( "AtKr" );                    var idmanual = stringIDToTypeID( "manual" );                    desc1849.putEnumerated( idAtKr, idAtKr, idmanual );                    var idfontCaps = stringIDToTypeID( "fontCaps" );                    var idfontCaps = stringIDToTypeID( "fontCaps" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1849.putEnumerated( idfontCaps, idfontCaps, idNrml );                    var idbaseline = stringIDToTypeID( "baseline" );                    var idbaseline = stringIDToTypeID( "baseline" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1849.putEnumerated( idbaseline, idbaseline, idNrml );                    var idotbaseline = stringIDToTypeID( "otbaseline" );                    var idotbaseline = stringIDToTypeID( "otbaseline" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1849.putEnumerated( idotbaseline, idotbaseline, idNrml );                    var idstrikethrough = stringIDToTypeID( "strikethrough" );                    var idstrikethrough = stringIDToTypeID( "strikethrough" );                    var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );                    desc1849.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );                    var idUndl = charIDToTypeID( "Undl" );                    var idUndl = charIDToTypeID( "Undl" );                    var idunderlineOff = stringIDToTypeID( "underlineOff" );                    desc1849.putEnumerated( idUndl, idUndl, idunderlineOff );                    var idunderlineOffset = stringIDToTypeID( "underlineOffset" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1849.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );                    var idligature = stringIDToTypeID( "ligature" );                    desc1849.putBoolean( idligature, false );                    var idaltligature = stringIDToTypeID( "altligature" );                    desc1849.putBoolean( idaltligature, false );                    var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );                    desc1849.putBoolean( idcontextualLigatures, false );                    var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );                    desc1849.putBoolean( idalternateLigatures, false );                    var idoldStyle = stringIDToTypeID( "oldStyle" );                    desc1849.putBoolean( idoldStyle, false );                    var idfractions = stringIDToTypeID( "fractions" );                    desc1849.putBoolean( idfractions, false );                    var idordinals = stringIDToTypeID( "ordinals" );                    desc1849.putBoolean( idordinals, false );                    var idswash = stringIDToTypeID( "swash" );                    desc1849.putBoolean( idswash, false );                    var idtitling = stringIDToTypeID( "titling" );                    desc1849.putBoolean( idtitling, false );                    var idconnectionForms = stringIDToTypeID( "connectionForms" );                    desc1849.putBoolean( idconnectionForms, true );                    var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );                    desc1849.putBoolean( idstylisticAlternates, false );                    var idornaments = stringIDToTypeID( "ornaments" );                    desc1849.putBoolean( idornaments, false );                    var idfigureStyle = stringIDToTypeID( "figureStyle" );                    var idfigureStyle = stringIDToTypeID( "figureStyle" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1849.putEnumerated( idfigureStyle, idfigureStyle, idNrml );                    var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );                    desc1849.putBoolean( idproportionalMetrics, false );                    var idkana = stringIDToTypeID( "kana" );                    desc1849.putBoolean( idkana, false );                    var iditalics = stringIDToTypeID( "italics" );                    desc1849.putBoolean( iditalics, false );                    var idruby = stringIDToTypeID( "ruby" );                    desc1849.putBoolean( idruby, false );                    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                    var idrotated = stringIDToTypeID( "rotated" );                    desc1849.putEnumerated( idbaselineDirection, idbaselineDirection, idrotated );                    var idtextLanguage = stringIDToTypeID( "textLanguage" );                    var idtextLanguage = stringIDToTypeID( "textLanguage" );                    var idenglishLanguage = stringIDToTypeID( "englishLanguage" );                    desc1849.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );                    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );                    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );                    var iddefaultForm = stringIDToTypeID( "defaultForm" );                    desc1849.putEnumerated( idjapaneseAlternate, idjapaneseAlternate, iddefaultForm );                    var idmojiZume = stringIDToTypeID( "mojiZume" );                    desc1849.putDouble( idmojiZume, 0.300000 );                    var idgridAlignment = stringIDToTypeID( "gridAlignment" );                    var idgridAlignment = stringIDToTypeID( "gridAlignment" );                    var idroman = stringIDToTypeID( "roman" );                    desc1849.putEnumerated( idgridAlignment, idgridAlignment, idroman );                    var idenableWariChu = stringIDToTypeID( "enableWariChu" );                    desc1849.putBoolean( idenableWariChu, false );                    var idwariChuCount = stringIDToTypeID( "wariChuCount" );                    desc1849.putInteger( idwariChuCount, 2 );                    var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );                    desc1849.putInteger( idwariChuLineGap, 0 );                    var idwariChuScale = stringIDToTypeID( "wariChuScale" );                    desc1849.putDouble( idwariChuScale, 0.500000 );                    var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );                    desc1849.putInteger( idwariChuWidow, 2 );                    var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );                    desc1849.putInteger( idwariChuOrphan, 2 );                    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                    var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );                    desc1849.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );                    var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );                    desc1849.putInteger( idtcyUpDown, 0 );                    var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );                    desc1849.putInteger( idtcyLeftRight, 0 );                    var idleftAki = stringIDToTypeID( "leftAki" );                    desc1849.putDouble( idleftAki, -1.000000 );                    var idrightAki = stringIDToTypeID( "rightAki" );                    desc1849.putDouble( idrightAki, -1.000000 );                    var idjiDori = stringIDToTypeID( "jiDori" );                    desc1849.putInteger( idjiDori, 0 );                    var idnoBreak = stringIDToTypeID( "noBreak" );                    desc1849.putBoolean( idnoBreak, false );                    var idClr = charIDToTypeID( "Clr " );                        var desc1850 = new ActionDescriptor();                        var idCyn = charIDToTypeID( "Cyn " );                        desc1850.putDouble( idCyn, 74.520000 );                        var idMgnt = charIDToTypeID( "Mgnt" );                        desc1850.putDouble( idMgnt, 67.780000 );                        var idYlw = charIDToTypeID( "Ylw " );                        desc1850.putDouble( idYlw, 67.130000 );                        var idBlck = charIDToTypeID( "Blck" );                        desc1850.putDouble( idBlck, 89.630000 );                    var idCMYC = charIDToTypeID( "CMYC" );                    desc1849.putObject( idClr, idCMYC, desc1850 );                    var idstrokeColor = stringIDToTypeID( "strokeColor" );                        var desc1851 = new ActionDescriptor();                        var idCyn = charIDToTypeID( "Cyn " );                        desc1851.putDouble( idCyn, 0.000000 );                        var idMgnt = charIDToTypeID( "Mgnt" );                        desc1851.putDouble( idMgnt, 0.000000 );                        var idYlw = charIDToTypeID( "Ylw " );                        desc1851.putDouble( idYlw, 0.000000 );                        var idBlck = charIDToTypeID( "Blck" );                        desc1851.putDouble( idBlck, 0.000000 );                    var idCMYC = charIDToTypeID( "CMYC" );                    desc1849.putObject( idstrokeColor, idCMYC, desc1851 );                    var idFl = charIDToTypeID( "Fl  " );                    desc1849.putBoolean( idFl, true );                    var idStrk = charIDToTypeID( "Strk" );                    desc1849.putBoolean( idStrk, false );                    var idfillFirst = stringIDToTypeID( "fillFirst" );                    desc1849.putBoolean( idfillFirst, false );                    var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );                    desc1849.putBoolean( idfillOverPrint, false );                    var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );                    desc1849.putBoolean( idstrokeOverPrint, false );                    var idlineCap = stringIDToTypeID( "lineCap" );                    var idlineCap = stringIDToTypeID( "lineCap" );                    var idbuttCap = stringIDToTypeID( "buttCap" );                    desc1849.putEnumerated( idlineCap, idlineCap, idbuttCap );                    var idlineJoin = stringIDToTypeID( "lineJoin" );                    var idlineJoin = stringIDToTypeID( "lineJoin" );                    var idmiterJoin = stringIDToTypeID( "miterJoin" );                    desc1849.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );                    var idlineWidth = stringIDToTypeID( "lineWidth" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1849.putUnitDouble( idlineWidth, idPnt, 0.057600 );                    var idmiterLimit = stringIDToTypeID( "miterLimit" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1849.putUnitDouble( idmiterLimit, idPnt, 0.230400 );                    var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );                    desc1849.putDouble( idlineDashoffset, 0.000000 );                var idTxtS = charIDToTypeID( "TxtS" );                desc1848.putObject( idTxtS, idTxtS, desc1849 );            var idTxtt = charIDToTypeID( "Txtt" );            list104.putObject( idTxtt, desc1848 );                var desc1852 = new ActionDescriptor();                var idFrom = charIDToTypeID( "From" );                desc1852.putInteger( idFrom, 0 );                var idT = charIDToTypeID( "T   " );                desc1852.putInteger( idT, 4614 );                var idTxtS = charIDToTypeID( "TxtS" );                    var desc1853 = new ActionDescriptor();                    var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );                    desc1853.putBoolean( idstyleSheetHasParent, true );                    var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );                    desc1853.putString( idfontPostScriptName, """KaiTi_GB2312""" );                    var idFntN = charIDToTypeID( "FntN" );                    desc1853.putString( idFntN, """KaiTi_GB2312""" );                    var idFntS = charIDToTypeID( "FntS" );                    desc1853.putString( idFntS, """Regular""" );                    var idScrp = charIDToTypeID( "Scrp" );                    desc1853.putInteger( idScrp, 25 );                    var idFntT = charIDToTypeID( "FntT" );                    desc1853.putInteger( idFntT, 1 );                    var idSz = charIDToTypeID( "Sz  " );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1853.putUnitDouble( idSz, idPnt, 13.795416 );                    var idHrzS = charIDToTypeID( "HrzS" );                    desc1853.putDouble( idHrzS, 100.000000 );                    var idVrtS = charIDToTypeID( "VrtS" );                    desc1853.putDouble( idVrtS, 100.000000 );                    var idsyntheticBold = stringIDToTypeID( "syntheticBold" );                    desc1853.putBoolean( idsyntheticBold, false );                    var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );                    desc1853.putBoolean( idsyntheticItalic, false );                    var idautoLeading = stringIDToTypeID( "autoLeading" );                    desc1853.putBoolean( idautoLeading, false );                    var idLdng = charIDToTypeID( "Ldng" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1853.putUnitDouble( idLdng, idPnt, 20.693126 );                    var idTrck = charIDToTypeID( "Trck" );                    desc1853.putInteger( idTrck, 0 );                    var idBsln = charIDToTypeID( "Bsln" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1853.putUnitDouble( idBsln, idPnt, 0.000000 );                    var idcharacterRotation = stringIDToTypeID( "characterRotation" );                    desc1853.putDouble( idcharacterRotation, 0.000000 );                    var idAtKr = charIDToTypeID( "AtKr" );                    var idAtKr = charIDToTypeID( "AtKr" );                    var idmanual = stringIDToTypeID( "manual" );                    desc1853.putEnumerated( idAtKr, idAtKr, idmanual );                    var idfontCaps = stringIDToTypeID( "fontCaps" );                    var idfontCaps = stringIDToTypeID( "fontCaps" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1853.putEnumerated( idfontCaps, idfontCaps, idNrml );                    var idbaseline = stringIDToTypeID( "baseline" );                    var idbaseline = stringIDToTypeID( "baseline" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1853.putEnumerated( idbaseline, idbaseline, idNrml );                    var idotbaseline = stringIDToTypeID( "otbaseline" );                    var idotbaseline = stringIDToTypeID( "otbaseline" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1853.putEnumerated( idotbaseline, idotbaseline, idNrml );                    var idstrikethrough = stringIDToTypeID( "strikethrough" );                    var idstrikethrough = stringIDToTypeID( "strikethrough" );                    var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );                    desc1853.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );                    var idUndl = charIDToTypeID( "Undl" );                    var idUndl = charIDToTypeID( "Undl" );                    var idunderlineOff = stringIDToTypeID( "underlineOff" );                    desc1853.putEnumerated( idUndl, idUndl, idunderlineOff );                    var idunderlineOffset = stringIDToTypeID( "underlineOffset" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1853.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );                    var idligature = stringIDToTypeID( "ligature" );                    desc1853.putBoolean( idligature, false );                    var idaltligature = stringIDToTypeID( "altligature" );                    desc1853.putBoolean( idaltligature, false );                    var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );                    desc1853.putBoolean( idcontextualLigatures, false );                    var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );                    desc1853.putBoolean( idalternateLigatures, false );                    var idoldStyle = stringIDToTypeID( "oldStyle" );                    desc1853.putBoolean( idoldStyle, false );                    var idfractions = stringIDToTypeID( "fractions" );                    desc1853.putBoolean( idfractions, false );                    var idordinals = stringIDToTypeID( "ordinals" );                    desc1853.putBoolean( idordinals, false );                    var idswash = stringIDToTypeID( "swash" );                    desc1853.putBoolean( idswash, false );                    var idtitling = stringIDToTypeID( "titling" );                    desc1853.putBoolean( idtitling, false );                    var idconnectionForms = stringIDToTypeID( "connectionForms" );                    desc1853.putBoolean( idconnectionForms, true );                    var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );                    desc1853.putBoolean( idstylisticAlternates, false );                    var idornaments = stringIDToTypeID( "ornaments" );                    desc1853.putBoolean( idornaments, false );                    var idfigureStyle = stringIDToTypeID( "figureStyle" );                    var idfigureStyle = stringIDToTypeID( "figureStyle" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1853.putEnumerated( idfigureStyle, idfigureStyle, idNrml );                    var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );                    desc1853.putBoolean( idproportionalMetrics, false );                    var idkana = stringIDToTypeID( "kana" );                    desc1853.putBoolean( idkana, false );                    var iditalics = stringIDToTypeID( "italics" );                    desc1853.putBoolean( iditalics, false );                    var idruby = stringIDToTypeID( "ruby" );                    desc1853.putBoolean( idruby, false );                    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                    var idrotated = stringIDToTypeID( "rotated" );                    desc1853.putEnumerated( idbaselineDirection, idbaselineDirection, idrotated );                    var idtextLanguage = stringIDToTypeID( "textLanguage" );                    var idtextLanguage = stringIDToTypeID( "textLanguage" );                    var idenglishLanguage = stringIDToTypeID( "englishLanguage" );                    desc1853.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );                    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );                    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );                    var iddefaultForm = stringIDToTypeID( "defaultForm" );                    desc1853.putEnumerated( idjapaneseAlternate, idjapaneseAlternate, iddefaultForm );                    var idmojiZume = stringIDToTypeID( "mojiZume" );                    desc1853.putDouble( idmojiZume, 0.300000 );                    var idgridAlignment = stringIDToTypeID( "gridAlignment" );                    var idgridAlignment = stringIDToTypeID( "gridAlignment" );                    var idroman = stringIDToTypeID( "roman" );                    desc1853.putEnumerated( idgridAlignment, idgridAlignment, idroman );                    var idenableWariChu = stringIDToTypeID( "enableWariChu" );                    desc1853.putBoolean( idenableWariChu, false );                    var idwariChuCount = stringIDToTypeID( "wariChuCount" );                    desc1853.putInteger( idwariChuCount, 2 );                    var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );                    desc1853.putInteger( idwariChuLineGap, 0 );                    var idwariChuScale = stringIDToTypeID( "wariChuScale" );                    desc1853.putDouble( idwariChuScale, 0.500000 );                    var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );                    desc1853.putInteger( idwariChuWidow, 2 );                    var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );                    desc1853.putInteger( idwariChuOrphan, 2 );                    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                    var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );                    desc1853.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );                    var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );                    desc1853.putInteger( idtcyUpDown, 0 );                    var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );                    desc1853.putInteger( idtcyLeftRight, 0 );                    var idleftAki = stringIDToTypeID( "leftAki" );                    desc1853.putDouble( idleftAki, -1.000000 );                    var idrightAki = stringIDToTypeID( "rightAki" );                    desc1853.putDouble( idrightAki, -1.000000 );                    var idjiDori = stringIDToTypeID( "jiDori" );                    desc1853.putInteger( idjiDori, 0 );                    var idnoBreak = stringIDToTypeID( "noBreak" );                    desc1853.putBoolean( idnoBreak, false );                    var idClr = charIDToTypeID( "Clr " );                        var desc1854 = new ActionDescriptor();                        var idCyn = charIDToTypeID( "Cyn " );                        desc1854.putDouble( idCyn, 74.520000 );                        var idMgnt = charIDToTypeID( "Mgnt" );                        desc1854.putDouble( idMgnt, 67.780000 );                        var idYlw = charIDToTypeID( "Ylw " );                        desc1854.putDouble( idYlw, 67.130000 );                        var idBlck = charIDToTypeID( "Blck" );                        desc1854.putDouble( idBlck, 89.630000 );                    var idCMYC = charIDToTypeID( "CMYC" );                    desc1853.putObject( idClr, idCMYC, desc1854 );                    var idstrokeColor = stringIDToTypeID( "strokeColor" );                        var desc1855 = new ActionDescriptor();                        var idCyn = charIDToTypeID( "Cyn " );                        desc1855.putDouble( idCyn, 0.000000 );                        var idMgnt = charIDToTypeID( "Mgnt" );                        desc1855.putDouble( idMgnt, 0.000000 );                        var idYlw = charIDToTypeID( "Ylw " );                        desc1855.putDouble( idYlw, 0.000000 );                        var idBlck = charIDToTypeID( "Blck" );                        desc1855.putDouble( idBlck, 0.000000 );                    var idCMYC = charIDToTypeID( "CMYC" );                    desc1853.putObject( idstrokeColor, idCMYC, desc1855 );                    var idFl = charIDToTypeID( "Fl  " );                    desc1853.putBoolean( idFl, true );                    var idStrk = charIDToTypeID( "Strk" );                    desc1853.putBoolean( idStrk, false );                    var idfillFirst = stringIDToTypeID( "fillFirst" );                    desc1853.putBoolean( idfillFirst, false );                    var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );                    desc1853.putBoolean( idfillOverPrint, false );                    var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );                    desc1853.putBoolean( idstrokeOverPrint, false );                    var idlineCap = stringIDToTypeID( "lineCap" );                    var idlineCap = stringIDToTypeID( "lineCap" );                    var idbuttCap = stringIDToTypeID( "buttCap" );                    desc1853.putEnumerated( idlineCap, idlineCap, idbuttCap );                    var idlineJoin = stringIDToTypeID( "lineJoin" );                    var idlineJoin = stringIDToTypeID( "lineJoin" );                    var idmiterJoin = stringIDToTypeID( "miterJoin" );                    desc1853.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );                    var idlineWidth = stringIDToTypeID( "lineWidth" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1853.putUnitDouble( idlineWidth, idPnt, 0.057600 );                    var idmiterLimit = stringIDToTypeID( "miterLimit" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1853.putUnitDouble( idmiterLimit, idPnt, 0.230400 );                    var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );                    desc1853.putDouble( idlineDashoffset, 0.000000 );                var idTxtS = charIDToTypeID( "TxtS" );                desc1852.putObject( idTxtS, idTxtS, desc1853 );            var idTxtt = charIDToTypeID( "Txtt" );            list104.putObject( idTxtt, desc1852 );                var desc1856 = new ActionDescriptor();                var idFrom = charIDToTypeID( "From" );                desc1856.putInteger( idFrom, 0 );                var idT = charIDToTypeID( "T   " );                desc1856.putInteger( idT, 4614 );                var idTxtS = charIDToTypeID( "TxtS" );                    var desc1857 = new ActionDescriptor();                    var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );                    desc1857.putBoolean( idstyleSheetHasParent, true );                    var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );                    desc1857.putString( idfontPostScriptName, """KaiTi_GB2312""" );                    var idFntN = charIDToTypeID( "FntN" );                    desc1857.putString( idFntN, """KaiTi_GB2312""" );                    var idFntS = charIDToTypeID( "FntS" );                    desc1857.putString( idFntS, """Regular""" );                    var idScrp = charIDToTypeID( "Scrp" );                    desc1857.putInteger( idScrp, 25 );                    var idFntT = charIDToTypeID( "FntT" );                    desc1857.putInteger( idFntT, 1 );                    var idSz = charIDToTypeID( "Sz  " );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1857.putUnitDouble( idSz, idPnt, 13.795416 );                    var idHrzS = charIDToTypeID( "HrzS" );                    desc1857.putDouble( idHrzS, 100.000000 );                    var idVrtS = charIDToTypeID( "VrtS" );                    desc1857.putDouble( idVrtS, 100.000000 );                    var idsyntheticBold = stringIDToTypeID( "syntheticBold" );                    desc1857.putBoolean( idsyntheticBold, false );                    var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );                    desc1857.putBoolean( idsyntheticItalic, false );                    var idautoLeading = stringIDToTypeID( "autoLeading" );                    desc1857.putBoolean( idautoLeading, false );                    var idLdng = charIDToTypeID( "Ldng" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1857.putUnitDouble( idLdng, idPnt, 20.693126 );                    var idTrck = charIDToTypeID( "Trck" );                    desc1857.putInteger( idTrck, 0 );                    var idBsln = charIDToTypeID( "Bsln" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1857.putUnitDouble( idBsln, idPnt, 0.000000 );                    var idcharacterRotation = stringIDToTypeID( "characterRotation" );                    desc1857.putDouble( idcharacterRotation, 0.000000 );                    var idAtKr = charIDToTypeID( "AtKr" );                    var idAtKr = charIDToTypeID( "AtKr" );                    var idmanual = stringIDToTypeID( "manual" );                    desc1857.putEnumerated( idAtKr, idAtKr, idmanual );                    var idfontCaps = stringIDToTypeID( "fontCaps" );                    var idfontCaps = stringIDToTypeID( "fontCaps" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1857.putEnumerated( idfontCaps, idfontCaps, idNrml );                    var idbaseline = stringIDToTypeID( "baseline" );                    var idbaseline = stringIDToTypeID( "baseline" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1857.putEnumerated( idbaseline, idbaseline, idNrml );                    var idotbaseline = stringIDToTypeID( "otbaseline" );                    var idotbaseline = stringIDToTypeID( "otbaseline" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1857.putEnumerated( idotbaseline, idotbaseline, idNrml );                    var idstrikethrough = stringIDToTypeID( "strikethrough" );                    var idstrikethrough = stringIDToTypeID( "strikethrough" );                    var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );                    desc1857.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );                    var idUndl = charIDToTypeID( "Undl" );                    var idUndl = charIDToTypeID( "Undl" );                    var idunderlineOff = stringIDToTypeID( "underlineOff" );                    desc1857.putEnumerated( idUndl, idUndl, idunderlineOff );                    var idunderlineOffset = stringIDToTypeID( "underlineOffset" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1857.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );                    var idligature = stringIDToTypeID( "ligature" );                    desc1857.putBoolean( idligature, false );                    var idaltligature = stringIDToTypeID( "altligature" );                    desc1857.putBoolean( idaltligature, false );                    var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );                    desc1857.putBoolean( idcontextualLigatures, false );                    var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );                    desc1857.putBoolean( idalternateLigatures, false );                    var idoldStyle = stringIDToTypeID( "oldStyle" );                    desc1857.putBoolean( idoldStyle, false );                    var idfractions = stringIDToTypeID( "fractions" );                    desc1857.putBoolean( idfractions, false );                    var idordinals = stringIDToTypeID( "ordinals" );                    desc1857.putBoolean( idordinals, false );                    var idswash = stringIDToTypeID( "swash" );                    desc1857.putBoolean( idswash, false );                    var idtitling = stringIDToTypeID( "titling" );                    desc1857.putBoolean( idtitling, false );                    var idconnectionForms = stringIDToTypeID( "connectionForms" );                    desc1857.putBoolean( idconnectionForms, true );                    var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );                    desc1857.putBoolean( idstylisticAlternates, false );                    var idornaments = stringIDToTypeID( "ornaments" );                    desc1857.putBoolean( idornaments, false );                    var idfigureStyle = stringIDToTypeID( "figureStyle" );                    var idfigureStyle = stringIDToTypeID( "figureStyle" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1857.putEnumerated( idfigureStyle, idfigureStyle, idNrml );                    var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );                    desc1857.putBoolean( idproportionalMetrics, false );                    var idkana = stringIDToTypeID( "kana" );                    desc1857.putBoolean( idkana, false );                    var iditalics = stringIDToTypeID( "italics" );                    desc1857.putBoolean( iditalics, false );                    var idruby = stringIDToTypeID( "ruby" );                    desc1857.putBoolean( idruby, false );                    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                    var idrotated = stringIDToTypeID( "rotated" );                    desc1857.putEnumerated( idbaselineDirection, idbaselineDirection, idrotated );                    var idtextLanguage = stringIDToTypeID( "textLanguage" );                    var idtextLanguage = stringIDToTypeID( "textLanguage" );                    var idenglishLanguage = stringIDToTypeID( "englishLanguage" );                    desc1857.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );                    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );                    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );                    var iddefaultForm = stringIDToTypeID( "defaultForm" );                    desc1857.putEnumerated( idjapaneseAlternate, idjapaneseAlternate, iddefaultForm );                    var idmojiZume = stringIDToTypeID( "mojiZume" );                    desc1857.putDouble( idmojiZume, 0.300000 );                    var idgridAlignment = stringIDToTypeID( "gridAlignment" );                    var idgridAlignment = stringIDToTypeID( "gridAlignment" );                    var idroman = stringIDToTypeID( "roman" );                    desc1857.putEnumerated( idgridAlignment, idgridAlignment, idroman );                    var idenableWariChu = stringIDToTypeID( "enableWariChu" );                    desc1857.putBoolean( idenableWariChu, false );                    var idwariChuCount = stringIDToTypeID( "wariChuCount" );                    desc1857.putInteger( idwariChuCount, 2 );                    var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );                    desc1857.putInteger( idwariChuLineGap, 0 );                    var idwariChuScale = stringIDToTypeID( "wariChuScale" );                    desc1857.putDouble( idwariChuScale, 0.500000 );                    var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );                    desc1857.putInteger( idwariChuWidow, 2 );                    var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );                    desc1857.putInteger( idwariChuOrphan, 2 );                    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                    var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );                    desc1857.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );                    var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );                    desc1857.putInteger( idtcyUpDown, 0 );                    var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );                    desc1857.putInteger( idtcyLeftRight, 0 );                    var idleftAki = stringIDToTypeID( "leftAki" );                    desc1857.putDouble( idleftAki, -1.000000 );                    var idrightAki = stringIDToTypeID( "rightAki" );                    desc1857.putDouble( idrightAki, -1.000000 );                    var idjiDori = stringIDToTypeID( "jiDori" );                    desc1857.putInteger( idjiDori, 0 );                    var idnoBreak = stringIDToTypeID( "noBreak" );                    desc1857.putBoolean( idnoBreak, false );                    var idClr = charIDToTypeID( "Clr " );                        var desc1858 = new ActionDescriptor();                        var idCyn = charIDToTypeID( "Cyn " );                        desc1858.putDouble( idCyn, 74.520000 );                        var idMgnt = charIDToTypeID( "Mgnt" );                        desc1858.putDouble( idMgnt, 67.780000 );                        var idYlw = charIDToTypeID( "Ylw " );                        desc1858.putDouble( idYlw, 67.130000 );                        var idBlck = charIDToTypeID( "Blck" );                        desc1858.putDouble( idBlck, 89.630000 );                    var idCMYC = charIDToTypeID( "CMYC" );                    desc1857.putObject( idClr, idCMYC, desc1858 );                    var idstrokeColor = stringIDToTypeID( "strokeColor" );                        var desc1859 = new ActionDescriptor();                        var idCyn = charIDToTypeID( "Cyn " );                        desc1859.putDouble( idCyn, 0.000000 );                        var idMgnt = charIDToTypeID( "Mgnt" );                        desc1859.putDouble( idMgnt, 0.000000 );                        var idYlw = charIDToTypeID( "Ylw " );                        desc1859.putDouble( idYlw, 0.000000 );                        var idBlck = charIDToTypeID( "Blck" );                        desc1859.putDouble( idBlck, 0.000000 );                    var idCMYC = charIDToTypeID( "CMYC" );                    desc1857.putObject( idstrokeColor, idCMYC, desc1859 );                    var idFl = charIDToTypeID( "Fl  " );                    desc1857.putBoolean( idFl, true );                    var idStrk = charIDToTypeID( "Strk" );                    desc1857.putBoolean( idStrk, false );                    var idfillFirst = stringIDToTypeID( "fillFirst" );                    desc1857.putBoolean( idfillFirst, false );                    var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );                    desc1857.putBoolean( idfillOverPrint, false );                    var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );                    desc1857.putBoolean( idstrokeOverPrint, false );                    var idlineCap = stringIDToTypeID( "lineCap" );                    var idlineCap = stringIDToTypeID( "lineCap" );                    var idbuttCap = stringIDToTypeID( "buttCap" );                    desc1857.putEnumerated( idlineCap, idlineCap, idbuttCap );                    var idlineJoin = stringIDToTypeID( "lineJoin" );                    var idlineJoin = stringIDToTypeID( "lineJoin" );                    var idmiterJoin = stringIDToTypeID( "miterJoin" );                    desc1857.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );                    var idlineWidth = stringIDToTypeID( "lineWidth" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1857.putUnitDouble( idlineWidth, idPnt, 0.057600 );                    var idmiterLimit = stringIDToTypeID( "miterLimit" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1857.putUnitDouble( idmiterLimit, idPnt, 0.230400 );                    var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );                    desc1857.putDouble( idlineDashoffset, 0.000000 );                var idTxtS = charIDToTypeID( "TxtS" );                desc1856.putObject( idTxtS, idTxtS, desc1857 );            var idTxtt = charIDToTypeID( "Txtt" );            list104.putObject( idTxtt, desc1856 );                var desc1860 = new ActionDescriptor();                var idFrom = charIDToTypeID( "From" );                desc1860.putInteger( idFrom, 0 );                var idT = charIDToTypeID( "T   " );                desc1860.putInteger( idT, 4614 );                var idTxtS = charIDToTypeID( "TxtS" );                    var desc1861 = new ActionDescriptor();                    var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );                    desc1861.putBoolean( idstyleSheetHasParent, true );                    var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );                    desc1861.putString( idfontPostScriptName, """KaiTi_GB2312""" );                    var idFntN = charIDToTypeID( "FntN" );                    desc1861.putString( idFntN, """KaiTi_GB2312""" );                    var idFntS = charIDToTypeID( "FntS" );                    desc1861.putString( idFntS, """Regular""" );                    var idScrp = charIDToTypeID( "Scrp" );                    desc1861.putInteger( idScrp, 25 );                    var idFntT = charIDToTypeID( "FntT" );                    desc1861.putInteger( idFntT, 1 );                    var idSz = charIDToTypeID( "Sz  " );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1861.putUnitDouble( idSz, idPnt, 13.795416 );                    var idHrzS = charIDToTypeID( "HrzS" );                    desc1861.putDouble( idHrzS, 100.000000 );                    var idVrtS = charIDToTypeID( "VrtS" );                    desc1861.putDouble( idVrtS, 100.000000 );                    var idsyntheticBold = stringIDToTypeID( "syntheticBold" );                    desc1861.putBoolean( idsyntheticBold, false );                    var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );                    desc1861.putBoolean( idsyntheticItalic, false );                    var idautoLeading = stringIDToTypeID( "autoLeading" );                    desc1861.putBoolean( idautoLeading, false );                    var idLdng = charIDToTypeID( "Ldng" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1861.putUnitDouble( idLdng, idPnt, 20.693126 );                    var idTrck = charIDToTypeID( "Trck" );                    desc1861.putInteger( idTrck, 0 );                    var idBsln = charIDToTypeID( "Bsln" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1861.putUnitDouble( idBsln, idPnt, 0.000000 );                    var idcharacterRotation = stringIDToTypeID( "characterRotation" );                    desc1861.putDouble( idcharacterRotation, 0.000000 );                    var idAtKr = charIDToTypeID( "AtKr" );                    var idAtKr = charIDToTypeID( "AtKr" );                    var idmanual = stringIDToTypeID( "manual" );                    desc1861.putEnumerated( idAtKr, idAtKr, idmanual );                    var idfontCaps = stringIDToTypeID( "fontCaps" );                    var idfontCaps = stringIDToTypeID( "fontCaps" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1861.putEnumerated( idfontCaps, idfontCaps, idNrml );                    var idbaseline = stringIDToTypeID( "baseline" );                    var idbaseline = stringIDToTypeID( "baseline" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1861.putEnumerated( idbaseline, idbaseline, idNrml );                    var idotbaseline = stringIDToTypeID( "otbaseline" );                    var idotbaseline = stringIDToTypeID( "otbaseline" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1861.putEnumerated( idotbaseline, idotbaseline, idNrml );                    var idstrikethrough = stringIDToTypeID( "strikethrough" );                    var idstrikethrough = stringIDToTypeID( "strikethrough" );                    var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );                    desc1861.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );                    var idUndl = charIDToTypeID( "Undl" );                    var idUndl = charIDToTypeID( "Undl" );                    var idunderlineOff = stringIDToTypeID( "underlineOff" );                    desc1861.putEnumerated( idUndl, idUndl, idunderlineOff );                    var idunderlineOffset = stringIDToTypeID( "underlineOffset" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1861.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );                    var idligature = stringIDToTypeID( "ligature" );                    desc1861.putBoolean( idligature, false );                    var idaltligature = stringIDToTypeID( "altligature" );                    desc1861.putBoolean( idaltligature, false );                    var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );                    desc1861.putBoolean( idcontextualLigatures, false );                    var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );                    desc1861.putBoolean( idalternateLigatures, false );                    var idoldStyle = stringIDToTypeID( "oldStyle" );                    desc1861.putBoolean( idoldStyle, false );                    var idfractions = stringIDToTypeID( "fractions" );                    desc1861.putBoolean( idfractions, false );                    var idordinals = stringIDToTypeID( "ordinals" );                    desc1861.putBoolean( idordinals, false );                    var idswash = stringIDToTypeID( "swash" );                    desc1861.putBoolean( idswash, false );                    var idtitling = stringIDToTypeID( "titling" );                    desc1861.putBoolean( idtitling, false );                    var idconnectionForms = stringIDToTypeID( "connectionForms" );                    desc1861.putBoolean( idconnectionForms, true );                    var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );                    desc1861.putBoolean( idstylisticAlternates, false );                    var idornaments = stringIDToTypeID( "ornaments" );                    desc1861.putBoolean( idornaments, false );                    var idfigureStyle = stringIDToTypeID( "figureStyle" );                    var idfigureStyle = stringIDToTypeID( "figureStyle" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1861.putEnumerated( idfigureStyle, idfigureStyle, idNrml );                    var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );                    desc1861.putBoolean( idproportionalMetrics, false );                    var idkana = stringIDToTypeID( "kana" );                    desc1861.putBoolean( idkana, false );                    var iditalics = stringIDToTypeID( "italics" );                    desc1861.putBoolean( iditalics, false );                    var idruby = stringIDToTypeID( "ruby" );                    desc1861.putBoolean( idruby, false );                    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                    var idrotated = stringIDToTypeID( "rotated" );                    desc1861.putEnumerated( idbaselineDirection, idbaselineDirection, idrotated );                    var idtextLanguage = stringIDToTypeID( "textLanguage" );                    var idtextLanguage = stringIDToTypeID( "textLanguage" );                    var idenglishLanguage = stringIDToTypeID( "englishLanguage" );                    desc1861.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );                    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );                    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );                    var iddefaultForm = stringIDToTypeID( "defaultForm" );                    desc1861.putEnumerated( idjapaneseAlternate, idjapaneseAlternate, iddefaultForm );                    var idmojiZume = stringIDToTypeID( "mojiZume" );                    desc1861.putDouble( idmojiZume, 0.300000 );                    var idgridAlignment = stringIDToTypeID( "gridAlignment" );                    var idgridAlignment = stringIDToTypeID( "gridAlignment" );                    var idroman = stringIDToTypeID( "roman" );                    desc1861.putEnumerated( idgridAlignment, idgridAlignment, idroman );                    var idenableWariChu = stringIDToTypeID( "enableWariChu" );                    desc1861.putBoolean( idenableWariChu, false );                    var idwariChuCount = stringIDToTypeID( "wariChuCount" );                    desc1861.putInteger( idwariChuCount, 2 );                    var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );                    desc1861.putInteger( idwariChuLineGap, 0 );                    var idwariChuScale = stringIDToTypeID( "wariChuScale" );                    desc1861.putDouble( idwariChuScale, 0.500000 );                    var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );                    desc1861.putInteger( idwariChuWidow, 2 );                    var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );                    desc1861.putInteger( idwariChuOrphan, 2 );                    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                    var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );                    desc1861.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );                    var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );                    desc1861.putInteger( idtcyUpDown, 0 );                    var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );                    desc1861.putInteger( idtcyLeftRight, 0 );                    var idleftAki = stringIDToTypeID( "leftAki" );                    desc1861.putDouble( idleftAki, -1.000000 );                    var idrightAki = stringIDToTypeID( "rightAki" );                    desc1861.putDouble( idrightAki, -1.000000 );                    var idjiDori = stringIDToTypeID( "jiDori" );                    desc1861.putInteger( idjiDori, 0 );                    var idnoBreak = stringIDToTypeID( "noBreak" );                    desc1861.putBoolean( idnoBreak, false );                    var idClr = charIDToTypeID( "Clr " );                        var desc1862 = new ActionDescriptor();                        var idCyn = charIDToTypeID( "Cyn " );                        desc1862.putDouble( idCyn, 74.520000 );                        var idMgnt = charIDToTypeID( "Mgnt" );                        desc1862.putDouble( idMgnt, 67.780000 );                        var idYlw = charIDToTypeID( "Ylw " );                        desc1862.putDouble( idYlw, 67.130000 );                        var idBlck = charIDToTypeID( "Blck" );                        desc1862.putDouble( idBlck, 89.630000 );                    var idCMYC = charIDToTypeID( "CMYC" );                    desc1861.putObject( idClr, idCMYC, desc1862 );                    var idstrokeColor = stringIDToTypeID( "strokeColor" );                        var desc1863 = new ActionDescriptor();                        var idCyn = charIDToTypeID( "Cyn " );                        desc1863.putDouble( idCyn, 0.000000 );                        var idMgnt = charIDToTypeID( "Mgnt" );                        desc1863.putDouble( idMgnt, 0.000000 );                        var idYlw = charIDToTypeID( "Ylw " );                        desc1863.putDouble( idYlw, 0.000000 );                        var idBlck = charIDToTypeID( "Blck" );                        desc1863.putDouble( idBlck, 0.000000 );                    var idCMYC = charIDToTypeID( "CMYC" );                    desc1861.putObject( idstrokeColor, idCMYC, desc1863 );                    var idFl = charIDToTypeID( "Fl  " );                    desc1861.putBoolean( idFl, true );                    var idStrk = charIDToTypeID( "Strk" );                    desc1861.putBoolean( idStrk, false );                    var idfillFirst = stringIDToTypeID( "fillFirst" );                    desc1861.putBoolean( idfillFirst, false );                    var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );                    desc1861.putBoolean( idfillOverPrint, false );                    var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );                    desc1861.putBoolean( idstrokeOverPrint, false );                    var idlineCap = stringIDToTypeID( "lineCap" );                    var idlineCap = stringIDToTypeID( "lineCap" );                    var idbuttCap = stringIDToTypeID( "buttCap" );                    desc1861.putEnumerated( idlineCap, idlineCap, idbuttCap );                    var idlineJoin = stringIDToTypeID( "lineJoin" );                    var idlineJoin = stringIDToTypeID( "lineJoin" );                    var idmiterJoin = stringIDToTypeID( "miterJoin" );                    desc1861.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );                    var idlineWidth = stringIDToTypeID( "lineWidth" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1861.putUnitDouble( idlineWidth, idPnt, 0.057600 );                    var idmiterLimit = stringIDToTypeID( "miterLimit" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1861.putUnitDouble( idmiterLimit, idPnt, 0.230400 );                    var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );                    desc1861.putDouble( idlineDashoffset, 0.000000 );                var idTxtS = charIDToTypeID( "TxtS" );                desc1860.putObject( idTxtS, idTxtS, desc1861 );            var idTxtt = charIDToTypeID( "Txtt" );            list104.putObject( idTxtt, desc1860 );                var desc1864 = new ActionDescriptor();                var idFrom = charIDToTypeID( "From" );                desc1864.putInteger( idFrom, 0 );                var idT = charIDToTypeID( "T   " );                desc1864.putInteger( idT, 4614 );                var idTxtS = charIDToTypeID( "TxtS" );                    var desc1865 = new ActionDescriptor();                    var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );                    desc1865.putBoolean( idstyleSheetHasParent, true );                    var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );                    desc1865.putString( idfontPostScriptName, """KaiTi_GB2312""" );                    var idFntN = charIDToTypeID( "FntN" );                    desc1865.putString( idFntN, """KaiTi_GB2312""" );                    var idFntS = charIDToTypeID( "FntS" );                    desc1865.putString( idFntS, """Regular""" );                    var idScrp = charIDToTypeID( "Scrp" );                    desc1865.putInteger( idScrp, 25 );                    var idFntT = charIDToTypeID( "FntT" );                    desc1865.putInteger( idFntT, 1 );                    var idSz = charIDToTypeID( "Sz  " );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1865.putUnitDouble( idSz, idPnt, 13.795416 );                    var idHrzS = charIDToTypeID( "HrzS" );                    desc1865.putDouble( idHrzS, 100.000000 );                    var idVrtS = charIDToTypeID( "VrtS" );                    desc1865.putDouble( idVrtS, 100.000000 );                    var idsyntheticBold = stringIDToTypeID( "syntheticBold" );                    desc1865.putBoolean( idsyntheticBold, false );                    var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );                    desc1865.putBoolean( idsyntheticItalic, false );                    var idautoLeading = stringIDToTypeID( "autoLeading" );                    desc1865.putBoolean( idautoLeading, false );                    var idLdng = charIDToTypeID( "Ldng" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1865.putUnitDouble( idLdng, idPnt, 20.693126 );                    var idTrck = charIDToTypeID( "Trck" );                    desc1865.putInteger( idTrck, 0 );                    var idBsln = charIDToTypeID( "Bsln" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1865.putUnitDouble( idBsln, idPnt, 0.000000 );                    var idcharacterRotation = stringIDToTypeID( "characterRotation" );                    desc1865.putDouble( idcharacterRotation, 0.000000 );                    var idAtKr = charIDToTypeID( "AtKr" );                    var idAtKr = charIDToTypeID( "AtKr" );                    var idmanual = stringIDToTypeID( "manual" );                    desc1865.putEnumerated( idAtKr, idAtKr, idmanual );                    var idfontCaps = stringIDToTypeID( "fontCaps" );                    var idfontCaps = stringIDToTypeID( "fontCaps" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1865.putEnumerated( idfontCaps, idfontCaps, idNrml );                    var idbaseline = stringIDToTypeID( "baseline" );                    var idbaseline = stringIDToTypeID( "baseline" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1865.putEnumerated( idbaseline, idbaseline, idNrml );                    var idotbaseline = stringIDToTypeID( "otbaseline" );                    var idotbaseline = stringIDToTypeID( "otbaseline" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1865.putEnumerated( idotbaseline, idotbaseline, idNrml );                    var idstrikethrough = stringIDToTypeID( "strikethrough" );                    var idstrikethrough = stringIDToTypeID( "strikethrough" );                    var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );                    desc1865.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );                    var idUndl = charIDToTypeID( "Undl" );                    var idUndl = charIDToTypeID( "Undl" );                    var idunderlineOff = stringIDToTypeID( "underlineOff" );                    desc1865.putEnumerated( idUndl, idUndl, idunderlineOff );                    var idunderlineOffset = stringIDToTypeID( "underlineOffset" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1865.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );                    var idligature = stringIDToTypeID( "ligature" );                    desc1865.putBoolean( idligature, false );                    var idaltligature = stringIDToTypeID( "altligature" );                    desc1865.putBoolean( idaltligature, false );                    var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );                    desc1865.putBoolean( idcontextualLigatures, false );                    var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );                    desc1865.putBoolean( idalternateLigatures, false );                    var idoldStyle = stringIDToTypeID( "oldStyle" );                    desc1865.putBoolean( idoldStyle, false );                    var idfractions = stringIDToTypeID( "fractions" );                    desc1865.putBoolean( idfractions, false );                    var idordinals = stringIDToTypeID( "ordinals" );                    desc1865.putBoolean( idordinals, false );                    var idswash = stringIDToTypeID( "swash" );                    desc1865.putBoolean( idswash, false );                    var idtitling = stringIDToTypeID( "titling" );                    desc1865.putBoolean( idtitling, false );                    var idconnectionForms = stringIDToTypeID( "connectionForms" );                    desc1865.putBoolean( idconnectionForms, true );                    var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );                    desc1865.putBoolean( idstylisticAlternates, false );                    var idornaments = stringIDToTypeID( "ornaments" );                    desc1865.putBoolean( idornaments, false );                    var idfigureStyle = stringIDToTypeID( "figureStyle" );                    var idfigureStyle = stringIDToTypeID( "figureStyle" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1865.putEnumerated( idfigureStyle, idfigureStyle, idNrml );                    var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );                    desc1865.putBoolean( idproportionalMetrics, false );                    var idkana = stringIDToTypeID( "kana" );                    desc1865.putBoolean( idkana, false );                    var iditalics = stringIDToTypeID( "italics" );                    desc1865.putBoolean( iditalics, false );                    var idruby = stringIDToTypeID( "ruby" );                    desc1865.putBoolean( idruby, false );                    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                    var idrotated = stringIDToTypeID( "rotated" );                    desc1865.putEnumerated( idbaselineDirection, idbaselineDirection, idrotated );                    var idtextLanguage = stringIDToTypeID( "textLanguage" );                    var idtextLanguage = stringIDToTypeID( "textLanguage" );                    var idenglishLanguage = stringIDToTypeID( "englishLanguage" );                    desc1865.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );                    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );                    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );                    var iddefaultForm = stringIDToTypeID( "defaultForm" );                    desc1865.putEnumerated( idjapaneseAlternate, idjapaneseAlternate, iddefaultForm );                    var idmojiZume = stringIDToTypeID( "mojiZume" );                    desc1865.putDouble( idmojiZume, 0.300000 );                    var idgridAlignment = stringIDToTypeID( "gridAlignment" );                    var idgridAlignment = stringIDToTypeID( "gridAlignment" );                    var idroman = stringIDToTypeID( "roman" );                    desc1865.putEnumerated( idgridAlignment, idgridAlignment, idroman );                    var idenableWariChu = stringIDToTypeID( "enableWariChu" );                    desc1865.putBoolean( idenableWariChu, false );                    var idwariChuCount = stringIDToTypeID( "wariChuCount" );                    desc1865.putInteger( idwariChuCount, 2 );                    var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );                    desc1865.putInteger( idwariChuLineGap, 0 );                    var idwariChuScale = stringIDToTypeID( "wariChuScale" );                    desc1865.putDouble( idwariChuScale, 0.500000 );                    var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );                    desc1865.putInteger( idwariChuWidow, 2 );                    var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );                    desc1865.putInteger( idwariChuOrphan, 2 );                    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                    var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );                    desc1865.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );                    var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );                    desc1865.putInteger( idtcyUpDown, 0 );                    var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );                    desc1865.putInteger( idtcyLeftRight, 0 );                    var idleftAki = stringIDToTypeID( "leftAki" );                    desc1865.putDouble( idleftAki, -1.000000 );                    var idrightAki = stringIDToTypeID( "rightAki" );                    desc1865.putDouble( idrightAki, -1.000000 );                    var idjiDori = stringIDToTypeID( "jiDori" );                    desc1865.putInteger( idjiDori, 0 );                    var idnoBreak = stringIDToTypeID( "noBreak" );                    desc1865.putBoolean( idnoBreak, false );                    var idClr = charIDToTypeID( "Clr " );                        var desc1866 = new ActionDescriptor();                        var idCyn = charIDToTypeID( "Cyn " );                        desc1866.putDouble( idCyn, 74.520000 );                        var idMgnt = charIDToTypeID( "Mgnt" );                        desc1866.putDouble( idMgnt, 67.780000 );                        var idYlw = charIDToTypeID( "Ylw " );                        desc1866.putDouble( idYlw, 67.130000 );                        var idBlck = charIDToTypeID( "Blck" );                        desc1866.putDouble( idBlck, 89.630000 );                    var idCMYC = charIDToTypeID( "CMYC" );                    desc1865.putObject( idClr, idCMYC, desc1866 );                    var idstrokeColor = stringIDToTypeID( "strokeColor" );                        var desc1867 = new ActionDescriptor();                        var idCyn = charIDToTypeID( "Cyn " );                        desc1867.putDouble( idCyn, 0.000000 );                        var idMgnt = charIDToTypeID( "Mgnt" );                        desc1867.putDouble( idMgnt, 0.000000 );                        var idYlw = charIDToTypeID( "Ylw " );                        desc1867.putDouble( idYlw, 0.000000 );                        var idBlck = charIDToTypeID( "Blck" );                        desc1867.putDouble( idBlck, 0.000000 );                    var idCMYC = charIDToTypeID( "CMYC" );                    desc1865.putObject( idstrokeColor, idCMYC, desc1867 );                    var idFl = charIDToTypeID( "Fl  " );                    desc1865.putBoolean( idFl, true );                    var idStrk = charIDToTypeID( "Strk" );                    desc1865.putBoolean( idStrk, false );                    var idfillFirst = stringIDToTypeID( "fillFirst" );                    desc1865.putBoolean( idfillFirst, false );                    var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );                    desc1865.putBoolean( idfillOverPrint, false );                    var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );                    desc1865.putBoolean( idstrokeOverPrint, false );                    var idlineCap = stringIDToTypeID( "lineCap" );                    var idlineCap = stringIDToTypeID( "lineCap" );                    var idbuttCap = stringIDToTypeID( "buttCap" );                    desc1865.putEnumerated( idlineCap, idlineCap, idbuttCap );                    var idlineJoin = stringIDToTypeID( "lineJoin" );                    var idlineJoin = stringIDToTypeID( "lineJoin" );                    var idmiterJoin = stringIDToTypeID( "miterJoin" );                    desc1865.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );                    var idlineWidth = stringIDToTypeID( "lineWidth" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1865.putUnitDouble( idlineWidth, idPnt, 0.057600 );                    var idmiterLimit = stringIDToTypeID( "miterLimit" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1865.putUnitDouble( idmiterLimit, idPnt, 0.230400 );                    var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );                    desc1865.putDouble( idlineDashoffset, 0.000000 );                var idTxtS = charIDToTypeID( "TxtS" );                desc1864.putObject( idTxtS, idTxtS, desc1865 );            var idTxtt = charIDToTypeID( "Txtt" );            list104.putObject( idTxtt, desc1864 );                var desc1868 = new ActionDescriptor();                var idFrom = charIDToTypeID( "From" );                desc1868.putInteger( idFrom, 0 );                var idT = charIDToTypeID( "T   " );                desc1868.putInteger( idT, 4614 );                var idTxtS = charIDToTypeID( "TxtS" );                    var desc1869 = new ActionDescriptor();                    var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );                    desc1869.putBoolean( idstyleSheetHasParent, true );                    var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );                    desc1869.putString( idfontPostScriptName, """KaiTi_GB2312""" );                    var idFntN = charIDToTypeID( "FntN" );                    desc1869.putString( idFntN, """KaiTi_GB2312""" );                    var idFntS = charIDToTypeID( "FntS" );                    desc1869.putString( idFntS, """Regular""" );                    var idScrp = charIDToTypeID( "Scrp" );                    desc1869.putInteger( idScrp, 25 );                    var idFntT = charIDToTypeID( "FntT" );                    desc1869.putInteger( idFntT, 1 );                    var idSz = charIDToTypeID( "Sz  " );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1869.putUnitDouble( idSz, idPnt, 13.795416 );                    var idHrzS = charIDToTypeID( "HrzS" );                    desc1869.putDouble( idHrzS, 100.000000 );                    var idVrtS = charIDToTypeID( "VrtS" );                    desc1869.putDouble( idVrtS, 100.000000 );                    var idsyntheticBold = stringIDToTypeID( "syntheticBold" );                    desc1869.putBoolean( idsyntheticBold, false );                    var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );                    desc1869.putBoolean( idsyntheticItalic, false );                    var idautoLeading = stringIDToTypeID( "autoLeading" );                    desc1869.putBoolean( idautoLeading, false );                    var idLdng = charIDToTypeID( "Ldng" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1869.putUnitDouble( idLdng, idPnt, 20.693126 );                    var idTrck = charIDToTypeID( "Trck" );                    desc1869.putInteger( idTrck, 0 );                    var idBsln = charIDToTypeID( "Bsln" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1869.putUnitDouble( idBsln, idPnt, 0.000000 );                    var idcharacterRotation = stringIDToTypeID( "characterRotation" );                    desc1869.putDouble( idcharacterRotation, 0.000000 );                    var idAtKr = charIDToTypeID( "AtKr" );                    var idAtKr = charIDToTypeID( "AtKr" );                    var idmanual = stringIDToTypeID( "manual" );                    desc1869.putEnumerated( idAtKr, idAtKr, idmanual );                    var idfontCaps = stringIDToTypeID( "fontCaps" );                    var idfontCaps = stringIDToTypeID( "fontCaps" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1869.putEnumerated( idfontCaps, idfontCaps, idNrml );                    var idbaseline = stringIDToTypeID( "baseline" );                    var idbaseline = stringIDToTypeID( "baseline" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1869.putEnumerated( idbaseline, idbaseline, idNrml );                    var idotbaseline = stringIDToTypeID( "otbaseline" );                    var idotbaseline = stringIDToTypeID( "otbaseline" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1869.putEnumerated( idotbaseline, idotbaseline, idNrml );                    var idstrikethrough = stringIDToTypeID( "strikethrough" );                    var idstrikethrough = stringIDToTypeID( "strikethrough" );                    var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );                    desc1869.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );                    var idUndl = charIDToTypeID( "Undl" );                    var idUndl = charIDToTypeID( "Undl" );                    var idunderlineOff = stringIDToTypeID( "underlineOff" );                    desc1869.putEnumerated( idUndl, idUndl, idunderlineOff );                    var idunderlineOffset = stringIDToTypeID( "underlineOffset" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1869.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );                    var idligature = stringIDToTypeID( "ligature" );                    desc1869.putBoolean( idligature, false );                    var idaltligature = stringIDToTypeID( "altligature" );                    desc1869.putBoolean( idaltligature, false );                    var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );                    desc1869.putBoolean( idcontextualLigatures, false );                    var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );                    desc1869.putBoolean( idalternateLigatures, false );                    var idoldStyle = stringIDToTypeID( "oldStyle" );                    desc1869.putBoolean( idoldStyle, false );                    var idfractions = stringIDToTypeID( "fractions" );                    desc1869.putBoolean( idfractions, false );                    var idordinals = stringIDToTypeID( "ordinals" );                    desc1869.putBoolean( idordinals, false );                    var idswash = stringIDToTypeID( "swash" );                    desc1869.putBoolean( idswash, false );                    var idtitling = stringIDToTypeID( "titling" );                    desc1869.putBoolean( idtitling, false );                    var idconnectionForms = stringIDToTypeID( "connectionForms" );                    desc1869.putBoolean( idconnectionForms, true );                    var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );                    desc1869.putBoolean( idstylisticAlternates, false );                    var idornaments = stringIDToTypeID( "ornaments" );                    desc1869.putBoolean( idornaments, false );                    var idfigureStyle = stringIDToTypeID( "figureStyle" );                    var idfigureStyle = stringIDToTypeID( "figureStyle" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1869.putEnumerated( idfigureStyle, idfigureStyle, idNrml );                    var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );                    desc1869.putBoolean( idproportionalMetrics, false );                    var idkana = stringIDToTypeID( "kana" );                    desc1869.putBoolean( idkana, false );                    var iditalics = stringIDToTypeID( "italics" );                    desc1869.putBoolean( iditalics, false );                    var idruby = stringIDToTypeID( "ruby" );                    desc1869.putBoolean( idruby, false );                    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                    var idrotated = stringIDToTypeID( "rotated" );                    desc1869.putEnumerated( idbaselineDirection, idbaselineDirection, idrotated );                    var idtextLanguage = stringIDToTypeID( "textLanguage" );                    var idtextLanguage = stringIDToTypeID( "textLanguage" );                    var idenglishLanguage = stringIDToTypeID( "englishLanguage" );                    desc1869.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );                    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );                    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );                    var iddefaultForm = stringIDToTypeID( "defaultForm" );                    desc1869.putEnumerated( idjapaneseAlternate, idjapaneseAlternate, iddefaultForm );                    var idmojiZume = stringIDToTypeID( "mojiZume" );                    desc1869.putDouble( idmojiZume, 0.300000 );                    var idgridAlignment = stringIDToTypeID( "gridAlignment" );                    var idgridAlignment = stringIDToTypeID( "gridAlignment" );                    var idroman = stringIDToTypeID( "roman" );                    desc1869.putEnumerated( idgridAlignment, idgridAlignment, idroman );                    var idenableWariChu = stringIDToTypeID( "enableWariChu" );                    desc1869.putBoolean( idenableWariChu, false );                    var idwariChuCount = stringIDToTypeID( "wariChuCount" );                    desc1869.putInteger( idwariChuCount, 2 );                    var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );                    desc1869.putInteger( idwariChuLineGap, 0 );                    var idwariChuScale = stringIDToTypeID( "wariChuScale" );                    desc1869.putDouble( idwariChuScale, 0.500000 );                    var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );                    desc1869.putInteger( idwariChuWidow, 2 );                    var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );                    desc1869.putInteger( idwariChuOrphan, 2 );                    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                    var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );                    desc1869.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );                    var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );                    desc1869.putInteger( idtcyUpDown, 0 );                    var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );                    desc1869.putInteger( idtcyLeftRight, 0 );                    var idleftAki = stringIDToTypeID( "leftAki" );                    desc1869.putDouble( idleftAki, -1.000000 );                    var idrightAki = stringIDToTypeID( "rightAki" );                    desc1869.putDouble( idrightAki, -1.000000 );                    var idjiDori = stringIDToTypeID( "jiDori" );                    desc1869.putInteger( idjiDori, 0 );                    var idnoBreak = stringIDToTypeID( "noBreak" );                    desc1869.putBoolean( idnoBreak, false );                    var idClr = charIDToTypeID( "Clr " );                        var desc1870 = new ActionDescriptor();                        var idCyn = charIDToTypeID( "Cyn " );                        desc1870.putDouble( idCyn, 74.520000 );                        var idMgnt = charIDToTypeID( "Mgnt" );                        desc1870.putDouble( idMgnt, 67.780000 );                        var idYlw = charIDToTypeID( "Ylw " );                        desc1870.putDouble( idYlw, 67.130000 );                        var idBlck = charIDToTypeID( "Blck" );                        desc1870.putDouble( idBlck, 89.630000 );                    var idCMYC = charIDToTypeID( "CMYC" );                    desc1869.putObject( idClr, idCMYC, desc1870 );                    var idstrokeColor = stringIDToTypeID( "strokeColor" );                        var desc1871 = new ActionDescriptor();                        var idCyn = charIDToTypeID( "Cyn " );                        desc1871.putDouble( idCyn, 0.000000 );                        var idMgnt = charIDToTypeID( "Mgnt" );                        desc1871.putDouble( idMgnt, 0.000000 );                        var idYlw = charIDToTypeID( "Ylw " );                        desc1871.putDouble( idYlw, 0.000000 );                        var idBlck = charIDToTypeID( "Blck" );                        desc1871.putDouble( idBlck, 0.000000 );                    var idCMYC = charIDToTypeID( "CMYC" );                    desc1869.putObject( idstrokeColor, idCMYC, desc1871 );                    var idFl = charIDToTypeID( "Fl  " );                    desc1869.putBoolean( idFl, true );                    var idStrk = charIDToTypeID( "Strk" );                    desc1869.putBoolean( idStrk, false );                    var idfillFirst = stringIDToTypeID( "fillFirst" );                    desc1869.putBoolean( idfillFirst, false );                    var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );                    desc1869.putBoolean( idfillOverPrint, false );                    var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );                    desc1869.putBoolean( idstrokeOverPrint, false );                    var idlineCap = stringIDToTypeID( "lineCap" );                    var idlineCap = stringIDToTypeID( "lineCap" );                    var idbuttCap = stringIDToTypeID( "buttCap" );                    desc1869.putEnumerated( idlineCap, idlineCap, idbuttCap );                    var idlineJoin = stringIDToTypeID( "lineJoin" );                    var idlineJoin = stringIDToTypeID( "lineJoin" );                    var idmiterJoin = stringIDToTypeID( "miterJoin" );                    desc1869.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );                    var idlineWidth = stringIDToTypeID( "lineWidth" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1869.putUnitDouble( idlineWidth, idPnt, 0.057600 );                    var idmiterLimit = stringIDToTypeID( "miterLimit" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1869.putUnitDouble( idmiterLimit, idPnt, 0.230400 );                    var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );                    desc1869.putDouble( idlineDashoffset, 0.000000 );                var idTxtS = charIDToTypeID( "TxtS" );                desc1868.putObject( idTxtS, idTxtS, desc1869 );            var idTxtt = charIDToTypeID( "Txtt" );            list104.putObject( idTxtt, desc1868 );                var desc1872 = new ActionDescriptor();                var idFrom = charIDToTypeID( "From" );                desc1872.putInteger( idFrom, 0 );                var idT = charIDToTypeID( "T   " );                desc1872.putInteger( idT, 4614 );                var idTxtS = charIDToTypeID( "TxtS" );                    var desc1873 = new ActionDescriptor();                    var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );                    desc1873.putBoolean( idstyleSheetHasParent, true );                    var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );                    desc1873.putString( idfontPostScriptName, """KaiTi_GB2312""" );                    var idFntN = charIDToTypeID( "FntN" );                    desc1873.putString( idFntN, """KaiTi_GB2312""" );                    var idFntS = charIDToTypeID( "FntS" );                    desc1873.putString( idFntS, """Regular""" );                    var idScrp = charIDToTypeID( "Scrp" );                    desc1873.putInteger( idScrp, 25 );                    var idFntT = charIDToTypeID( "FntT" );                    desc1873.putInteger( idFntT, 1 );                    var idSz = charIDToTypeID( "Sz  " );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1873.putUnitDouble( idSz, idPnt, 13.795416 );                    var idHrzS = charIDToTypeID( "HrzS" );                    desc1873.putDouble( idHrzS, 100.000000 );                    var idVrtS = charIDToTypeID( "VrtS" );                    desc1873.putDouble( idVrtS, 100.000000 );                    var idsyntheticBold = stringIDToTypeID( "syntheticBold" );                    desc1873.putBoolean( idsyntheticBold, false );                    var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );                    desc1873.putBoolean( idsyntheticItalic, false );                    var idautoLeading = stringIDToTypeID( "autoLeading" );                    desc1873.putBoolean( idautoLeading, false );                    var idLdng = charIDToTypeID( "Ldng" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1873.putUnitDouble( idLdng, idPnt, 20.693126 );                    var idTrck = charIDToTypeID( "Trck" );                    desc1873.putInteger( idTrck, 0 );                    var idBsln = charIDToTypeID( "Bsln" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1873.putUnitDouble( idBsln, idPnt, 0.000000 );                    var idcharacterRotation = stringIDToTypeID( "characterRotation" );                    desc1873.putDouble( idcharacterRotation, 0.000000 );                    var idAtKr = charIDToTypeID( "AtKr" );                    var idAtKr = charIDToTypeID( "AtKr" );                    var idmanual = stringIDToTypeID( "manual" );                    desc1873.putEnumerated( idAtKr, idAtKr, idmanual );                    var idfontCaps = stringIDToTypeID( "fontCaps" );                    var idfontCaps = stringIDToTypeID( "fontCaps" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1873.putEnumerated( idfontCaps, idfontCaps, idNrml );                    var idbaseline = stringIDToTypeID( "baseline" );                    var idbaseline = stringIDToTypeID( "baseline" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1873.putEnumerated( idbaseline, idbaseline, idNrml );                    var idotbaseline = stringIDToTypeID( "otbaseline" );                    var idotbaseline = stringIDToTypeID( "otbaseline" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1873.putEnumerated( idotbaseline, idotbaseline, idNrml );                    var idstrikethrough = stringIDToTypeID( "strikethrough" );                    var idstrikethrough = stringIDToTypeID( "strikethrough" );                    var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );                    desc1873.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );                    var idUndl = charIDToTypeID( "Undl" );                    var idUndl = charIDToTypeID( "Undl" );                    var idunderlineOff = stringIDToTypeID( "underlineOff" );                    desc1873.putEnumerated( idUndl, idUndl, idunderlineOff );                    var idunderlineOffset = stringIDToTypeID( "underlineOffset" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1873.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );                    var idligature = stringIDToTypeID( "ligature" );                    desc1873.putBoolean( idligature, false );                    var idaltligature = stringIDToTypeID( "altligature" );                    desc1873.putBoolean( idaltligature, false );                    var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );                    desc1873.putBoolean( idcontextualLigatures, false );                    var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );                    desc1873.putBoolean( idalternateLigatures, false );                    var idoldStyle = stringIDToTypeID( "oldStyle" );                    desc1873.putBoolean( idoldStyle, false );                    var idfractions = stringIDToTypeID( "fractions" );                    desc1873.putBoolean( idfractions, false );                    var idordinals = stringIDToTypeID( "ordinals" );                    desc1873.putBoolean( idordinals, false );                    var idswash = stringIDToTypeID( "swash" );                    desc1873.putBoolean( idswash, false );                    var idtitling = stringIDToTypeID( "titling" );                    desc1873.putBoolean( idtitling, false );                    var idconnectionForms = stringIDToTypeID( "connectionForms" );                    desc1873.putBoolean( idconnectionForms, true );                    var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );                    desc1873.putBoolean( idstylisticAlternates, false );                    var idornaments = stringIDToTypeID( "ornaments" );                    desc1873.putBoolean( idornaments, false );                    var idfigureStyle = stringIDToTypeID( "figureStyle" );                    var idfigureStyle = stringIDToTypeID( "figureStyle" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1873.putEnumerated( idfigureStyle, idfigureStyle, idNrml );                    var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );                    desc1873.putBoolean( idproportionalMetrics, false );                    var idkana = stringIDToTypeID( "kana" );                    desc1873.putBoolean( idkana, false );                    var iditalics = stringIDToTypeID( "italics" );                    desc1873.putBoolean( iditalics, false );                    var idruby = stringIDToTypeID( "ruby" );                    desc1873.putBoolean( idruby, false );                    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                    var idrotated = stringIDToTypeID( "rotated" );                    desc1873.putEnumerated( idbaselineDirection, idbaselineDirection, idrotated );                    var idtextLanguage = stringIDToTypeID( "textLanguage" );                    var idtextLanguage = stringIDToTypeID( "textLanguage" );                    var idenglishLanguage = stringIDToTypeID( "englishLanguage" );                    desc1873.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );                    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );                    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );                    var iddefaultForm = stringIDToTypeID( "defaultForm" );                    desc1873.putEnumerated( idjapaneseAlternate, idjapaneseAlternate, iddefaultForm );                    var idmojiZume = stringIDToTypeID( "mojiZume" );                    desc1873.putDouble( idmojiZume, 0.300000 );                    var idgridAlignment = stringIDToTypeID( "gridAlignment" );                    var idgridAlignment = stringIDToTypeID( "gridAlignment" );                    var idroman = stringIDToTypeID( "roman" );                    desc1873.putEnumerated( idgridAlignment, idgridAlignment, idroman );                    var idenableWariChu = stringIDToTypeID( "enableWariChu" );                    desc1873.putBoolean( idenableWariChu, false );                    var idwariChuCount = stringIDToTypeID( "wariChuCount" );                    desc1873.putInteger( idwariChuCount, 2 );                    var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );                    desc1873.putInteger( idwariChuLineGap, 0 );                    var idwariChuScale = stringIDToTypeID( "wariChuScale" );                    desc1873.putDouble( idwariChuScale, 0.500000 );                    var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );                    desc1873.putInteger( idwariChuWidow, 2 );                    var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );                    desc1873.putInteger( idwariChuOrphan, 2 );                    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                    var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );                    desc1873.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );                    var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );                    desc1873.putInteger( idtcyUpDown, 0 );                    var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );                    desc1873.putInteger( idtcyLeftRight, 0 );                    var idleftAki = stringIDToTypeID( "leftAki" );                    desc1873.putDouble( idleftAki, -1.000000 );                    var idrightAki = stringIDToTypeID( "rightAki" );                    desc1873.putDouble( idrightAki, -1.000000 );                    var idjiDori = stringIDToTypeID( "jiDori" );                    desc1873.putInteger( idjiDori, 0 );                    var idnoBreak = stringIDToTypeID( "noBreak" );                    desc1873.putBoolean( idnoBreak, false );                    var idClr = charIDToTypeID( "Clr " );                        var desc1874 = new ActionDescriptor();                        var idCyn = charIDToTypeID( "Cyn " );                        desc1874.putDouble( idCyn, 74.520000 );                        var idMgnt = charIDToTypeID( "Mgnt" );                        desc1874.putDouble( idMgnt, 67.780000 );                        var idYlw = charIDToTypeID( "Ylw " );                        desc1874.putDouble( idYlw, 67.130000 );                        var idBlck = charIDToTypeID( "Blck" );                        desc1874.putDouble( idBlck, 89.630000 );                    var idCMYC = charIDToTypeID( "CMYC" );                    desc1873.putObject( idClr, idCMYC, desc1874 );                    var idstrokeColor = stringIDToTypeID( "strokeColor" );                        var desc1875 = new ActionDescriptor();                        var idCyn = charIDToTypeID( "Cyn " );                        desc1875.putDouble( idCyn, 0.000000 );                        var idMgnt = charIDToTypeID( "Mgnt" );                        desc1875.putDouble( idMgnt, 0.000000 );                        var idYlw = charIDToTypeID( "Ylw " );                        desc1875.putDouble( idYlw, 0.000000 );                        var idBlck = charIDToTypeID( "Blck" );                        desc1875.putDouble( idBlck, 0.000000 );                    var idCMYC = charIDToTypeID( "CMYC" );                    desc1873.putObject( idstrokeColor, idCMYC, desc1875 );                    var idFl = charIDToTypeID( "Fl  " );                    desc1873.putBoolean( idFl, true );                    var idStrk = charIDToTypeID( "Strk" );                    desc1873.putBoolean( idStrk, false );                    var idfillFirst = stringIDToTypeID( "fillFirst" );                    desc1873.putBoolean( idfillFirst, false );                    var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );                    desc1873.putBoolean( idfillOverPrint, false );                    var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );                    desc1873.putBoolean( idstrokeOverPrint, false );                    var idlineCap = stringIDToTypeID( "lineCap" );                    var idlineCap = stringIDToTypeID( "lineCap" );                    var idbuttCap = stringIDToTypeID( "buttCap" );                    desc1873.putEnumerated( idlineCap, idlineCap, idbuttCap );                    var idlineJoin = stringIDToTypeID( "lineJoin" );                    var idlineJoin = stringIDToTypeID( "lineJoin" );                    var idmiterJoin = stringIDToTypeID( "miterJoin" );                    desc1873.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );                    var idlineWidth = stringIDToTypeID( "lineWidth" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1873.putUnitDouble( idlineWidth, idPnt, 0.057600 );                    var idmiterLimit = stringIDToTypeID( "miterLimit" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1873.putUnitDouble( idmiterLimit, idPnt, 0.230400 );                    var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );                    desc1873.putDouble( idlineDashoffset, 0.000000 );                var idTxtS = charIDToTypeID( "TxtS" );                desc1872.putObject( idTxtS, idTxtS, desc1873 );            var idTxtt = charIDToTypeID( "Txtt" );            list104.putObject( idTxtt, desc1872 );                var desc1876 = new ActionDescriptor();                var idFrom = charIDToTypeID( "From" );                desc1876.putInteger( idFrom, 0 );                var idT = charIDToTypeID( "T   " );                desc1876.putInteger( idT, 4614 );                var idTxtS = charIDToTypeID( "TxtS" );                    var desc1877 = new ActionDescriptor();                    var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );                    desc1877.putBoolean( idstyleSheetHasParent, true );                    var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );                    desc1877.putString( idfontPostScriptName, """KaiTi_GB2312""" );                    var idFntN = charIDToTypeID( "FntN" );                    desc1877.putString( idFntN, """KaiTi_GB2312""" );                    var idFntS = charIDToTypeID( "FntS" );                    desc1877.putString( idFntS, """Regular""" );                    var idScrp = charIDToTypeID( "Scrp" );                    desc1877.putInteger( idScrp, 25 );                    var idFntT = charIDToTypeID( "FntT" );                    desc1877.putInteger( idFntT, 1 );                    var idSz = charIDToTypeID( "Sz  " );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1877.putUnitDouble( idSz, idPnt, 13.795416 );                    var idHrzS = charIDToTypeID( "HrzS" );                    desc1877.putDouble( idHrzS, 100.000000 );                    var idVrtS = charIDToTypeID( "VrtS" );                    desc1877.putDouble( idVrtS, 100.000000 );                    var idsyntheticBold = stringIDToTypeID( "syntheticBold" );                    desc1877.putBoolean( idsyntheticBold, false );                    var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );                    desc1877.putBoolean( idsyntheticItalic, false );                    var idautoLeading = stringIDToTypeID( "autoLeading" );                    desc1877.putBoolean( idautoLeading, false );                    var idLdng = charIDToTypeID( "Ldng" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1877.putUnitDouble( idLdng, idPnt, 20.693126 );                    var idTrck = charIDToTypeID( "Trck" );                    desc1877.putInteger( idTrck, 0 );                    var idBsln = charIDToTypeID( "Bsln" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1877.putUnitDouble( idBsln, idPnt, 0.000000 );                    var idcharacterRotation = stringIDToTypeID( "characterRotation" );                    desc1877.putDouble( idcharacterRotation, 0.000000 );                    var idAtKr = charIDToTypeID( "AtKr" );                    var idAtKr = charIDToTypeID( "AtKr" );                    var idmanual = stringIDToTypeID( "manual" );                    desc1877.putEnumerated( idAtKr, idAtKr, idmanual );                    var idfontCaps = stringIDToTypeID( "fontCaps" );                    var idfontCaps = stringIDToTypeID( "fontCaps" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1877.putEnumerated( idfontCaps, idfontCaps, idNrml );                    var idbaseline = stringIDToTypeID( "baseline" );                    var idbaseline = stringIDToTypeID( "baseline" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1877.putEnumerated( idbaseline, idbaseline, idNrml );                    var idotbaseline = stringIDToTypeID( "otbaseline" );                    var idotbaseline = stringIDToTypeID( "otbaseline" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1877.putEnumerated( idotbaseline, idotbaseline, idNrml );                    var idstrikethrough = stringIDToTypeID( "strikethrough" );                    var idstrikethrough = stringIDToTypeID( "strikethrough" );                    var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );                    desc1877.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );                    var idUndl = charIDToTypeID( "Undl" );                    var idUndl = charIDToTypeID( "Undl" );                    var idunderlineOff = stringIDToTypeID( "underlineOff" );                    desc1877.putEnumerated( idUndl, idUndl, idunderlineOff );                    var idunderlineOffset = stringIDToTypeID( "underlineOffset" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1877.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );                    var idligature = stringIDToTypeID( "ligature" );                    desc1877.putBoolean( idligature, false );                    var idaltligature = stringIDToTypeID( "altligature" );                    desc1877.putBoolean( idaltligature, false );                    var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );                    desc1877.putBoolean( idcontextualLigatures, false );                    var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );                    desc1877.putBoolean( idalternateLigatures, false );                    var idoldStyle = stringIDToTypeID( "oldStyle" );                    desc1877.putBoolean( idoldStyle, false );                    var idfractions = stringIDToTypeID( "fractions" );                    desc1877.putBoolean( idfractions, false );                    var idordinals = stringIDToTypeID( "ordinals" );                    desc1877.putBoolean( idordinals, false );                    var idswash = stringIDToTypeID( "swash" );                    desc1877.putBoolean( idswash, false );                    var idtitling = stringIDToTypeID( "titling" );                    desc1877.putBoolean( idtitling, false );                    var idconnectionForms = stringIDToTypeID( "connectionForms" );                    desc1877.putBoolean( idconnectionForms, true );                    var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );                    desc1877.putBoolean( idstylisticAlternates, false );                    var idornaments = stringIDToTypeID( "ornaments" );                    desc1877.putBoolean( idornaments, false );                    var idfigureStyle = stringIDToTypeID( "figureStyle" );                    var idfigureStyle = stringIDToTypeID( "figureStyle" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1877.putEnumerated( idfigureStyle, idfigureStyle, idNrml );                    var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );                    desc1877.putBoolean( idproportionalMetrics, false );                    var idkana = stringIDToTypeID( "kana" );                    desc1877.putBoolean( idkana, false );                    var iditalics = stringIDToTypeID( "italics" );                    desc1877.putBoolean( iditalics, false );                    var idruby = stringIDToTypeID( "ruby" );                    desc1877.putBoolean( idruby, false );                    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                    var idrotated = stringIDToTypeID( "rotated" );                    desc1877.putEnumerated( idbaselineDirection, idbaselineDirection, idrotated );                    var idtextLanguage = stringIDToTypeID( "textLanguage" );                    var idtextLanguage = stringIDToTypeID( "textLanguage" );                    var idenglishLanguage = stringIDToTypeID( "englishLanguage" );                    desc1877.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );                    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );                    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );                    var iddefaultForm = stringIDToTypeID( "defaultForm" );                    desc1877.putEnumerated( idjapaneseAlternate, idjapaneseAlternate, iddefaultForm );                    var idmojiZume = stringIDToTypeID( "mojiZume" );                    desc1877.putDouble( idmojiZume, 0.300000 );                    var idgridAlignment = stringIDToTypeID( "gridAlignment" );                    var idgridAlignment = stringIDToTypeID( "gridAlignment" );                    var idroman = stringIDToTypeID( "roman" );                    desc1877.putEnumerated( idgridAlignment, idgridAlignment, idroman );                    var idenableWariChu = stringIDToTypeID( "enableWariChu" );                    desc1877.putBoolean( idenableWariChu, false );                    var idwariChuCount = stringIDToTypeID( "wariChuCount" );                    desc1877.putInteger( idwariChuCount, 2 );                    var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );                    desc1877.putInteger( idwariChuLineGap, 0 );                    var idwariChuScale = stringIDToTypeID( "wariChuScale" );                    desc1877.putDouble( idwariChuScale, 0.500000 );                    var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );                    desc1877.putInteger( idwariChuWidow, 2 );                    var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );                    desc1877.putInteger( idwariChuOrphan, 2 );                    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                    var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );                    desc1877.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );                    var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );                    desc1877.putInteger( idtcyUpDown, 0 );                    var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );                    desc1877.putInteger( idtcyLeftRight, 0 );                    var idleftAki = stringIDToTypeID( "leftAki" );                    desc1877.putDouble( idleftAki, -1.000000 );                    var idrightAki = stringIDToTypeID( "rightAki" );                    desc1877.putDouble( idrightAki, -1.000000 );                    var idjiDori = stringIDToTypeID( "jiDori" );                    desc1877.putInteger( idjiDori, 0 );                    var idnoBreak = stringIDToTypeID( "noBreak" );                    desc1877.putBoolean( idnoBreak, false );                    var idClr = charIDToTypeID( "Clr " );                        var desc1878 = new ActionDescriptor();                        var idCyn = charIDToTypeID( "Cyn " );                        desc1878.putDouble( idCyn, 74.520000 );                        var idMgnt = charIDToTypeID( "Mgnt" );                        desc1878.putDouble( idMgnt, 67.780000 );                        var idYlw = charIDToTypeID( "Ylw " );                        desc1878.putDouble( idYlw, 67.130000 );                        var idBlck = charIDToTypeID( "Blck" );                        desc1878.putDouble( idBlck, 89.630000 );                    var idCMYC = charIDToTypeID( "CMYC" );                    desc1877.putObject( idClr, idCMYC, desc1878 );                    var idstrokeColor = stringIDToTypeID( "strokeColor" );                        var desc1879 = new ActionDescriptor();                        var idCyn = charIDToTypeID( "Cyn " );                        desc1879.putDouble( idCyn, 0.000000 );                        var idMgnt = charIDToTypeID( "Mgnt" );                        desc1879.putDouble( idMgnt, 0.000000 );                        var idYlw = charIDToTypeID( "Ylw " );                        desc1879.putDouble( idYlw, 0.000000 );                        var idBlck = charIDToTypeID( "Blck" );                        desc1879.putDouble( idBlck, 0.000000 );                    var idCMYC = charIDToTypeID( "CMYC" );                    desc1877.putObject( idstrokeColor, idCMYC, desc1879 );                    var idFl = charIDToTypeID( "Fl  " );                    desc1877.putBoolean( idFl, true );                    var idStrk = charIDToTypeID( "Strk" );                    desc1877.putBoolean( idStrk, false );                    var idfillFirst = stringIDToTypeID( "fillFirst" );                    desc1877.putBoolean( idfillFirst, false );                    var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );                    desc1877.putBoolean( idfillOverPrint, false );                    var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );                    desc1877.putBoolean( idstrokeOverPrint, false );                    var idlineCap = stringIDToTypeID( "lineCap" );                    var idlineCap = stringIDToTypeID( "lineCap" );                    var idbuttCap = stringIDToTypeID( "buttCap" );                    desc1877.putEnumerated( idlineCap, idlineCap, idbuttCap );                    var idlineJoin = stringIDToTypeID( "lineJoin" );                    var idlineJoin = stringIDToTypeID( "lineJoin" );                    var idmiterJoin = stringIDToTypeID( "miterJoin" );                    desc1877.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );                    var idlineWidth = stringIDToTypeID( "lineWidth" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1877.putUnitDouble( idlineWidth, idPnt, 0.057600 );                    var idmiterLimit = stringIDToTypeID( "miterLimit" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1877.putUnitDouble( idmiterLimit, idPnt, 0.230400 );                    var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );                    desc1877.putDouble( idlineDashoffset, 0.000000 );                var idTxtS = charIDToTypeID( "TxtS" );                desc1876.putObject( idTxtS, idTxtS, desc1877 );            var idTxtt = charIDToTypeID( "Txtt" );            list104.putObject( idTxtt, desc1876 );                var desc1880 = new ActionDescriptor();                var idFrom = charIDToTypeID( "From" );                desc1880.putInteger( idFrom, 0 );                var idT = charIDToTypeID( "T   " );                desc1880.putInteger( idT, 4614 );                var idTxtS = charIDToTypeID( "TxtS" );                    var desc1881 = new ActionDescriptor();                    var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );                    desc1881.putBoolean( idstyleSheetHasParent, true );                    var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );                    desc1881.putString( idfontPostScriptName, """KaiTi_GB2312""" );                    var idFntN = charIDToTypeID( "FntN" );                    desc1881.putString( idFntN, """KaiTi_GB2312""" );                    var idFntS = charIDToTypeID( "FntS" );                    desc1881.putString( idFntS, """Regular""" );                    var idScrp = charIDToTypeID( "Scrp" );                    desc1881.putInteger( idScrp, 25 );                    var idFntT = charIDToTypeID( "FntT" );                    desc1881.putInteger( idFntT, 1 );                    var idSz = charIDToTypeID( "Sz  " );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1881.putUnitDouble( idSz, idPnt, 13.795416 );                    var idHrzS = charIDToTypeID( "HrzS" );                    desc1881.putDouble( idHrzS, 100.000000 );                    var idVrtS = charIDToTypeID( "VrtS" );                    desc1881.putDouble( idVrtS, 100.000000 );                    var idsyntheticBold = stringIDToTypeID( "syntheticBold" );                    desc1881.putBoolean( idsyntheticBold, false );                    var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );                    desc1881.putBoolean( idsyntheticItalic, false );                    var idautoLeading = stringIDToTypeID( "autoLeading" );                    desc1881.putBoolean( idautoLeading, false );                    var idLdng = charIDToTypeID( "Ldng" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1881.putUnitDouble( idLdng, idPnt, 20.693126 );                    var idTrck = charIDToTypeID( "Trck" );                    desc1881.putInteger( idTrck, 0 );                    var idBsln = charIDToTypeID( "Bsln" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1881.putUnitDouble( idBsln, idPnt, 0.000000 );                    var idcharacterRotation = stringIDToTypeID( "characterRotation" );                    desc1881.putDouble( idcharacterRotation, 0.000000 );                    var idAtKr = charIDToTypeID( "AtKr" );                    var idAtKr = charIDToTypeID( "AtKr" );                    var idmanual = stringIDToTypeID( "manual" );                    desc1881.putEnumerated( idAtKr, idAtKr, idmanual );                    var idfontCaps = stringIDToTypeID( "fontCaps" );                    var idfontCaps = stringIDToTypeID( "fontCaps" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1881.putEnumerated( idfontCaps, idfontCaps, idNrml );                    var idbaseline = stringIDToTypeID( "baseline" );                    var idbaseline = stringIDToTypeID( "baseline" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1881.putEnumerated( idbaseline, idbaseline, idNrml );                    var idotbaseline = stringIDToTypeID( "otbaseline" );                    var idotbaseline = stringIDToTypeID( "otbaseline" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1881.putEnumerated( idotbaseline, idotbaseline, idNrml );                    var idstrikethrough = stringIDToTypeID( "strikethrough" );                    var idstrikethrough = stringIDToTypeID( "strikethrough" );                    var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );                    desc1881.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );                    var idUndl = charIDToTypeID( "Undl" );                    var idUndl = charIDToTypeID( "Undl" );                    var idunderlineOff = stringIDToTypeID( "underlineOff" );                    desc1881.putEnumerated( idUndl, idUndl, idunderlineOff );                    var idunderlineOffset = stringIDToTypeID( "underlineOffset" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1881.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );                    var idligature = stringIDToTypeID( "ligature" );                    desc1881.putBoolean( idligature, false );                    var idaltligature = stringIDToTypeID( "altligature" );                    desc1881.putBoolean( idaltligature, false );                    var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );                    desc1881.putBoolean( idcontextualLigatures, false );                    var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );                    desc1881.putBoolean( idalternateLigatures, false );                    var idoldStyle = stringIDToTypeID( "oldStyle" );                    desc1881.putBoolean( idoldStyle, false );                    var idfractions = stringIDToTypeID( "fractions" );                    desc1881.putBoolean( idfractions, false );                    var idordinals = stringIDToTypeID( "ordinals" );                    desc1881.putBoolean( idordinals, false );                    var idswash = stringIDToTypeID( "swash" );                    desc1881.putBoolean( idswash, false );                    var idtitling = stringIDToTypeID( "titling" );                    desc1881.putBoolean( idtitling, false );                    var idconnectionForms = stringIDToTypeID( "connectionForms" );                    desc1881.putBoolean( idconnectionForms, true );                    var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );                    desc1881.putBoolean( idstylisticAlternates, false );                    var idornaments = stringIDToTypeID( "ornaments" );                    desc1881.putBoolean( idornaments, false );                    var idfigureStyle = stringIDToTypeID( "figureStyle" );                    var idfigureStyle = stringIDToTypeID( "figureStyle" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1881.putEnumerated( idfigureStyle, idfigureStyle, idNrml );                    var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );                    desc1881.putBoolean( idproportionalMetrics, false );                    var idkana = stringIDToTypeID( "kana" );                    desc1881.putBoolean( idkana, false );                    var iditalics = stringIDToTypeID( "italics" );                    desc1881.putBoolean( iditalics, false );                    var idruby = stringIDToTypeID( "ruby" );                    desc1881.putBoolean( idruby, false );                    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                    var idrotated = stringIDToTypeID( "rotated" );                    desc1881.putEnumerated( idbaselineDirection, idbaselineDirection, idrotated );                    var idtextLanguage = stringIDToTypeID( "textLanguage" );                    var idtextLanguage = stringIDToTypeID( "textLanguage" );                    var idenglishLanguage = stringIDToTypeID( "englishLanguage" );                    desc1881.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );                    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );                    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );                    var iddefaultForm = stringIDToTypeID( "defaultForm" );                    desc1881.putEnumerated( idjapaneseAlternate, idjapaneseAlternate, iddefaultForm );                    var idmojiZume = stringIDToTypeID( "mojiZume" );                    desc1881.putDouble( idmojiZume, 0.300000 );                    var idgridAlignment = stringIDToTypeID( "gridAlignment" );                    var idgridAlignment = stringIDToTypeID( "gridAlignment" );                    var idroman = stringIDToTypeID( "roman" );                    desc1881.putEnumerated( idgridAlignment, idgridAlignment, idroman );                    var idenableWariChu = stringIDToTypeID( "enableWariChu" );                    desc1881.putBoolean( idenableWariChu, false );                    var idwariChuCount = stringIDToTypeID( "wariChuCount" );                    desc1881.putInteger( idwariChuCount, 2 );                    var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );                    desc1881.putInteger( idwariChuLineGap, 0 );                    var idwariChuScale = stringIDToTypeID( "wariChuScale" );                    desc1881.putDouble( idwariChuScale, 0.500000 );                    var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );                    desc1881.putInteger( idwariChuWidow, 2 );                    var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );                    desc1881.putInteger( idwariChuOrphan, 2 );                    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                    var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );                    desc1881.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );                    var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );                    desc1881.putInteger( idtcyUpDown, 0 );                    var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );                    desc1881.putInteger( idtcyLeftRight, 0 );                    var idleftAki = stringIDToTypeID( "leftAki" );                    desc1881.putDouble( idleftAki, -1.000000 );                    var idrightAki = stringIDToTypeID( "rightAki" );                    desc1881.putDouble( idrightAki, -1.000000 );                    var idjiDori = stringIDToTypeID( "jiDori" );                    desc1881.putInteger( idjiDori, 0 );                    var idnoBreak = stringIDToTypeID( "noBreak" );                    desc1881.putBoolean( idnoBreak, false );                    var idClr = charIDToTypeID( "Clr " );                        var desc1882 = new ActionDescriptor();                        var idCyn = charIDToTypeID( "Cyn " );                        desc1882.putDouble( idCyn, 74.520000 );                        var idMgnt = charIDToTypeID( "Mgnt" );                        desc1882.putDouble( idMgnt, 67.780000 );                        var idYlw = charIDToTypeID( "Ylw " );                        desc1882.putDouble( idYlw, 67.130000 );                        var idBlck = charIDToTypeID( "Blck" );                        desc1882.putDouble( idBlck, 89.630000 );                    var idCMYC = charIDToTypeID( "CMYC" );                    desc1881.putObject( idClr, idCMYC, desc1882 );                    var idstrokeColor = stringIDToTypeID( "strokeColor" );                        var desc1883 = new ActionDescriptor();                        var idCyn = charIDToTypeID( "Cyn " );                        desc1883.putDouble( idCyn, 0.000000 );                        var idMgnt = charIDToTypeID( "Mgnt" );                        desc1883.putDouble( idMgnt, 0.000000 );                        var idYlw = charIDToTypeID( "Ylw " );                        desc1883.putDouble( idYlw, 0.000000 );                        var idBlck = charIDToTypeID( "Blck" );                        desc1883.putDouble( idBlck, 0.000000 );                    var idCMYC = charIDToTypeID( "CMYC" );                    desc1881.putObject( idstrokeColor, idCMYC, desc1883 );                    var idFl = charIDToTypeID( "Fl  " );                    desc1881.putBoolean( idFl, true );                    var idStrk = charIDToTypeID( "Strk" );                    desc1881.putBoolean( idStrk, false );                    var idfillFirst = stringIDToTypeID( "fillFirst" );                    desc1881.putBoolean( idfillFirst, false );                    var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );                    desc1881.putBoolean( idfillOverPrint, false );                    var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );                    desc1881.putBoolean( idstrokeOverPrint, false );                    var idlineCap = stringIDToTypeID( "lineCap" );                    var idlineCap = stringIDToTypeID( "lineCap" );                    var idbuttCap = stringIDToTypeID( "buttCap" );                    desc1881.putEnumerated( idlineCap, idlineCap, idbuttCap );                    var idlineJoin = stringIDToTypeID( "lineJoin" );                    var idlineJoin = stringIDToTypeID( "lineJoin" );                    var idmiterJoin = stringIDToTypeID( "miterJoin" );                    desc1881.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );                    var idlineWidth = stringIDToTypeID( "lineWidth" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1881.putUnitDouble( idlineWidth, idPnt, 0.057600 );                    var idmiterLimit = stringIDToTypeID( "miterLimit" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1881.putUnitDouble( idmiterLimit, idPnt, 0.230400 );                    var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );                    desc1881.putDouble( idlineDashoffset, 0.000000 );                var idTxtS = charIDToTypeID( "TxtS" );                desc1880.putObject( idTxtS, idTxtS, desc1881 );            var idTxtt = charIDToTypeID( "Txtt" );            list104.putObject( idTxtt, desc1880 );                var desc1884 = new ActionDescriptor();                var idFrom = charIDToTypeID( "From" );                desc1884.putInteger( idFrom, 0 );                var idT = charIDToTypeID( "T   " );                desc1884.putInteger( idT, 4614 );                var idTxtS = charIDToTypeID( "TxtS" );                    var desc1885 = new ActionDescriptor();                    var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );                    desc1885.putBoolean( idstyleSheetHasParent, true );                    var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );                    desc1885.putString( idfontPostScriptName, """KaiTi_GB2312""" );                    var idFntN = charIDToTypeID( "FntN" );                    desc1885.putString( idFntN, """KaiTi_GB2312""" );                    var idFntS = charIDToTypeID( "FntS" );                    desc1885.putString( idFntS, """Regular""" );                    var idScrp = charIDToTypeID( "Scrp" );                    desc1885.putInteger( idScrp, 25 );                    var idFntT = charIDToTypeID( "FntT" );                    desc1885.putInteger( idFntT, 1 );                    var idSz = charIDToTypeID( "Sz  " );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1885.putUnitDouble( idSz, idPnt, 13.795416 );                    var idHrzS = charIDToTypeID( "HrzS" );                    desc1885.putDouble( idHrzS, 100.000000 );                    var idVrtS = charIDToTypeID( "VrtS" );                    desc1885.putDouble( idVrtS, 100.000000 );                    var idsyntheticBold = stringIDToTypeID( "syntheticBold" );                    desc1885.putBoolean( idsyntheticBold, false );                    var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );                    desc1885.putBoolean( idsyntheticItalic, false );                    var idautoLeading = stringIDToTypeID( "autoLeading" );                    desc1885.putBoolean( idautoLeading, false );                    var idLdng = charIDToTypeID( "Ldng" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1885.putUnitDouble( idLdng, idPnt, 20.693126 );                    var idTrck = charIDToTypeID( "Trck" );                    desc1885.putInteger( idTrck, 0 );                    var idBsln = charIDToTypeID( "Bsln" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1885.putUnitDouble( idBsln, idPnt, 0.000000 );                    var idcharacterRotation = stringIDToTypeID( "characterRotation" );                    desc1885.putDouble( idcharacterRotation, 0.000000 );                    var idAtKr = charIDToTypeID( "AtKr" );                    var idAtKr = charIDToTypeID( "AtKr" );                    var idmanual = stringIDToTypeID( "manual" );                    desc1885.putEnumerated( idAtKr, idAtKr, idmanual );                    var idfontCaps = stringIDToTypeID( "fontCaps" );                    var idfontCaps = stringIDToTypeID( "fontCaps" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1885.putEnumerated( idfontCaps, idfontCaps, idNrml );                    var idbaseline = stringIDToTypeID( "baseline" );                    var idbaseline = stringIDToTypeID( "baseline" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1885.putEnumerated( idbaseline, idbaseline, idNrml );                    var idotbaseline = stringIDToTypeID( "otbaseline" );                    var idotbaseline = stringIDToTypeID( "otbaseline" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1885.putEnumerated( idotbaseline, idotbaseline, idNrml );                    var idstrikethrough = stringIDToTypeID( "strikethrough" );                    var idstrikethrough = stringIDToTypeID( "strikethrough" );                    var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );                    desc1885.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );                    var idUndl = charIDToTypeID( "Undl" );                    var idUndl = charIDToTypeID( "Undl" );                    var idunderlineOff = stringIDToTypeID( "underlineOff" );                    desc1885.putEnumerated( idUndl, idUndl, idunderlineOff );                    var idunderlineOffset = stringIDToTypeID( "underlineOffset" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1885.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );                    var idligature = stringIDToTypeID( "ligature" );                    desc1885.putBoolean( idligature, false );                    var idaltligature = stringIDToTypeID( "altligature" );                    desc1885.putBoolean( idaltligature, false );                    var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );                    desc1885.putBoolean( idcontextualLigatures, false );                    var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );                    desc1885.putBoolean( idalternateLigatures, false );                    var idoldStyle = stringIDToTypeID( "oldStyle" );                    desc1885.putBoolean( idoldStyle, false );                    var idfractions = stringIDToTypeID( "fractions" );                    desc1885.putBoolean( idfractions, false );                    var idordinals = stringIDToTypeID( "ordinals" );                    desc1885.putBoolean( idordinals, false );                    var idswash = stringIDToTypeID( "swash" );                    desc1885.putBoolean( idswash, false );                    var idtitling = stringIDToTypeID( "titling" );                    desc1885.putBoolean( idtitling, false );                    var idconnectionForms = stringIDToTypeID( "connectionForms" );                    desc1885.putBoolean( idconnectionForms, true );                    var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );                    desc1885.putBoolean( idstylisticAlternates, false );                    var idornaments = stringIDToTypeID( "ornaments" );                    desc1885.putBoolean( idornaments, false );                    var idfigureStyle = stringIDToTypeID( "figureStyle" );                    var idfigureStyle = stringIDToTypeID( "figureStyle" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1885.putEnumerated( idfigureStyle, idfigureStyle, idNrml );                    var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );                    desc1885.putBoolean( idproportionalMetrics, false );                    var idkana = stringIDToTypeID( "kana" );                    desc1885.putBoolean( idkana, false );                    var iditalics = stringIDToTypeID( "italics" );                    desc1885.putBoolean( iditalics, false );                    var idruby = stringIDToTypeID( "ruby" );                    desc1885.putBoolean( idruby, false );                    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                    var idrotated = stringIDToTypeID( "rotated" );                    desc1885.putEnumerated( idbaselineDirection, idbaselineDirection, idrotated );                    var idtextLanguage = stringIDToTypeID( "textLanguage" );                    var idtextLanguage = stringIDToTypeID( "textLanguage" );                    var idenglishLanguage = stringIDToTypeID( "englishLanguage" );                    desc1885.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );                    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );                    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );                    var iddefaultForm = stringIDToTypeID( "defaultForm" );                    desc1885.putEnumerated( idjapaneseAlternate, idjapaneseAlternate, iddefaultForm );                    var idmojiZume = stringIDToTypeID( "mojiZume" );                    desc1885.putDouble( idmojiZume, 0.300000 );                    var idgridAlignment = stringIDToTypeID( "gridAlignment" );                    var idgridAlignment = stringIDToTypeID( "gridAlignment" );                    var idroman = stringIDToTypeID( "roman" );                    desc1885.putEnumerated( idgridAlignment, idgridAlignment, idroman );                    var idenableWariChu = stringIDToTypeID( "enableWariChu" );                    desc1885.putBoolean( idenableWariChu, false );                    var idwariChuCount = stringIDToTypeID( "wariChuCount" );                    desc1885.putInteger( idwariChuCount, 2 );                    var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );                    desc1885.putInteger( idwariChuLineGap, 0 );                    var idwariChuScale = stringIDToTypeID( "wariChuScale" );                    desc1885.putDouble( idwariChuScale, 0.500000 );                    var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );                    desc1885.putInteger( idwariChuWidow, 2 );                    var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );                    desc1885.putInteger( idwariChuOrphan, 2 );                    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                    var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );                    desc1885.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );                    var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );                    desc1885.putInteger( idtcyUpDown, 0 );                    var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );                    desc1885.putInteger( idtcyLeftRight, 0 );                    var idleftAki = stringIDToTypeID( "leftAki" );                    desc1885.putDouble( idleftAki, -1.000000 );                    var idrightAki = stringIDToTypeID( "rightAki" );                    desc1885.putDouble( idrightAki, -1.000000 );                    var idjiDori = stringIDToTypeID( "jiDori" );                    desc1885.putInteger( idjiDori, 0 );                    var idnoBreak = stringIDToTypeID( "noBreak" );                    desc1885.putBoolean( idnoBreak, false );                    var idClr = charIDToTypeID( "Clr " );                        var desc1886 = new ActionDescriptor();                        var idCyn = charIDToTypeID( "Cyn " );                        desc1886.putDouble( idCyn, 74.520000 );                        var idMgnt = charIDToTypeID( "Mgnt" );                        desc1886.putDouble( idMgnt, 67.780000 );                        var idYlw = charIDToTypeID( "Ylw " );                        desc1886.putDouble( idYlw, 67.130000 );                        var idBlck = charIDToTypeID( "Blck" );                        desc1886.putDouble( idBlck, 89.630000 );                    var idCMYC = charIDToTypeID( "CMYC" );                    desc1885.putObject( idClr, idCMYC, desc1886 );                    var idstrokeColor = stringIDToTypeID( "strokeColor" );                        var desc1887 = new ActionDescriptor();                        var idCyn = charIDToTypeID( "Cyn " );                        desc1887.putDouble( idCyn, 0.000000 );                        var idMgnt = charIDToTypeID( "Mgnt" );                        desc1887.putDouble( idMgnt, 0.000000 );                        var idYlw = charIDToTypeID( "Ylw " );                        desc1887.putDouble( idYlw, 0.000000 );                        var idBlck = charIDToTypeID( "Blck" );                        desc1887.putDouble( idBlck, 0.000000 );                    var idCMYC = charIDToTypeID( "CMYC" );                    desc1885.putObject( idstrokeColor, idCMYC, desc1887 );                    var idFl = charIDToTypeID( "Fl  " );                    desc1885.putBoolean( idFl, true );                    var idStrk = charIDToTypeID( "Strk" );                    desc1885.putBoolean( idStrk, false );                    var idfillFirst = stringIDToTypeID( "fillFirst" );                    desc1885.putBoolean( idfillFirst, false );                    var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );                    desc1885.putBoolean( idfillOverPrint, false );                    var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );                    desc1885.putBoolean( idstrokeOverPrint, false );                    var idlineCap = stringIDToTypeID( "lineCap" );                    var idlineCap = stringIDToTypeID( "lineCap" );                    var idbuttCap = stringIDToTypeID( "buttCap" );                    desc1885.putEnumerated( idlineCap, idlineCap, idbuttCap );                    var idlineJoin = stringIDToTypeID( "lineJoin" );                    var idlineJoin = stringIDToTypeID( "lineJoin" );                    var idmiterJoin = stringIDToTypeID( "miterJoin" );                    desc1885.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );                    var idlineWidth = stringIDToTypeID( "lineWidth" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1885.putUnitDouble( idlineWidth, idPnt, 0.057600 );                    var idmiterLimit = stringIDToTypeID( "miterLimit" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1885.putUnitDouble( idmiterLimit, idPnt, 0.230400 );                    var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );                    desc1885.putDouble( idlineDashoffset, 0.000000 );                var idTxtS = charIDToTypeID( "TxtS" );                desc1884.putObject( idTxtS, idTxtS, desc1885 );            var idTxtt = charIDToTypeID( "Txtt" );            list104.putObject( idTxtt, desc1884 );                var desc1888 = new ActionDescriptor();                var idFrom = charIDToTypeID( "From" );                desc1888.putInteger( idFrom, 0 );                var idT = charIDToTypeID( "T   " );                desc1888.putInteger( idT, 4614 );                var idTxtS = charIDToTypeID( "TxtS" );                    var desc1889 = new ActionDescriptor();                    var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );                    desc1889.putBoolean( idstyleSheetHasParent, true );                    var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );                    desc1889.putString( idfontPostScriptName, """KaiTi_GB2312""" );                    var idFntN = charIDToTypeID( "FntN" );                    desc1889.putString( idFntN, """KaiTi_GB2312""" );                    var idFntS = charIDToTypeID( "FntS" );                    desc1889.putString( idFntS, """Regular""" );                    var idScrp = charIDToTypeID( "Scrp" );                    desc1889.putInteger( idScrp, 25 );                    var idFntT = charIDToTypeID( "FntT" );                    desc1889.putInteger( idFntT, 1 );                    var idSz = charIDToTypeID( "Sz  " );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1889.putUnitDouble( idSz, idPnt, 13.795416 );                    var idHrzS = charIDToTypeID( "HrzS" );                    desc1889.putDouble( idHrzS, 100.000000 );                    var idVrtS = charIDToTypeID( "VrtS" );                    desc1889.putDouble( idVrtS, 100.000000 );                    var idsyntheticBold = stringIDToTypeID( "syntheticBold" );                    desc1889.putBoolean( idsyntheticBold, false );                    var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );                    desc1889.putBoolean( idsyntheticItalic, false );                    var idautoLeading = stringIDToTypeID( "autoLeading" );                    desc1889.putBoolean( idautoLeading, false );                    var idLdng = charIDToTypeID( "Ldng" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1889.putUnitDouble( idLdng, idPnt, 20.693126 );                    var idTrck = charIDToTypeID( "Trck" );                    desc1889.putInteger( idTrck, 0 );                    var idBsln = charIDToTypeID( "Bsln" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1889.putUnitDouble( idBsln, idPnt, 0.000000 );                    var idcharacterRotation = stringIDToTypeID( "characterRotation" );                    desc1889.putDouble( idcharacterRotation, 0.000000 );                    var idAtKr = charIDToTypeID( "AtKr" );                    var idAtKr = charIDToTypeID( "AtKr" );                    var idmanual = stringIDToTypeID( "manual" );                    desc1889.putEnumerated( idAtKr, idAtKr, idmanual );                    var idfontCaps = stringIDToTypeID( "fontCaps" );                    var idfontCaps = stringIDToTypeID( "fontCaps" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1889.putEnumerated( idfontCaps, idfontCaps, idNrml );                    var idbaseline = stringIDToTypeID( "baseline" );                    var idbaseline = stringIDToTypeID( "baseline" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1889.putEnumerated( idbaseline, idbaseline, idNrml );                    var idotbaseline = stringIDToTypeID( "otbaseline" );                    var idotbaseline = stringIDToTypeID( "otbaseline" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1889.putEnumerated( idotbaseline, idotbaseline, idNrml );                    var idstrikethrough = stringIDToTypeID( "strikethrough" );                    var idstrikethrough = stringIDToTypeID( "strikethrough" );                    var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );                    desc1889.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );                    var idUndl = charIDToTypeID( "Undl" );                    var idUndl = charIDToTypeID( "Undl" );                    var idunderlineOff = stringIDToTypeID( "underlineOff" );                    desc1889.putEnumerated( idUndl, idUndl, idunderlineOff );                    var idunderlineOffset = stringIDToTypeID( "underlineOffset" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1889.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );                    var idligature = stringIDToTypeID( "ligature" );                    desc1889.putBoolean( idligature, false );                    var idaltligature = stringIDToTypeID( "altligature" );                    desc1889.putBoolean( idaltligature, false );                    var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );                    desc1889.putBoolean( idcontextualLigatures, false );                    var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );                    desc1889.putBoolean( idalternateLigatures, false );                    var idoldStyle = stringIDToTypeID( "oldStyle" );                    desc1889.putBoolean( idoldStyle, false );                    var idfractions = stringIDToTypeID( "fractions" );                    desc1889.putBoolean( idfractions, false );                    var idordinals = stringIDToTypeID( "ordinals" );                    desc1889.putBoolean( idordinals, false );                    var idswash = stringIDToTypeID( "swash" );                    desc1889.putBoolean( idswash, false );                    var idtitling = stringIDToTypeID( "titling" );                    desc1889.putBoolean( idtitling, false );                    var idconnectionForms = stringIDToTypeID( "connectionForms" );                    desc1889.putBoolean( idconnectionForms, true );                    var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );                    desc1889.putBoolean( idstylisticAlternates, false );                    var idornaments = stringIDToTypeID( "ornaments" );                    desc1889.putBoolean( idornaments, false );                    var idfigureStyle = stringIDToTypeID( "figureStyle" );                    var idfigureStyle = stringIDToTypeID( "figureStyle" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1889.putEnumerated( idfigureStyle, idfigureStyle, idNrml );                    var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );                    desc1889.putBoolean( idproportionalMetrics, false );                    var idkana = stringIDToTypeID( "kana" );                    desc1889.putBoolean( idkana, false );                    var iditalics = stringIDToTypeID( "italics" );                    desc1889.putBoolean( iditalics, false );                    var idruby = stringIDToTypeID( "ruby" );                    desc1889.putBoolean( idruby, false );                    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                    var idrotated = stringIDToTypeID( "rotated" );                    desc1889.putEnumerated( idbaselineDirection, idbaselineDirection, idrotated );                    var idtextLanguage = stringIDToTypeID( "textLanguage" );                    var idtextLanguage = stringIDToTypeID( "textLanguage" );                    var idenglishLanguage = stringIDToTypeID( "englishLanguage" );                    desc1889.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );                    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );                    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );                    var iddefaultForm = stringIDToTypeID( "defaultForm" );                    desc1889.putEnumerated( idjapaneseAlternate, idjapaneseAlternate, iddefaultForm );                    var idmojiZume = stringIDToTypeID( "mojiZume" );                    desc1889.putDouble( idmojiZume, 0.300000 );                    var idgridAlignment = stringIDToTypeID( "gridAlignment" );                    var idgridAlignment = stringIDToTypeID( "gridAlignment" );                    var idroman = stringIDToTypeID( "roman" );                    desc1889.putEnumerated( idgridAlignment, idgridAlignment, idroman );                    var idenableWariChu = stringIDToTypeID( "enableWariChu" );                    desc1889.putBoolean( idenableWariChu, false );                    var idwariChuCount = stringIDToTypeID( "wariChuCount" );                    desc1889.putInteger( idwariChuCount, 2 );                    var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );                    desc1889.putInteger( idwariChuLineGap, 0 );                    var idwariChuScale = stringIDToTypeID( "wariChuScale" );                    desc1889.putDouble( idwariChuScale, 0.500000 );                    var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );                    desc1889.putInteger( idwariChuWidow, 2 );                    var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );                    desc1889.putInteger( idwariChuOrphan, 2 );                    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                    var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );                    desc1889.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );                    var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );                    desc1889.putInteger( idtcyUpDown, 0 );                    var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );                    desc1889.putInteger( idtcyLeftRight, 0 );                    var idleftAki = stringIDToTypeID( "leftAki" );                    desc1889.putDouble( idleftAki, -1.000000 );                    var idrightAki = stringIDToTypeID( "rightAki" );                    desc1889.putDouble( idrightAki, -1.000000 );                    var idjiDori = stringIDToTypeID( "jiDori" );                    desc1889.putInteger( idjiDori, 0 );                    var idnoBreak = stringIDToTypeID( "noBreak" );                    desc1889.putBoolean( idnoBreak, false );                    var idClr = charIDToTypeID( "Clr " );                        var desc1890 = new ActionDescriptor();                        var idCyn = charIDToTypeID( "Cyn " );                        desc1890.putDouble( idCyn, 74.520000 );                        var idMgnt = charIDToTypeID( "Mgnt" );                        desc1890.putDouble( idMgnt, 67.780000 );                        var idYlw = charIDToTypeID( "Ylw " );                        desc1890.putDouble( idYlw, 67.130000 );                        var idBlck = charIDToTypeID( "Blck" );                        desc1890.putDouble( idBlck, 89.630000 );                    var idCMYC = charIDToTypeID( "CMYC" );                    desc1889.putObject( idClr, idCMYC, desc1890 );                    var idstrokeColor = stringIDToTypeID( "strokeColor" );                        var desc1891 = new ActionDescriptor();                        var idCyn = charIDToTypeID( "Cyn " );                        desc1891.putDouble( idCyn, 0.000000 );                        var idMgnt = charIDToTypeID( "Mgnt" );                        desc1891.putDouble( idMgnt, 0.000000 );                        var idYlw = charIDToTypeID( "Ylw " );                        desc1891.putDouble( idYlw, 0.000000 );                        var idBlck = charIDToTypeID( "Blck" );                        desc1891.putDouble( idBlck, 0.000000 );                    var idCMYC = charIDToTypeID( "CMYC" );                    desc1889.putObject( idstrokeColor, idCMYC, desc1891 );                    var idFl = charIDToTypeID( "Fl  " );                    desc1889.putBoolean( idFl, true );                    var idStrk = charIDToTypeID( "Strk" );                    desc1889.putBoolean( idStrk, false );                    var idfillFirst = stringIDToTypeID( "fillFirst" );                    desc1889.putBoolean( idfillFirst, false );                    var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );                    desc1889.putBoolean( idfillOverPrint, false );                    var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );                    desc1889.putBoolean( idstrokeOverPrint, false );                    var idlineCap = stringIDToTypeID( "lineCap" );                    var idlineCap = stringIDToTypeID( "lineCap" );                    var idbuttCap = stringIDToTypeID( "buttCap" );                    desc1889.putEnumerated( idlineCap, idlineCap, idbuttCap );                    var idlineJoin = stringIDToTypeID( "lineJoin" );                    var idlineJoin = stringIDToTypeID( "lineJoin" );                    var idmiterJoin = stringIDToTypeID( "miterJoin" );                    desc1889.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );                    var idlineWidth = stringIDToTypeID( "lineWidth" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1889.putUnitDouble( idlineWidth, idPnt, 0.057600 );                    var idmiterLimit = stringIDToTypeID( "miterLimit" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1889.putUnitDouble( idmiterLimit, idPnt, 0.230400 );                    var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );                    desc1889.putDouble( idlineDashoffset, 0.000000 );                var idTxtS = charIDToTypeID( "TxtS" );                desc1888.putObject( idTxtS, idTxtS, desc1889 );            var idTxtt = charIDToTypeID( "Txtt" );            list104.putObject( idTxtt, desc1888 );                var desc1892 = new ActionDescriptor();                var idFrom = charIDToTypeID( "From" );                desc1892.putInteger( idFrom, 0 );                var idT = charIDToTypeID( "T   " );                desc1892.putInteger( idT, 4614 );                var idTxtS = charIDToTypeID( "TxtS" );                    var desc1893 = new ActionDescriptor();                    var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );                    desc1893.putBoolean( idstyleSheetHasParent, true );                    var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );                    desc1893.putString( idfontPostScriptName, """KaiTi_GB2312""" );                    var idFntN = charIDToTypeID( "FntN" );                    desc1893.putString( idFntN, """KaiTi_GB2312""" );                    var idFntS = charIDToTypeID( "FntS" );                    desc1893.putString( idFntS, """Regular""" );                    var idScrp = charIDToTypeID( "Scrp" );                    desc1893.putInteger( idScrp, 25 );                    var idFntT = charIDToTypeID( "FntT" );                    desc1893.putInteger( idFntT, 1 );                    var idSz = charIDToTypeID( "Sz  " );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1893.putUnitDouble( idSz, idPnt, 13.795416 );                    var idHrzS = charIDToTypeID( "HrzS" );                    desc1893.putDouble( idHrzS, 100.000000 );                    var idVrtS = charIDToTypeID( "VrtS" );                    desc1893.putDouble( idVrtS, 100.000000 );                    var idsyntheticBold = stringIDToTypeID( "syntheticBold" );                    desc1893.putBoolean( idsyntheticBold, false );                    var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );                    desc1893.putBoolean( idsyntheticItalic, false );                    var idautoLeading = stringIDToTypeID( "autoLeading" );                    desc1893.putBoolean( idautoLeading, false );                    var idLdng = charIDToTypeID( "Ldng" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1893.putUnitDouble( idLdng, idPnt, 20.693126 );                    var idTrck = charIDToTypeID( "Trck" );                    desc1893.putInteger( idTrck, 0 );                    var idBsln = charIDToTypeID( "Bsln" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1893.putUnitDouble( idBsln, idPnt, 0.000000 );                    var idcharacterRotation = stringIDToTypeID( "characterRotation" );                    desc1893.putDouble( idcharacterRotation, 0.000000 );                    var idAtKr = charIDToTypeID( "AtKr" );                    var idAtKr = charIDToTypeID( "AtKr" );                    var idmanual = stringIDToTypeID( "manual" );                    desc1893.putEnumerated( idAtKr, idAtKr, idmanual );                    var idfontCaps = stringIDToTypeID( "fontCaps" );                    var idfontCaps = stringIDToTypeID( "fontCaps" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1893.putEnumerated( idfontCaps, idfontCaps, idNrml );                    var idbaseline = stringIDToTypeID( "baseline" );                    var idbaseline = stringIDToTypeID( "baseline" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1893.putEnumerated( idbaseline, idbaseline, idNrml );                    var idotbaseline = stringIDToTypeID( "otbaseline" );                    var idotbaseline = stringIDToTypeID( "otbaseline" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1893.putEnumerated( idotbaseline, idotbaseline, idNrml );                    var idstrikethrough = stringIDToTypeID( "strikethrough" );                    var idstrikethrough = stringIDToTypeID( "strikethrough" );                    var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );                    desc1893.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );                    var idUndl = charIDToTypeID( "Undl" );                    var idUndl = charIDToTypeID( "Undl" );                    var idunderlineOff = stringIDToTypeID( "underlineOff" );                    desc1893.putEnumerated( idUndl, idUndl, idunderlineOff );                    var idunderlineOffset = stringIDToTypeID( "underlineOffset" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1893.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );                    var idligature = stringIDToTypeID( "ligature" );                    desc1893.putBoolean( idligature, false );                    var idaltligature = stringIDToTypeID( "altligature" );                    desc1893.putBoolean( idaltligature, false );                    var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );                    desc1893.putBoolean( idcontextualLigatures, false );                    var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );                    desc1893.putBoolean( idalternateLigatures, false );                    var idoldStyle = stringIDToTypeID( "oldStyle" );                    desc1893.putBoolean( idoldStyle, false );                    var idfractions = stringIDToTypeID( "fractions" );                    desc1893.putBoolean( idfractions, false );                    var idordinals = stringIDToTypeID( "ordinals" );                    desc1893.putBoolean( idordinals, false );                    var idswash = stringIDToTypeID( "swash" );                    desc1893.putBoolean( idswash, false );                    var idtitling = stringIDToTypeID( "titling" );                    desc1893.putBoolean( idtitling, false );                    var idconnectionForms = stringIDToTypeID( "connectionForms" );                    desc1893.putBoolean( idconnectionForms, true );                    var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );                    desc1893.putBoolean( idstylisticAlternates, false );                    var idornaments = stringIDToTypeID( "ornaments" );                    desc1893.putBoolean( idornaments, false );                    var idfigureStyle = stringIDToTypeID( "figureStyle" );                    var idfigureStyle = stringIDToTypeID( "figureStyle" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1893.putEnumerated( idfigureStyle, idfigureStyle, idNrml );                    var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );                    desc1893.putBoolean( idproportionalMetrics, false );                    var idkana = stringIDToTypeID( "kana" );                    desc1893.putBoolean( idkana, false );                    var iditalics = stringIDToTypeID( "italics" );                    desc1893.putBoolean( iditalics, false );                    var idruby = stringIDToTypeID( "ruby" );                    desc1893.putBoolean( idruby, false );                    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                    var idrotated = stringIDToTypeID( "rotated" );                    desc1893.putEnumerated( idbaselineDirection, idbaselineDirection, idrotated );                    var idtextLanguage = stringIDToTypeID( "textLanguage" );                    var idtextLanguage = stringIDToTypeID( "textLanguage" );                    var idenglishLanguage = stringIDToTypeID( "englishLanguage" );                    desc1893.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );                    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );                    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );                    var iddefaultForm = stringIDToTypeID( "defaultForm" );                    desc1893.putEnumerated( idjapaneseAlternate, idjapaneseAlternate, iddefaultForm );                    var idmojiZume = stringIDToTypeID( "mojiZume" );                    desc1893.putDouble( idmojiZume, 0.300000 );                    var idgridAlignment = stringIDToTypeID( "gridAlignment" );                    var idgridAlignment = stringIDToTypeID( "gridAlignment" );                    var idroman = stringIDToTypeID( "roman" );                    desc1893.putEnumerated( idgridAlignment, idgridAlignment, idroman );                    var idenableWariChu = stringIDToTypeID( "enableWariChu" );                    desc1893.putBoolean( idenableWariChu, false );                    var idwariChuCount = stringIDToTypeID( "wariChuCount" );                    desc1893.putInteger( idwariChuCount, 2 );                    var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );                    desc1893.putInteger( idwariChuLineGap, 0 );                    var idwariChuScale = stringIDToTypeID( "wariChuScale" );                    desc1893.putDouble( idwariChuScale, 0.500000 );                    var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );                    desc1893.putInteger( idwariChuWidow, 2 );                    var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );                    desc1893.putInteger( idwariChuOrphan, 2 );                    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                    var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );                    desc1893.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );                    var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );                    desc1893.putInteger( idtcyUpDown, 0 );                    var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );                    desc1893.putInteger( idtcyLeftRight, 0 );                    var idleftAki = stringIDToTypeID( "leftAki" );                    desc1893.putDouble( idleftAki, -1.000000 );                    var idrightAki = stringIDToTypeID( "rightAki" );                    desc1893.putDouble( idrightAki, -1.000000 );                    var idjiDori = stringIDToTypeID( "jiDori" );                    desc1893.putInteger( idjiDori, 0 );                    var idnoBreak = stringIDToTypeID( "noBreak" );                    desc1893.putBoolean( idnoBreak, false );                    var idClr = charIDToTypeID( "Clr " );                        var desc1894 = new ActionDescriptor();                        var idCyn = charIDToTypeID( "Cyn " );                        desc1894.putDouble( idCyn, 74.520000 );                        var idMgnt = charIDToTypeID( "Mgnt" );                        desc1894.putDouble( idMgnt, 67.780000 );                        var idYlw = charIDToTypeID( "Ylw " );                        desc1894.putDouble( idYlw, 67.130000 );                        var idBlck = charIDToTypeID( "Blck" );                        desc1894.putDouble( idBlck, 89.630000 );                    var idCMYC = charIDToTypeID( "CMYC" );                    desc1893.putObject( idClr, idCMYC, desc1894 );                    var idstrokeColor = stringIDToTypeID( "strokeColor" );                        var desc1895 = new ActionDescriptor();                        var idCyn = charIDToTypeID( "Cyn " );                        desc1895.putDouble( idCyn, 0.000000 );                        var idMgnt = charIDToTypeID( "Mgnt" );                        desc1895.putDouble( idMgnt, 0.000000 );                        var idYlw = charIDToTypeID( "Ylw " );                        desc1895.putDouble( idYlw, 0.000000 );                        var idBlck = charIDToTypeID( "Blck" );                        desc1895.putDouble( idBlck, 0.000000 );                    var idCMYC = charIDToTypeID( "CMYC" );                    desc1893.putObject( idstrokeColor, idCMYC, desc1895 );                    var idFl = charIDToTypeID( "Fl  " );                    desc1893.putBoolean( idFl, true );                    var idStrk = charIDToTypeID( "Strk" );                    desc1893.putBoolean( idStrk, false );                    var idfillFirst = stringIDToTypeID( "fillFirst" );                    desc1893.putBoolean( idfillFirst, false );                    var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );                    desc1893.putBoolean( idfillOverPrint, false );                    var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );                    desc1893.putBoolean( idstrokeOverPrint, false );                    var idlineCap = stringIDToTypeID( "lineCap" );                    var idlineCap = stringIDToTypeID( "lineCap" );                    var idbuttCap = stringIDToTypeID( "buttCap" );                    desc1893.putEnumerated( idlineCap, idlineCap, idbuttCap );                    var idlineJoin = stringIDToTypeID( "lineJoin" );                    var idlineJoin = stringIDToTypeID( "lineJoin" );                    var idmiterJoin = stringIDToTypeID( "miterJoin" );                    desc1893.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );                    var idlineWidth = stringIDToTypeID( "lineWidth" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1893.putUnitDouble( idlineWidth, idPnt, 0.057600 );                    var idmiterLimit = stringIDToTypeID( "miterLimit" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1893.putUnitDouble( idmiterLimit, idPnt, 0.230400 );                    var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );                    desc1893.putDouble( idlineDashoffset, 0.000000 );                var idTxtS = charIDToTypeID( "TxtS" );                desc1892.putObject( idTxtS, idTxtS, desc1893 );            var idTxtt = charIDToTypeID( "Txtt" );            list104.putObject( idTxtt, desc1892 );                var desc1896 = new ActionDescriptor();                var idFrom = charIDToTypeID( "From" );                desc1896.putInteger( idFrom, 0 );                var idT = charIDToTypeID( "T   " );                desc1896.putInteger( idT, 4614 );                var idTxtS = charIDToTypeID( "TxtS" );                    var desc1897 = new ActionDescriptor();                    var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );                    desc1897.putBoolean( idstyleSheetHasParent, true );                    var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );                    desc1897.putString( idfontPostScriptName, """KaiTi_GB2312""" );                    var idFntN = charIDToTypeID( "FntN" );                    desc1897.putString( idFntN, """KaiTi_GB2312""" );                    var idFntS = charIDToTypeID( "FntS" );                    desc1897.putString( idFntS, """Regular""" );                    var idScrp = charIDToTypeID( "Scrp" );                    desc1897.putInteger( idScrp, 25 );                    var idFntT = charIDToTypeID( "FntT" );                    desc1897.putInteger( idFntT, 1 );                    var idSz = charIDToTypeID( "Sz  " );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1897.putUnitDouble( idSz, idPnt, 13.795416 );                    var idHrzS = charIDToTypeID( "HrzS" );                    desc1897.putDouble( idHrzS, 100.000000 );                    var idVrtS = charIDToTypeID( "VrtS" );                    desc1897.putDouble( idVrtS, 100.000000 );                    var idsyntheticBold = stringIDToTypeID( "syntheticBold" );                    desc1897.putBoolean( idsyntheticBold, false );                    var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );                    desc1897.putBoolean( idsyntheticItalic, false );                    var idautoLeading = stringIDToTypeID( "autoLeading" );                    desc1897.putBoolean( idautoLeading, false );                    var idLdng = charIDToTypeID( "Ldng" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1897.putUnitDouble( idLdng, idPnt, 20.693126 );                    var idTrck = charIDToTypeID( "Trck" );                    desc1897.putInteger( idTrck, 0 );                    var idBsln = charIDToTypeID( "Bsln" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1897.putUnitDouble( idBsln, idPnt, 0.000000 );                    var idcharacterRotation = stringIDToTypeID( "characterRotation" );                    desc1897.putDouble( idcharacterRotation, 0.000000 );                    var idAtKr = charIDToTypeID( "AtKr" );                    var idAtKr = charIDToTypeID( "AtKr" );                    var idmanual = stringIDToTypeID( "manual" );                    desc1897.putEnumerated( idAtKr, idAtKr, idmanual );                    var idfontCaps = stringIDToTypeID( "fontCaps" );                    var idfontCaps = stringIDToTypeID( "fontCaps" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1897.putEnumerated( idfontCaps, idfontCaps, idNrml );                    var idbaseline = stringIDToTypeID( "baseline" );                    var idbaseline = stringIDToTypeID( "baseline" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1897.putEnumerated( idbaseline, idbaseline, idNrml );                    var idotbaseline = stringIDToTypeID( "otbaseline" );                    var idotbaseline = stringIDToTypeID( "otbaseline" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1897.putEnumerated( idotbaseline, idotbaseline, idNrml );                    var idstrikethrough = stringIDToTypeID( "strikethrough" );                    var idstrikethrough = stringIDToTypeID( "strikethrough" );                    var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );                    desc1897.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );                    var idUndl = charIDToTypeID( "Undl" );                    var idUndl = charIDToTypeID( "Undl" );                    var idunderlineOff = stringIDToTypeID( "underlineOff" );                    desc1897.putEnumerated( idUndl, idUndl, idunderlineOff );                    var idunderlineOffset = stringIDToTypeID( "underlineOffset" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1897.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );                    var idligature = stringIDToTypeID( "ligature" );                    desc1897.putBoolean( idligature, false );                    var idaltligature = stringIDToTypeID( "altligature" );                    desc1897.putBoolean( idaltligature, false );                    var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );                    desc1897.putBoolean( idcontextualLigatures, false );                    var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );                    desc1897.putBoolean( idalternateLigatures, false );                    var idoldStyle = stringIDToTypeID( "oldStyle" );                    desc1897.putBoolean( idoldStyle, false );                    var idfractions = stringIDToTypeID( "fractions" );                    desc1897.putBoolean( idfractions, false );                    var idordinals = stringIDToTypeID( "ordinals" );                    desc1897.putBoolean( idordinals, false );                    var idswash = stringIDToTypeID( "swash" );                    desc1897.putBoolean( idswash, false );                    var idtitling = stringIDToTypeID( "titling" );                    desc1897.putBoolean( idtitling, false );                    var idconnectionForms = stringIDToTypeID( "connectionForms" );                    desc1897.putBoolean( idconnectionForms, true );                    var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );                    desc1897.putBoolean( idstylisticAlternates, false );                    var idornaments = stringIDToTypeID( "ornaments" );                    desc1897.putBoolean( idornaments, false );                    var idfigureStyle = stringIDToTypeID( "figureStyle" );                    var idfigureStyle = stringIDToTypeID( "figureStyle" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1897.putEnumerated( idfigureStyle, idfigureStyle, idNrml );                    var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );                    desc1897.putBoolean( idproportionalMetrics, false );                    var idkana = stringIDToTypeID( "kana" );                    desc1897.putBoolean( idkana, false );                    var iditalics = stringIDToTypeID( "italics" );                    desc1897.putBoolean( iditalics, false );                    var idruby = stringIDToTypeID( "ruby" );                    desc1897.putBoolean( idruby, false );                    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                    var idrotated = stringIDToTypeID( "rotated" );                    desc1897.putEnumerated( idbaselineDirection, idbaselineDirection, idrotated );                    var idtextLanguage = stringIDToTypeID( "textLanguage" );                    var idtextLanguage = stringIDToTypeID( "textLanguage" );                    var idenglishLanguage = stringIDToTypeID( "englishLanguage" );                    desc1897.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );                    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );                    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );                    var iddefaultForm = stringIDToTypeID( "defaultForm" );                    desc1897.putEnumerated( idjapaneseAlternate, idjapaneseAlternate, iddefaultForm );                    var idmojiZume = stringIDToTypeID( "mojiZume" );                    desc1897.putDouble( idmojiZume, 0.300000 );                    var idgridAlignment = stringIDToTypeID( "gridAlignment" );                    var idgridAlignment = stringIDToTypeID( "gridAlignment" );                    var idroman = stringIDToTypeID( "roman" );                    desc1897.putEnumerated( idgridAlignment, idgridAlignment, idroman );                    var idenableWariChu = stringIDToTypeID( "enableWariChu" );                    desc1897.putBoolean( idenableWariChu, false );                    var idwariChuCount = stringIDToTypeID( "wariChuCount" );                    desc1897.putInteger( idwariChuCount, 2 );                    var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );                    desc1897.putInteger( idwariChuLineGap, 0 );                    var idwariChuScale = stringIDToTypeID( "wariChuScale" );                    desc1897.putDouble( idwariChuScale, 0.500000 );                    var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );                    desc1897.putInteger( idwariChuWidow, 2 );                    var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );                    desc1897.putInteger( idwariChuOrphan, 2 );                    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                    var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );                    desc1897.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );                    var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );                    desc1897.putInteger( idtcyUpDown, 0 );                    var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );                    desc1897.putInteger( idtcyLeftRight, 0 );                    var idleftAki = stringIDToTypeID( "leftAki" );                    desc1897.putDouble( idleftAki, -1.000000 );                    var idrightAki = stringIDToTypeID( "rightAki" );                    desc1897.putDouble( idrightAki, -1.000000 );                    var idjiDori = stringIDToTypeID( "jiDori" );                    desc1897.putInteger( idjiDori, 0 );                    var idnoBreak = stringIDToTypeID( "noBreak" );                    desc1897.putBoolean( idnoBreak, false );                    var idClr = charIDToTypeID( "Clr " );                        var desc1898 = new ActionDescriptor();                        var idCyn = charIDToTypeID( "Cyn " );                        desc1898.putDouble( idCyn, 74.520000 );                        var idMgnt = charIDToTypeID( "Mgnt" );                        desc1898.putDouble( idMgnt, 67.780000 );                        var idYlw = charIDToTypeID( "Ylw " );                        desc1898.putDouble( idYlw, 67.130000 );                        var idBlck = charIDToTypeID( "Blck" );                        desc1898.putDouble( idBlck, 89.630000 );                    var idCMYC = charIDToTypeID( "CMYC" );                    desc1897.putObject( idClr, idCMYC, desc1898 );                    var idstrokeColor = stringIDToTypeID( "strokeColor" );                        var desc1899 = new ActionDescriptor();                        var idCyn = charIDToTypeID( "Cyn " );                        desc1899.putDouble( idCyn, 0.000000 );                        var idMgnt = charIDToTypeID( "Mgnt" );                        desc1899.putDouble( idMgnt, 0.000000 );                        var idYlw = charIDToTypeID( "Ylw " );                        desc1899.putDouble( idYlw, 0.000000 );                        var idBlck = charIDToTypeID( "Blck" );                        desc1899.putDouble( idBlck, 0.000000 );                    var idCMYC = charIDToTypeID( "CMYC" );                    desc1897.putObject( idstrokeColor, idCMYC, desc1899 );                    var idFl = charIDToTypeID( "Fl  " );                    desc1897.putBoolean( idFl, true );                    var idStrk = charIDToTypeID( "Strk" );                    desc1897.putBoolean( idStrk, false );                    var idfillFirst = stringIDToTypeID( "fillFirst" );                    desc1897.putBoolean( idfillFirst, false );                    var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );                    desc1897.putBoolean( idfillOverPrint, false );                    var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );                    desc1897.putBoolean( idstrokeOverPrint, false );                    var idlineCap = stringIDToTypeID( "lineCap" );                    var idlineCap = stringIDToTypeID( "lineCap" );                    var idbuttCap = stringIDToTypeID( "buttCap" );                    desc1897.putEnumerated( idlineCap, idlineCap, idbuttCap );                    var idlineJoin = stringIDToTypeID( "lineJoin" );                    var idlineJoin = stringIDToTypeID( "lineJoin" );                    var idmiterJoin = stringIDToTypeID( "miterJoin" );                    desc1897.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );                    var idlineWidth = stringIDToTypeID( "lineWidth" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1897.putUnitDouble( idlineWidth, idPnt, 0.057600 );                    var idmiterLimit = stringIDToTypeID( "miterLimit" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1897.putUnitDouble( idmiterLimit, idPnt, 0.230400 );                    var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );                    desc1897.putDouble( idlineDashoffset, 0.000000 );                var idTxtS = charIDToTypeID( "TxtS" );                desc1896.putObject( idTxtS, idTxtS, desc1897 );            var idTxtt = charIDToTypeID( "Txtt" );            list104.putObject( idTxtt, desc1896 );                var desc1900 = new ActionDescriptor();                var idFrom = charIDToTypeID( "From" );                desc1900.putInteger( idFrom, 0 );                var idT = charIDToTypeID( "T   " );                desc1900.putInteger( idT, 4614 );                var idTxtS = charIDToTypeID( "TxtS" );                    var desc1901 = new ActionDescriptor();                    var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );                    desc1901.putBoolean( idstyleSheetHasParent, true );                    var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );                    desc1901.putString( idfontPostScriptName, """KaiTi_GB2312""" );                    var idFntN = charIDToTypeID( "FntN" );                    desc1901.putString( idFntN, """KaiTi_GB2312""" );                    var idFntS = charIDToTypeID( "FntS" );                    desc1901.putString( idFntS, """Regular""" );                    var idScrp = charIDToTypeID( "Scrp" );                    desc1901.putInteger( idScrp, 25 );                    var idFntT = charIDToTypeID( "FntT" );                    desc1901.putInteger( idFntT, 1 );                    var idSz = charIDToTypeID( "Sz  " );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1901.putUnitDouble( idSz, idPnt, 13.795416 );                    var idHrzS = charIDToTypeID( "HrzS" );                    desc1901.putDouble( idHrzS, 100.000000 );                    var idVrtS = charIDToTypeID( "VrtS" );                    desc1901.putDouble( idVrtS, 100.000000 );                    var idsyntheticBold = stringIDToTypeID( "syntheticBold" );                    desc1901.putBoolean( idsyntheticBold, false );                    var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );                    desc1901.putBoolean( idsyntheticItalic, false );                    var idautoLeading = stringIDToTypeID( "autoLeading" );                    desc1901.putBoolean( idautoLeading, false );                    var idLdng = charIDToTypeID( "Ldng" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1901.putUnitDouble( idLdng, idPnt, 20.693126 );                    var idTrck = charIDToTypeID( "Trck" );                    desc1901.putInteger( idTrck, 0 );                    var idBsln = charIDToTypeID( "Bsln" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1901.putUnitDouble( idBsln, idPnt, 0.000000 );                    var idcharacterRotation = stringIDToTypeID( "characterRotation" );                    desc1901.putDouble( idcharacterRotation, 0.000000 );                    var idAtKr = charIDToTypeID( "AtKr" );                    var idAtKr = charIDToTypeID( "AtKr" );                    var idmanual = stringIDToTypeID( "manual" );                    desc1901.putEnumerated( idAtKr, idAtKr, idmanual );                    var idfontCaps = stringIDToTypeID( "fontCaps" );                    var idfontCaps = stringIDToTypeID( "fontCaps" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1901.putEnumerated( idfontCaps, idfontCaps, idNrml );                    var idbaseline = stringIDToTypeID( "baseline" );                    var idbaseline = stringIDToTypeID( "baseline" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1901.putEnumerated( idbaseline, idbaseline, idNrml );                    var idotbaseline = stringIDToTypeID( "otbaseline" );                    var idotbaseline = stringIDToTypeID( "otbaseline" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1901.putEnumerated( idotbaseline, idotbaseline, idNrml );                    var idstrikethrough = stringIDToTypeID( "strikethrough" );                    var idstrikethrough = stringIDToTypeID( "strikethrough" );                    var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );                    desc1901.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );                    var idUndl = charIDToTypeID( "Undl" );                    var idUndl = charIDToTypeID( "Undl" );                    var idunderlineOff = stringIDToTypeID( "underlineOff" );                    desc1901.putEnumerated( idUndl, idUndl, idunderlineOff );                    var idunderlineOffset = stringIDToTypeID( "underlineOffset" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1901.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );                    var idligature = stringIDToTypeID( "ligature" );                    desc1901.putBoolean( idligature, false );                    var idaltligature = stringIDToTypeID( "altligature" );                    desc1901.putBoolean( idaltligature, false );                    var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );                    desc1901.putBoolean( idcontextualLigatures, false );                    var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );                    desc1901.putBoolean( idalternateLigatures, false );                    var idoldStyle = stringIDToTypeID( "oldStyle" );                    desc1901.putBoolean( idoldStyle, false );                    var idfractions = stringIDToTypeID( "fractions" );                    desc1901.putBoolean( idfractions, false );                    var idordinals = stringIDToTypeID( "ordinals" );                    desc1901.putBoolean( idordinals, false );                    var idswash = stringIDToTypeID( "swash" );                    desc1901.putBoolean( idswash, false );                    var idtitling = stringIDToTypeID( "titling" );                    desc1901.putBoolean( idtitling, false );                    var idconnectionForms = stringIDToTypeID( "connectionForms" );                    desc1901.putBoolean( idconnectionForms, true );                    var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );                    desc1901.putBoolean( idstylisticAlternates, false );                    var idornaments = stringIDToTypeID( "ornaments" );                    desc1901.putBoolean( idornaments, false );                    var idfigureStyle = stringIDToTypeID( "figureStyle" );                    var idfigureStyle = stringIDToTypeID( "figureStyle" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1901.putEnumerated( idfigureStyle, idfigureStyle, idNrml );                    var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );                    desc1901.putBoolean( idproportionalMetrics, false );                    var idkana = stringIDToTypeID( "kana" );                    desc1901.putBoolean( idkana, false );                    var iditalics = stringIDToTypeID( "italics" );                    desc1901.putBoolean( iditalics, false );                    var idruby = stringIDToTypeID( "ruby" );                    desc1901.putBoolean( idruby, false );                    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                    var idrotated = stringIDToTypeID( "rotated" );                    desc1901.putEnumerated( idbaselineDirection, idbaselineDirection, idrotated );                    var idtextLanguage = stringIDToTypeID( "textLanguage" );                    var idtextLanguage = stringIDToTypeID( "textLanguage" );                    var idenglishLanguage = stringIDToTypeID( "englishLanguage" );                    desc1901.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );                    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );                    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );                    var iddefaultForm = stringIDToTypeID( "defaultForm" );                    desc1901.putEnumerated( idjapaneseAlternate, idjapaneseAlternate, iddefaultForm );                    var idmojiZume = stringIDToTypeID( "mojiZume" );                    desc1901.putDouble( idmojiZume, 0.300000 );                    var idgridAlignment = stringIDToTypeID( "gridAlignment" );                    var idgridAlignment = stringIDToTypeID( "gridAlignment" );                    var idroman = stringIDToTypeID( "roman" );                    desc1901.putEnumerated( idgridAlignment, idgridAlignment, idroman );                    var idenableWariChu = stringIDToTypeID( "enableWariChu" );                    desc1901.putBoolean( idenableWariChu, false );                    var idwariChuCount = stringIDToTypeID( "wariChuCount" );                    desc1901.putInteger( idwariChuCount, 2 );                    var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );                    desc1901.putInteger( idwariChuLineGap, 0 );                    var idwariChuScale = stringIDToTypeID( "wariChuScale" );                    desc1901.putDouble( idwariChuScale, 0.500000 );                    var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );                    desc1901.putInteger( idwariChuWidow, 2 );                    var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );                    desc1901.putInteger( idwariChuOrphan, 2 );                    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                    var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );                    desc1901.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );                    var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );                    desc1901.putInteger( idtcyUpDown, 0 );                    var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );                    desc1901.putInteger( idtcyLeftRight, 0 );                    var idleftAki = stringIDToTypeID( "leftAki" );                    desc1901.putDouble( idleftAki, -1.000000 );                    var idrightAki = stringIDToTypeID( "rightAki" );                    desc1901.putDouble( idrightAki, -1.000000 );                    var idjiDori = stringIDToTypeID( "jiDori" );                    desc1901.putInteger( idjiDori, 0 );                    var idnoBreak = stringIDToTypeID( "noBreak" );                    desc1901.putBoolean( idnoBreak, false );                    var idClr = charIDToTypeID( "Clr " );                        var desc1902 = new ActionDescriptor();                        var idCyn = charIDToTypeID( "Cyn " );                        desc1902.putDouble( idCyn, 74.520000 );                        var idMgnt = charIDToTypeID( "Mgnt" );                        desc1902.putDouble( idMgnt, 67.780000 );                        var idYlw = charIDToTypeID( "Ylw " );                        desc1902.putDouble( idYlw, 67.130000 );                        var idBlck = charIDToTypeID( "Blck" );                        desc1902.putDouble( idBlck, 89.630000 );                    var idCMYC = charIDToTypeID( "CMYC" );                    desc1901.putObject( idClr, idCMYC, desc1902 );                    var idstrokeColor = stringIDToTypeID( "strokeColor" );                        var desc1903 = new ActionDescriptor();                        var idCyn = charIDToTypeID( "Cyn " );                        desc1903.putDouble( idCyn, 0.000000 );                        var idMgnt = charIDToTypeID( "Mgnt" );                        desc1903.putDouble( idMgnt, 0.000000 );                        var idYlw = charIDToTypeID( "Ylw " );                        desc1903.putDouble( idYlw, 0.000000 );                        var idBlck = charIDToTypeID( "Blck" );                        desc1903.putDouble( idBlck, 0.000000 );                    var idCMYC = charIDToTypeID( "CMYC" );                    desc1901.putObject( idstrokeColor, idCMYC, desc1903 );                    var idFl = charIDToTypeID( "Fl  " );                    desc1901.putBoolean( idFl, true );                    var idStrk = charIDToTypeID( "Strk" );                    desc1901.putBoolean( idStrk, false );                    var idfillFirst = stringIDToTypeID( "fillFirst" );                    desc1901.putBoolean( idfillFirst, false );                    var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );                    desc1901.putBoolean( idfillOverPrint, false );                    var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );                    desc1901.putBoolean( idstrokeOverPrint, false );                    var idlineCap = stringIDToTypeID( "lineCap" );                    var idlineCap = stringIDToTypeID( "lineCap" );                    var idbuttCap = stringIDToTypeID( "buttCap" );                    desc1901.putEnumerated( idlineCap, idlineCap, idbuttCap );                    var idlineJoin = stringIDToTypeID( "lineJoin" );                    var idlineJoin = stringIDToTypeID( "lineJoin" );                    var idmiterJoin = stringIDToTypeID( "miterJoin" );                    desc1901.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );                    var idlineWidth = stringIDToTypeID( "lineWidth" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1901.putUnitDouble( idlineWidth, idPnt, 0.057600 );                    var idmiterLimit = stringIDToTypeID( "miterLimit" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1901.putUnitDouble( idmiterLimit, idPnt, 0.230400 );                    var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );                    desc1901.putDouble( idlineDashoffset, 0.000000 );                var idTxtS = charIDToTypeID( "TxtS" );                desc1900.putObject( idTxtS, idTxtS, desc1901 );            var idTxtt = charIDToTypeID( "Txtt" );            list104.putObject( idTxtt, desc1900 );                var desc1904 = new ActionDescriptor();                var idFrom = charIDToTypeID( "From" );                desc1904.putInteger( idFrom, 0 );                var idT = charIDToTypeID( "T   " );                desc1904.putInteger( idT, 4614 );                var idTxtS = charIDToTypeID( "TxtS" );                    var desc1905 = new ActionDescriptor();                    var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );                    desc1905.putBoolean( idstyleSheetHasParent, true );                    var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );                    desc1905.putString( idfontPostScriptName, """KaiTi_GB2312""" );                    var idFntN = charIDToTypeID( "FntN" );                    desc1905.putString( idFntN, """KaiTi_GB2312""" );                    var idFntS = charIDToTypeID( "FntS" );                    desc1905.putString( idFntS, """Regular""" );                    var idScrp = charIDToTypeID( "Scrp" );                    desc1905.putInteger( idScrp, 25 );                    var idFntT = charIDToTypeID( "FntT" );                    desc1905.putInteger( idFntT, 1 );                    var idSz = charIDToTypeID( "Sz  " );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1905.putUnitDouble( idSz, idPnt, 13.795416 );                    var idHrzS = charIDToTypeID( "HrzS" );                    desc1905.putDouble( idHrzS, 100.000000 );                    var idVrtS = charIDToTypeID( "VrtS" );                    desc1905.putDouble( idVrtS, 100.000000 );                    var idsyntheticBold = stringIDToTypeID( "syntheticBold" );                    desc1905.putBoolean( idsyntheticBold, false );                    var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );                    desc1905.putBoolean( idsyntheticItalic, false );                    var idautoLeading = stringIDToTypeID( "autoLeading" );                    desc1905.putBoolean( idautoLeading, false );                    var idLdng = charIDToTypeID( "Ldng" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1905.putUnitDouble( idLdng, idPnt, 20.693126 );                    var idTrck = charIDToTypeID( "Trck" );                    desc1905.putInteger( idTrck, 0 );                    var idBsln = charIDToTypeID( "Bsln" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1905.putUnitDouble( idBsln, idPnt, 0.000000 );                    var idcharacterRotation = stringIDToTypeID( "characterRotation" );                    desc1905.putDouble( idcharacterRotation, 0.000000 );                    var idAtKr = charIDToTypeID( "AtKr" );                    var idAtKr = charIDToTypeID( "AtKr" );                    var idmanual = stringIDToTypeID( "manual" );                    desc1905.putEnumerated( idAtKr, idAtKr, idmanual );                    var idfontCaps = stringIDToTypeID( "fontCaps" );                    var idfontCaps = stringIDToTypeID( "fontCaps" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1905.putEnumerated( idfontCaps, idfontCaps, idNrml );                    var idbaseline = stringIDToTypeID( "baseline" );                    var idbaseline = stringIDToTypeID( "baseline" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1905.putEnumerated( idbaseline, idbaseline, idNrml );                    var idotbaseline = stringIDToTypeID( "otbaseline" );                    var idotbaseline = stringIDToTypeID( "otbaseline" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1905.putEnumerated( idotbaseline, idotbaseline, idNrml );                    var idstrikethrough = stringIDToTypeID( "strikethrough" );                    var idstrikethrough = stringIDToTypeID( "strikethrough" );                    var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );                    desc1905.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );                    var idUndl = charIDToTypeID( "Undl" );                    var idUndl = charIDToTypeID( "Undl" );                    var idunderlineOff = stringIDToTypeID( "underlineOff" );                    desc1905.putEnumerated( idUndl, idUndl, idunderlineOff );                    var idunderlineOffset = stringIDToTypeID( "underlineOffset" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1905.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );                    var idligature = stringIDToTypeID( "ligature" );                    desc1905.putBoolean( idligature, false );                    var idaltligature = stringIDToTypeID( "altligature" );                    desc1905.putBoolean( idaltligature, false );                    var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );                    desc1905.putBoolean( idcontextualLigatures, false );                    var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );                    desc1905.putBoolean( idalternateLigatures, false );                    var idoldStyle = stringIDToTypeID( "oldStyle" );                    desc1905.putBoolean( idoldStyle, false );                    var idfractions = stringIDToTypeID( "fractions" );                    desc1905.putBoolean( idfractions, false );                    var idordinals = stringIDToTypeID( "ordinals" );                    desc1905.putBoolean( idordinals, false );                    var idswash = stringIDToTypeID( "swash" );                    desc1905.putBoolean( idswash, false );                    var idtitling = stringIDToTypeID( "titling" );                    desc1905.putBoolean( idtitling, false );                    var idconnectionForms = stringIDToTypeID( "connectionForms" );                    desc1905.putBoolean( idconnectionForms, true );                    var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );                    desc1905.putBoolean( idstylisticAlternates, false );                    var idornaments = stringIDToTypeID( "ornaments" );                    desc1905.putBoolean( idornaments, false );                    var idfigureStyle = stringIDToTypeID( "figureStyle" );                    var idfigureStyle = stringIDToTypeID( "figureStyle" );                    var idNrml = charIDToTypeID( "Nrml" );                    desc1905.putEnumerated( idfigureStyle, idfigureStyle, idNrml );                    var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );                    desc1905.putBoolean( idproportionalMetrics, false );                    var idkana = stringIDToTypeID( "kana" );                    desc1905.putBoolean( idkana, false );                    var iditalics = stringIDToTypeID( "italics" );                    desc1905.putBoolean( iditalics, false );                    var idruby = stringIDToTypeID( "ruby" );                    desc1905.putBoolean( idruby, false );                    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                    var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                    var idrotated = stringIDToTypeID( "rotated" );                    desc1905.putEnumerated( idbaselineDirection, idbaselineDirection, idrotated );                    var idtextLanguage = stringIDToTypeID( "textLanguage" );                    var idtextLanguage = stringIDToTypeID( "textLanguage" );                    var idenglishLanguage = stringIDToTypeID( "englishLanguage" );                    desc1905.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );                    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );                    var idjapaneseAlternate = stringIDToTypeID( "japaneseAlternate" );                    var iddefaultForm = stringIDToTypeID( "defaultForm" );                    desc1905.putEnumerated( idjapaneseAlternate, idjapaneseAlternate, iddefaultForm );                    var idmojiZume = stringIDToTypeID( "mojiZume" );                    desc1905.putDouble( idmojiZume, 0.300000 );                    var idgridAlignment = stringIDToTypeID( "gridAlignment" );                    var idgridAlignment = stringIDToTypeID( "gridAlignment" );                    var idroman = stringIDToTypeID( "roman" );                    desc1905.putEnumerated( idgridAlignment, idgridAlignment, idroman );                    var idenableWariChu = stringIDToTypeID( "enableWariChu" );                    desc1905.putBoolean( idenableWariChu, false );                    var idwariChuCount = stringIDToTypeID( "wariChuCount" );                    desc1905.putInteger( idwariChuCount, 2 );                    var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );                    desc1905.putInteger( idwariChuLineGap, 0 );                    var idwariChuScale = stringIDToTypeID( "wariChuScale" );                    desc1905.putDouble( idwariChuScale, 0.500000 );                    var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );                    desc1905.putInteger( idwariChuWidow, 2 );                    var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );                    desc1905.putInteger( idwariChuOrphan, 2 );                    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                    var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                    var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );                    desc1905.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );                    var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );                    desc1905.putInteger( idtcyUpDown, 0 );                    var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );                    desc1905.putInteger( idtcyLeftRight, 0 );                    var idleftAki = stringIDToTypeID( "leftAki" );                    desc1905.putDouble( idleftAki, -1.000000 );                    var idrightAki = stringIDToTypeID( "rightAki" );                    desc1905.putDouble( idrightAki, -1.000000 );                    var idjiDori = stringIDToTypeID( "jiDori" );                    desc1905.putInteger( idjiDori, 0 );                    var idnoBreak = stringIDToTypeID( "noBreak" );                    desc1905.putBoolean( idnoBreak, false );                    var idClr = charIDToTypeID( "Clr " );                        var desc1906 = new ActionDescriptor();                        var idCyn = charIDToTypeID( "Cyn " );                        desc1906.putDouble( idCyn, 74.520000 );                        var idMgnt = charIDToTypeID( "Mgnt" );                        desc1906.putDouble( idMgnt, 67.780000 );                        var idYlw = charIDToTypeID( "Ylw " );                        desc1906.putDouble( idYlw, 67.130000 );                        var idBlck = charIDToTypeID( "Blck" );                        desc1906.putDouble( idBlck, 89.630000 );                    var idCMYC = charIDToTypeID( "CMYC" );                    desc1905.putObject( idClr, idCMYC, desc1906 );                    var idstrokeColor = stringIDToTypeID( "strokeColor" );                        var desc1907 = new ActionDescriptor();                        var idCyn = charIDToTypeID( "Cyn " );                        desc1907.putDouble( idCyn, 0.000000 );                        var idMgnt = charIDToTypeID( "Mgnt" );                        desc1907.putDouble( idMgnt, 0.000000 );                        var idYlw = charIDToTypeID( "Ylw " );                        desc1907.putDouble( idYlw, 0.000000 );                        var idBlck = charIDToTypeID( "Blck" );                        desc1907.putDouble( idBlck, 0.000000 );                    var idCMYC = charIDToTypeID( "CMYC" );                    desc1905.putObject( idstrokeColor, idCMYC, desc1907 );                    var idFl = charIDToTypeID( "Fl  " );                    desc1905.putBoolean( idFl, true );                    var idStrk = charIDToTypeID( "Strk" );                    desc1905.putBoolean( idStrk, false );                    var idfillFirst = stringIDToTypeID( "fillFirst" );                    desc1905.putBoolean( idfillFirst, false );                    var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );                    desc1905.putBoolean( idfillOverPrint, false );                    var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );                    desc1905.putBoolean( idstrokeOverPrint, false );                    var idlineCap = stringIDToTypeID( "lineCap" );                    var idlineCap = stringIDToTypeID( "lineCap" );                    var idbuttCap = stringIDToTypeID( "buttCap" );                    desc1905.putEnumerated( idlineCap, idlineCap, idbuttCap );                    var idlineJoin = stringIDToTypeID( "lineJoin" );                    var idlineJoin = stringIDToTypeID( "lineJoin" );                    var idmiterJoin = stringIDToTypeID( "miterJoin" );                    desc1905.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );                    var idlineWidth = stringIDToTypeID( "lineWidth" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1905.putUnitDouble( idlineWidth, idPnt, 0.057600 );                    var idmiterLimit = stringIDToTypeID( "miterLimit" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1905.putUnitDouble( idmiterLimit, idPnt, 0.230400 );                    var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );                    desc1905.putDouble( idlineDashoffset, 0.000000 );                var idTxtS = charIDToTypeID( "TxtS" );                desc1904.putObject( idTxtS, idTxtS, desc1905 );            var idTxtt = charIDToTypeID( "Txtt" );            list104.putObject( idTxtt, desc1904 );        desc1795.putList( idTxtt, list104 );        var idparagraphStyleRange = stringIDToTypeID( "paragraphStyleRange" );            var list105 = new ActionList();                var desc1908 = new ActionDescriptor();                var idFrom = charIDToTypeID( "From" );                desc1908.putInteger( idFrom, 0 );                var idT = charIDToTypeID( "T   " );                desc1908.putInteger( idT, 256 );                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );                    var desc1909 = new ActionDescriptor();                    var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );                    desc1909.putBoolean( idstyleSheetHasParent, true );                    var idAlgn = charIDToTypeID( "Algn" );                    var idAlg = charIDToTypeID( "Alg " );                    var idjustifyLeft = stringIDToTypeID( "justifyLeft" );                    desc1909.putEnumerated( idAlgn, idAlg, idjustifyLeft );                    var idfirstLineIndent = stringIDToTypeID( "firstLineIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1909.putUnitDouble( idfirstLineIndent, idPnt, 23.828448 );                    var idstartIndent = stringIDToTypeID( "startIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1909.putUnitDouble( idstartIndent, idPnt, 0.000000 );                    var idendIndent = stringIDToTypeID( "endIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1909.putUnitDouble( idendIndent, idPnt, 0.000000 );                    var idspaceBefore = stringIDToTypeID( "spaceBefore" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1909.putUnitDouble( idspaceBefore, idPnt, 0.150494 );                    var idspaceAfter = stringIDToTypeID( "spaceAfter" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1909.putUnitDouble( idspaceAfter, idPnt, 0.000000 );                    var iddropCapMultiplier = stringIDToTypeID( "dropCapMultiplier" );                    desc1909.putInteger( iddropCapMultiplier, 1 );                    var idautoLeadingPercentage = stringIDToTypeID( "autoLeadingPercentage" );                    desc1909.putDouble( idautoLeadingPercentage, 1.750000 );                    var idleadingType = stringIDToTypeID( "leadingType" );                    var idleadingType = stringIDToTypeID( "leadingType" );                    var idleadingAbove = stringIDToTypeID( "leadingAbove" );                    desc1909.putEnumerated( idleadingType, idleadingType, idleadingAbove );                    var idhyphenate = stringIDToTypeID( "hyphenate" );                    desc1909.putBoolean( idhyphenate, true );                    var idhyphenateWordSize = stringIDToTypeID( "hyphenateWordSize" );                    desc1909.putInteger( idhyphenateWordSize, 6 );                    var idhyphenatePreLength = stringIDToTypeID( "hyphenatePreLength" );                    desc1909.putInteger( idhyphenatePreLength, 2 );                    var idhyphenatePostLength = stringIDToTypeID( "hyphenatePostLength" );                    desc1909.putInteger( idhyphenatePostLength, 2 );                    var idhyphenateLimit = stringIDToTypeID( "hyphenateLimit" );                    desc1909.putInteger( idhyphenateLimit, 0 );                    var idhyphenationZone = stringIDToTypeID( "hyphenationZone" );                    desc1909.putDouble( idhyphenationZone, 36.000000 );                    var idhyphenateCapitalized = stringIDToTypeID( "hyphenateCapitalized" );                    desc1909.putBoolean( idhyphenateCapitalized, true );                    var idhyphenationPreference = stringIDToTypeID( "hyphenationPreference" );                    desc1909.putDouble( idhyphenationPreference, 0.500000 );                    var idjustificationWordMinimum = stringIDToTypeID( "justificationWordMinimum" );                    desc1909.putDouble( idjustificationWordMinimum, 0.800000 );                    var idjustificationWordDesired = stringIDToTypeID( "justificationWordDesired" );                    desc1909.putDouble( idjustificationWordDesired, 1.000000 );                    var idjustificationWordMaximum = stringIDToTypeID( "justificationWordMaximum" );                    desc1909.putDouble( idjustificationWordMaximum, 1.330000 );                    var idjustificationLetterMinimum = stringIDToTypeID( "justificationLetterMinimum" );                    desc1909.putDouble( idjustificationLetterMinimum, 0.000000 );                    var idjustificationLetterDesired = stringIDToTypeID( "justificationLetterDesired" );                    desc1909.putDouble( idjustificationLetterDesired, 0.000000 );                    var idjustificationLetterMaximum = stringIDToTypeID( "justificationLetterMaximum" );                    desc1909.putDouble( idjustificationLetterMaximum, 0.000000 );                    var idjustificationGlyphMinimum = stringIDToTypeID( "justificationGlyphMinimum" );                    desc1909.putDouble( idjustificationGlyphMinimum, 1.000000 );                    var idjustificationGlyphDesired = stringIDToTypeID( "justificationGlyphDesired" );                    desc1909.putDouble( idjustificationGlyphDesired, 1.000000 );                    var idjustificationGlyphMaximum = stringIDToTypeID( "justificationGlyphMaximum" );                    desc1909.putDouble( idjustificationGlyphMaximum, 1.000000 );                    var idsingleWordJustification = stringIDToTypeID( "singleWordJustification" );                    var idAlg = charIDToTypeID( "Alg " );                    var idJstA = charIDToTypeID( "JstA" );                    desc1909.putEnumerated( idsingleWordJustification, idAlg, idJstA );                    var idhangingRoman = stringIDToTypeID( "hangingRoman" );                    desc1909.putBoolean( idhangingRoman, false );                    var idautoTCY = stringIDToTypeID( "autoTCY" );                    desc1909.putInteger( idautoTCY, 1 );                    var idkeepTogether = stringIDToTypeID( "keepTogether" );                    desc1909.putBoolean( idkeepTogether, true );                    var idburasagari = stringIDToTypeID( "burasagari" );                    var idburasagari = stringIDToTypeID( "burasagari" );                    var idburasagariNone = stringIDToTypeID( "burasagariNone" );                    desc1909.putEnumerated( idburasagari, idburasagari, idburasagariNone );                    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );                    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );                    var idpushIn = stringIDToTypeID( "pushIn" );                    desc1909.putEnumerated( idpreferredKinsokuOrder, idpreferredKinsokuOrder, idpushIn );                    var idkurikaeshiMojiShori = stringIDToTypeID( "kurikaeshiMojiShori" );                    desc1909.putBoolean( idkurikaeshiMojiShori, false );                    var idkinsokuSetName = stringIDToTypeID( "kinsokuSetName" );                    var idkinsokuSetName = stringIDToTypeID( "kinsokuSetName" );                    var idSoft = stringIDToTypeID( "Soft" );                    desc1909.putEnumerated( idkinsokuSetName, idkinsokuSetName, idSoft );                    var idmojiKumiName = stringIDToTypeID( "mojiKumiName" );                    var idmojiKumiName = stringIDToTypeID( "mojiKumiName" );                    var idPhotoshopsixMojiKumiSetone = stringIDToTypeID( "Photoshop6MojiKumiSet1" );                    desc1909.putEnumerated( idmojiKumiName, idmojiKumiName, idPhotoshopsixMojiKumiSetone );                    var idtextEveryLineComposer = stringIDToTypeID( "textEveryLineComposer" );                    desc1909.putBoolean( idtextEveryLineComposer, false );                    var iddefaultTabWidth = stringIDToTypeID( "defaultTabWidth" );                    desc1909.putDouble( iddefaultTabWidth, 36.000000 );                    var iddefaultStyle = stringIDToTypeID( "defaultStyle" );                        var desc1910 = new ActionDescriptor();                        var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );                        desc1910.putString( idfontPostScriptName, """FZBWKSJW--GB1-0""" );                        var idFntN = charIDToTypeID( "FntN" );                        desc1910.putString( idFntN, """FZBWKSJW""" );                        var idFntS = charIDToTypeID( "FntS" );                        desc1910.putString( idFntS, """-GB1-0""" );                        var idScrp = charIDToTypeID( "Scrp" );                        desc1910.putInteger( idScrp, 25 );                        var idFntT = charIDToTypeID( "FntT" );                        desc1910.putInteger( idFntT, 2 );                        var idSz = charIDToTypeID( "Sz  " );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1910.putUnitDouble( idSz, idPnt, 2.880000 );                        var idHrzS = charIDToTypeID( "HrzS" );                        desc1910.putDouble( idHrzS, 100.000000 );                        var idVrtS = charIDToTypeID( "VrtS" );                        desc1910.putDouble( idVrtS, 100.000000 );                        var idsyntheticBold = stringIDToTypeID( "syntheticBold" );                        desc1910.putBoolean( idsyntheticBold, false );                        var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );                        desc1910.putBoolean( idsyntheticItalic, false );                        var idautoLeading = stringIDToTypeID( "autoLeading" );                        desc1910.putBoolean( idautoLeading, true );                        var idTrck = charIDToTypeID( "Trck" );                        desc1910.putInteger( idTrck, 0 );                        var idBsln = charIDToTypeID( "Bsln" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1910.putUnitDouble( idBsln, idPnt, 0.000000 );                        var idcharacterRotation = stringIDToTypeID( "characterRotation" );                        desc1910.putDouble( idcharacterRotation, 0.000000 );                        var idfontCaps = stringIDToTypeID( "fontCaps" );                        var idfontCaps = stringIDToTypeID( "fontCaps" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1910.putEnumerated( idfontCaps, idfontCaps, idNrml );                        var idbaseline = stringIDToTypeID( "baseline" );                        var idbaseline = stringIDToTypeID( "baseline" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1910.putEnumerated( idbaseline, idbaseline, idNrml );                        var idotbaseline = stringIDToTypeID( "otbaseline" );                        var idotbaseline = stringIDToTypeID( "otbaseline" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1910.putEnumerated( idotbaseline, idotbaseline, idNrml );                        var idstrikethrough = stringIDToTypeID( "strikethrough" );                        var idstrikethrough = stringIDToTypeID( "strikethrough" );                        var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );                        desc1910.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );                        var idUndl = charIDToTypeID( "Undl" );                        var idUndl = charIDToTypeID( "Undl" );                        var idunderlineOff = stringIDToTypeID( "underlineOff" );                        desc1910.putEnumerated( idUndl, idUndl, idunderlineOff );                        var idunderlineOffset = stringIDToTypeID( "underlineOffset" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1910.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );                        var idligature = stringIDToTypeID( "ligature" );                        desc1910.putBoolean( idligature, true );                        var idaltligature = stringIDToTypeID( "altligature" );                        desc1910.putBoolean( idaltligature, false );                        var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );                        desc1910.putBoolean( idcontextualLigatures, false );                        var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );                        desc1910.putBoolean( idalternateLigatures, false );                        var idoldStyle = stringIDToTypeID( "oldStyle" );                        desc1910.putBoolean( idoldStyle, false );                        var idfractions = stringIDToTypeID( "fractions" );                        desc1910.putBoolean( idfractions, false );                        var idordinals = stringIDToTypeID( "ordinals" );                        desc1910.putBoolean( idordinals, false );                        var idswash = stringIDToTypeID( "swash" );                        desc1910.putBoolean( idswash, false );                        var idtitling = stringIDToTypeID( "titling" );                        desc1910.putBoolean( idtitling, false );                        var idconnectionForms = stringIDToTypeID( "connectionForms" );                        desc1910.putBoolean( idconnectionForms, false );                        var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );                        desc1910.putBoolean( idstylisticAlternates, false );                        var idornaments = stringIDToTypeID( "ornaments" );                        desc1910.putBoolean( idornaments, false );                        var idfigureStyle = stringIDToTypeID( "figureStyle" );                        var idfigureStyle = stringIDToTypeID( "figureStyle" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1910.putEnumerated( idfigureStyle, idfigureStyle, idNrml );                        var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );                        desc1910.putBoolean( idproportionalMetrics, false );                        var idkana = stringIDToTypeID( "kana" );                        desc1910.putBoolean( idkana, false );                        var iditalics = stringIDToTypeID( "italics" );                        desc1910.putBoolean( iditalics, false );                        var idruby = stringIDToTypeID( "ruby" );                        desc1910.putBoolean( idruby, false );                        var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                        var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                        var idrotated = stringIDToTypeID( "rotated" );                        desc1910.putEnumerated( idbaselineDirection, idbaselineDirection, idrotated );                        var idtextLanguage = stringIDToTypeID( "textLanguage" );                        var idtextLanguage = stringIDToTypeID( "textLanguage" );                        var idenglishLanguage = stringIDToTypeID( "englishLanguage" );                        desc1910.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );                        var idmojiZume = stringIDToTypeID( "mojiZume" );                        desc1910.putDouble( idmojiZume, 0.000000 );                        var idgridAlignment = stringIDToTypeID( "gridAlignment" );                        var idgridAlignment = stringIDToTypeID( "gridAlignment" );                        var idroman = stringIDToTypeID( "roman" );                        desc1910.putEnumerated( idgridAlignment, idgridAlignment, idroman );                        var idenableWariChu = stringIDToTypeID( "enableWariChu" );                        desc1910.putBoolean( idenableWariChu, false );                        var idwariChuCount = stringIDToTypeID( "wariChuCount" );                        desc1910.putInteger( idwariChuCount, 2 );                        var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );                        desc1910.putInteger( idwariChuLineGap, 0 );                        var idwariChuScale = stringIDToTypeID( "wariChuScale" );                        desc1910.putDouble( idwariChuScale, 0.500000 );                        var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );                        desc1910.putInteger( idwariChuWidow, 2 );                        var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );                        desc1910.putInteger( idwariChuOrphan, 2 );                        var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                        var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                        var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );                        desc1910.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );                        var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );                        desc1910.putInteger( idtcyUpDown, 0 );                        var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );                        desc1910.putInteger( idtcyLeftRight, 0 );                        var idleftAki = stringIDToTypeID( "leftAki" );                        desc1910.putDouble( idleftAki, -1.000000 );                        var idrightAki = stringIDToTypeID( "rightAki" );                        desc1910.putDouble( idrightAki, -1.000000 );                        var idjiDori = stringIDToTypeID( "jiDori" );                        desc1910.putInteger( idjiDori, 0 );                        var idnoBreak = stringIDToTypeID( "noBreak" );                        desc1910.putBoolean( idnoBreak, false );                        var idClr = charIDToTypeID( "Clr " );                            var desc1911 = new ActionDescriptor();                            var idCyn = charIDToTypeID( "Cyn " );                            desc1911.putDouble( idCyn, 74.520000 );                            var idMgnt = charIDToTypeID( "Mgnt" );                            desc1911.putDouble( idMgnt, 67.780000 );                            var idYlw = charIDToTypeID( "Ylw " );                            desc1911.putDouble( idYlw, 67.130000 );                            var idBlck = charIDToTypeID( "Blck" );                            desc1911.putDouble( idBlck, 89.630000 );                        var idCMYC = charIDToTypeID( "CMYC" );                        desc1910.putObject( idClr, idCMYC, desc1911 );                        var idstrokeColor = stringIDToTypeID( "strokeColor" );                            var desc1912 = new ActionDescriptor();                            var idCyn = charIDToTypeID( "Cyn " );                            desc1912.putDouble( idCyn, 74.520000 );                            var idMgnt = charIDToTypeID( "Mgnt" );                            desc1912.putDouble( idMgnt, 67.780000 );                            var idYlw = charIDToTypeID( "Ylw " );                            desc1912.putDouble( idYlw, 67.130000 );                            var idBlck = charIDToTypeID( "Blck" );                            desc1912.putDouble( idBlck, 89.630000 );                        var idCMYC = charIDToTypeID( "CMYC" );                        desc1910.putObject( idstrokeColor, idCMYC, desc1912 );                        var idFl = charIDToTypeID( "Fl  " );                        desc1910.putBoolean( idFl, true );                        var idStrk = charIDToTypeID( "Strk" );                        desc1910.putBoolean( idStrk, false );                        var idfillFirst = stringIDToTypeID( "fillFirst" );                        desc1910.putBoolean( idfillFirst, true );                        var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );                        desc1910.putBoolean( idfillOverPrint, false );                        var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );                        desc1910.putBoolean( idstrokeOverPrint, false );                        var idlineCap = stringIDToTypeID( "lineCap" );                        var idlineCap = stringIDToTypeID( "lineCap" );                        var idbuttCap = stringIDToTypeID( "buttCap" );                        desc1910.putEnumerated( idlineCap, idlineCap, idbuttCap );                        var idlineJoin = stringIDToTypeID( "lineJoin" );                        var idlineJoin = stringIDToTypeID( "lineJoin" );                        var idmiterJoin = stringIDToTypeID( "miterJoin" );                        desc1910.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );                        var idlineWidth = stringIDToTypeID( "lineWidth" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1910.putUnitDouble( idlineWidth, idPnt, 0.240000 );                        var idmiterLimit = stringIDToTypeID( "miterLimit" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1910.putUnitDouble( idmiterLimit, idPnt, 0.960000 );                        var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );                        desc1910.putDouble( idlineDashoffset, 0.000000 );                    var idTxtS = charIDToTypeID( "TxtS" );                    desc1909.putObject( iddefaultStyle, idTxtS, desc1910 );                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );                desc1908.putObject( idparagraphStyle, idparagraphStyle, desc1909 );            var idparagraphStyleRange = stringIDToTypeID( "paragraphStyleRange" );            list105.putObject( idparagraphStyleRange, desc1908 );                var desc1913 = new ActionDescriptor();                var idFrom = charIDToTypeID( "From" );                desc1913.putInteger( idFrom, 256 );                var idT = charIDToTypeID( "T   " );                desc1913.putInteger( idT, 512 );                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );                    var desc1914 = new ActionDescriptor();                    var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );                    desc1914.putBoolean( idstyleSheetHasParent, true );                    var idAlgn = charIDToTypeID( "Algn" );                    var idAlg = charIDToTypeID( "Alg " );                    var idjustifyLeft = stringIDToTypeID( "justifyLeft" );                    desc1914.putEnumerated( idAlgn, idAlg, idjustifyLeft );                    var idfirstLineIndent = stringIDToTypeID( "firstLineIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1914.putUnitDouble( idfirstLineIndent, idPnt, 23.828448 );                    var idstartIndent = stringIDToTypeID( "startIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1914.putUnitDouble( idstartIndent, idPnt, 0.000000 );                    var idendIndent = stringIDToTypeID( "endIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1914.putUnitDouble( idendIndent, idPnt, 0.000000 );                    var idspaceBefore = stringIDToTypeID( "spaceBefore" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1914.putUnitDouble( idspaceBefore, idPnt, 0.150494 );                    var idspaceAfter = stringIDToTypeID( "spaceAfter" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1914.putUnitDouble( idspaceAfter, idPnt, 0.000000 );                    var iddropCapMultiplier = stringIDToTypeID( "dropCapMultiplier" );                    desc1914.putInteger( iddropCapMultiplier, 1 );                    var idautoLeadingPercentage = stringIDToTypeID( "autoLeadingPercentage" );                    desc1914.putDouble( idautoLeadingPercentage, 1.750000 );                    var idleadingType = stringIDToTypeID( "leadingType" );                    var idleadingType = stringIDToTypeID( "leadingType" );                    var idleadingAbove = stringIDToTypeID( "leadingAbove" );                    desc1914.putEnumerated( idleadingType, idleadingType, idleadingAbove );                    var idhyphenate = stringIDToTypeID( "hyphenate" );                    desc1914.putBoolean( idhyphenate, true );                    var idhyphenateWordSize = stringIDToTypeID( "hyphenateWordSize" );                    desc1914.putInteger( idhyphenateWordSize, 6 );                    var idhyphenatePreLength = stringIDToTypeID( "hyphenatePreLength" );                    desc1914.putInteger( idhyphenatePreLength, 2 );                    var idhyphenatePostLength = stringIDToTypeID( "hyphenatePostLength" );                    desc1914.putInteger( idhyphenatePostLength, 2 );                    var idhyphenateLimit = stringIDToTypeID( "hyphenateLimit" );                    desc1914.putInteger( idhyphenateLimit, 0 );                    var idhyphenationZone = stringIDToTypeID( "hyphenationZone" );                    desc1914.putDouble( idhyphenationZone, 36.000000 );                    var idhyphenateCapitalized = stringIDToTypeID( "hyphenateCapitalized" );                    desc1914.putBoolean( idhyphenateCapitalized, true );                    var idhyphenationPreference = stringIDToTypeID( "hyphenationPreference" );                    desc1914.putDouble( idhyphenationPreference, 0.500000 );                    var idjustificationWordMinimum = stringIDToTypeID( "justificationWordMinimum" );                    desc1914.putDouble( idjustificationWordMinimum, 0.800000 );                    var idjustificationWordDesired = stringIDToTypeID( "justificationWordDesired" );                    desc1914.putDouble( idjustificationWordDesired, 1.000000 );                    var idjustificationWordMaximum = stringIDToTypeID( "justificationWordMaximum" );                    desc1914.putDouble( idjustificationWordMaximum, 1.330000 );                    var idjustificationLetterMinimum = stringIDToTypeID( "justificationLetterMinimum" );                    desc1914.putDouble( idjustificationLetterMinimum, 0.000000 );                    var idjustificationLetterDesired = stringIDToTypeID( "justificationLetterDesired" );                    desc1914.putDouble( idjustificationLetterDesired, 0.000000 );                    var idjustificationLetterMaximum = stringIDToTypeID( "justificationLetterMaximum" );                    desc1914.putDouble( idjustificationLetterMaximum, 0.000000 );                    var idjustificationGlyphMinimum = stringIDToTypeID( "justificationGlyphMinimum" );                    desc1914.putDouble( idjustificationGlyphMinimum, 1.000000 );                    var idjustificationGlyphDesired = stringIDToTypeID( "justificationGlyphDesired" );                    desc1914.putDouble( idjustificationGlyphDesired, 1.000000 );                    var idjustificationGlyphMaximum = stringIDToTypeID( "justificationGlyphMaximum" );                    desc1914.putDouble( idjustificationGlyphMaximum, 1.000000 );                    var idsingleWordJustification = stringIDToTypeID( "singleWordJustification" );                    var idAlg = charIDToTypeID( "Alg " );                    var idJstA = charIDToTypeID( "JstA" );                    desc1914.putEnumerated( idsingleWordJustification, idAlg, idJstA );                    var idhangingRoman = stringIDToTypeID( "hangingRoman" );                    desc1914.putBoolean( idhangingRoman, false );                    var idautoTCY = stringIDToTypeID( "autoTCY" );                    desc1914.putInteger( idautoTCY, 1 );                    var idkeepTogether = stringIDToTypeID( "keepTogether" );                    desc1914.putBoolean( idkeepTogether, true );                    var idburasagari = stringIDToTypeID( "burasagari" );                    var idburasagari = stringIDToTypeID( "burasagari" );                    var idburasagariNone = stringIDToTypeID( "burasagariNone" );                    desc1914.putEnumerated( idburasagari, idburasagari, idburasagariNone );                    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );                    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );                    var idpushIn = stringIDToTypeID( "pushIn" );                    desc1914.putEnumerated( idpreferredKinsokuOrder, idpreferredKinsokuOrder, idpushIn );                    var idkurikaeshiMojiShori = stringIDToTypeID( "kurikaeshiMojiShori" );                    desc1914.putBoolean( idkurikaeshiMojiShori, false );                    var idkinsokuSetName = stringIDToTypeID( "kinsokuSetName" );                    var idkinsokuSetName = stringIDToTypeID( "kinsokuSetName" );                    var idSoft = stringIDToTypeID( "Soft" );                    desc1914.putEnumerated( idkinsokuSetName, idkinsokuSetName, idSoft );                    var idmojiKumiName = stringIDToTypeID( "mojiKumiName" );                    var idmojiKumiName = stringIDToTypeID( "mojiKumiName" );                    var idPhotoshopsixMojiKumiSetone = stringIDToTypeID( "Photoshop6MojiKumiSet1" );                    desc1914.putEnumerated( idmojiKumiName, idmojiKumiName, idPhotoshopsixMojiKumiSetone );                    var idtextEveryLineComposer = stringIDToTypeID( "textEveryLineComposer" );                    desc1914.putBoolean( idtextEveryLineComposer, false );                    var iddefaultTabWidth = stringIDToTypeID( "defaultTabWidth" );                    desc1914.putDouble( iddefaultTabWidth, 36.000000 );                    var iddefaultStyle = stringIDToTypeID( "defaultStyle" );                        var desc1915 = new ActionDescriptor();                        var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );                        desc1915.putString( idfontPostScriptName, """FZBWKSJW--GB1-0""" );                        var idFntN = charIDToTypeID( "FntN" );                        desc1915.putString( idFntN, """FZBWKSJW""" );                        var idFntS = charIDToTypeID( "FntS" );                        desc1915.putString( idFntS, """-GB1-0""" );                        var idScrp = charIDToTypeID( "Scrp" );                        desc1915.putInteger( idScrp, 25 );                        var idFntT = charIDToTypeID( "FntT" );                        desc1915.putInteger( idFntT, 2 );                        var idSz = charIDToTypeID( "Sz  " );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1915.putUnitDouble( idSz, idPnt, 2.880000 );                        var idHrzS = charIDToTypeID( "HrzS" );                        desc1915.putDouble( idHrzS, 100.000000 );                        var idVrtS = charIDToTypeID( "VrtS" );                        desc1915.putDouble( idVrtS, 100.000000 );                        var idsyntheticBold = stringIDToTypeID( "syntheticBold" );                        desc1915.putBoolean( idsyntheticBold, false );                        var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );                        desc1915.putBoolean( idsyntheticItalic, false );                        var idautoLeading = stringIDToTypeID( "autoLeading" );                        desc1915.putBoolean( idautoLeading, true );                        var idTrck = charIDToTypeID( "Trck" );                        desc1915.putInteger( idTrck, 0 );                        var idBsln = charIDToTypeID( "Bsln" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1915.putUnitDouble( idBsln, idPnt, 0.000000 );                        var idcharacterRotation = stringIDToTypeID( "characterRotation" );                        desc1915.putDouble( idcharacterRotation, 0.000000 );                        var idfontCaps = stringIDToTypeID( "fontCaps" );                        var idfontCaps = stringIDToTypeID( "fontCaps" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1915.putEnumerated( idfontCaps, idfontCaps, idNrml );                        var idbaseline = stringIDToTypeID( "baseline" );                        var idbaseline = stringIDToTypeID( "baseline" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1915.putEnumerated( idbaseline, idbaseline, idNrml );                        var idotbaseline = stringIDToTypeID( "otbaseline" );                        var idotbaseline = stringIDToTypeID( "otbaseline" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1915.putEnumerated( idotbaseline, idotbaseline, idNrml );                        var idstrikethrough = stringIDToTypeID( "strikethrough" );                        var idstrikethrough = stringIDToTypeID( "strikethrough" );                        var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );                        desc1915.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );                        var idUndl = charIDToTypeID( "Undl" );                        var idUndl = charIDToTypeID( "Undl" );                        var idunderlineOff = stringIDToTypeID( "underlineOff" );                        desc1915.putEnumerated( idUndl, idUndl, idunderlineOff );                        var idunderlineOffset = stringIDToTypeID( "underlineOffset" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1915.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );                        var idligature = stringIDToTypeID( "ligature" );                        desc1915.putBoolean( idligature, true );                        var idaltligature = stringIDToTypeID( "altligature" );                        desc1915.putBoolean( idaltligature, false );                        var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );                        desc1915.putBoolean( idcontextualLigatures, false );                        var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );                        desc1915.putBoolean( idalternateLigatures, false );                        var idoldStyle = stringIDToTypeID( "oldStyle" );                        desc1915.putBoolean( idoldStyle, false );                        var idfractions = stringIDToTypeID( "fractions" );                        desc1915.putBoolean( idfractions, false );                        var idordinals = stringIDToTypeID( "ordinals" );                        desc1915.putBoolean( idordinals, false );                        var idswash = stringIDToTypeID( "swash" );                        desc1915.putBoolean( idswash, false );                        var idtitling = stringIDToTypeID( "titling" );                        desc1915.putBoolean( idtitling, false );                        var idconnectionForms = stringIDToTypeID( "connectionForms" );                        desc1915.putBoolean( idconnectionForms, false );                        var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );                        desc1915.putBoolean( idstylisticAlternates, false );                        var idornaments = stringIDToTypeID( "ornaments" );                        desc1915.putBoolean( idornaments, false );                        var idfigureStyle = stringIDToTypeID( "figureStyle" );                        var idfigureStyle = stringIDToTypeID( "figureStyle" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1915.putEnumerated( idfigureStyle, idfigureStyle, idNrml );                        var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );                        desc1915.putBoolean( idproportionalMetrics, false );                        var idkana = stringIDToTypeID( "kana" );                        desc1915.putBoolean( idkana, false );                        var iditalics = stringIDToTypeID( "italics" );                        desc1915.putBoolean( iditalics, false );                        var idruby = stringIDToTypeID( "ruby" );                        desc1915.putBoolean( idruby, false );                        var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                        var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                        var idrotated = stringIDToTypeID( "rotated" );                        desc1915.putEnumerated( idbaselineDirection, idbaselineDirection, idrotated );                        var idtextLanguage = stringIDToTypeID( "textLanguage" );                        var idtextLanguage = stringIDToTypeID( "textLanguage" );                        var idenglishLanguage = stringIDToTypeID( "englishLanguage" );                        desc1915.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );                        var idmojiZume = stringIDToTypeID( "mojiZume" );                        desc1915.putDouble( idmojiZume, 0.000000 );                        var idgridAlignment = stringIDToTypeID( "gridAlignment" );                        var idgridAlignment = stringIDToTypeID( "gridAlignment" );                        var idroman = stringIDToTypeID( "roman" );                        desc1915.putEnumerated( idgridAlignment, idgridAlignment, idroman );                        var idenableWariChu = stringIDToTypeID( "enableWariChu" );                        desc1915.putBoolean( idenableWariChu, false );                        var idwariChuCount = stringIDToTypeID( "wariChuCount" );                        desc1915.putInteger( idwariChuCount, 2 );                        var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );                        desc1915.putInteger( idwariChuLineGap, 0 );                        var idwariChuScale = stringIDToTypeID( "wariChuScale" );                        desc1915.putDouble( idwariChuScale, 0.500000 );                        var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );                        desc1915.putInteger( idwariChuWidow, 2 );                        var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );                        desc1915.putInteger( idwariChuOrphan, 2 );                        var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                        var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                        var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );                        desc1915.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );                        var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );                        desc1915.putInteger( idtcyUpDown, 0 );                        var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );                        desc1915.putInteger( idtcyLeftRight, 0 );                        var idleftAki = stringIDToTypeID( "leftAki" );                        desc1915.putDouble( idleftAki, -1.000000 );                        var idrightAki = stringIDToTypeID( "rightAki" );                        desc1915.putDouble( idrightAki, -1.000000 );                        var idjiDori = stringIDToTypeID( "jiDori" );                        desc1915.putInteger( idjiDori, 0 );                        var idnoBreak = stringIDToTypeID( "noBreak" );                        desc1915.putBoolean( idnoBreak, false );                        var idClr = charIDToTypeID( "Clr " );                            var desc1916 = new ActionDescriptor();                            var idCyn = charIDToTypeID( "Cyn " );                            desc1916.putDouble( idCyn, 74.520000 );                            var idMgnt = charIDToTypeID( "Mgnt" );                            desc1916.putDouble( idMgnt, 67.780000 );                            var idYlw = charIDToTypeID( "Ylw " );                            desc1916.putDouble( idYlw, 67.130000 );                            var idBlck = charIDToTypeID( "Blck" );                            desc1916.putDouble( idBlck, 89.630000 );                        var idCMYC = charIDToTypeID( "CMYC" );                        desc1915.putObject( idClr, idCMYC, desc1916 );                        var idstrokeColor = stringIDToTypeID( "strokeColor" );                            var desc1917 = new ActionDescriptor();                            var idCyn = charIDToTypeID( "Cyn " );                            desc1917.putDouble( idCyn, 74.520000 );                            var idMgnt = charIDToTypeID( "Mgnt" );                            desc1917.putDouble( idMgnt, 67.780000 );                            var idYlw = charIDToTypeID( "Ylw " );                            desc1917.putDouble( idYlw, 67.130000 );                            var idBlck = charIDToTypeID( "Blck" );                            desc1917.putDouble( idBlck, 89.630000 );                        var idCMYC = charIDToTypeID( "CMYC" );                        desc1915.putObject( idstrokeColor, idCMYC, desc1917 );                        var idFl = charIDToTypeID( "Fl  " );                        desc1915.putBoolean( idFl, true );                        var idStrk = charIDToTypeID( "Strk" );                        desc1915.putBoolean( idStrk, false );                        var idfillFirst = stringIDToTypeID( "fillFirst" );                        desc1915.putBoolean( idfillFirst, true );                        var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );                        desc1915.putBoolean( idfillOverPrint, false );                        var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );                        desc1915.putBoolean( idstrokeOverPrint, false );                        var idlineCap = stringIDToTypeID( "lineCap" );                        var idlineCap = stringIDToTypeID( "lineCap" );                        var idbuttCap = stringIDToTypeID( "buttCap" );                        desc1915.putEnumerated( idlineCap, idlineCap, idbuttCap );                        var idlineJoin = stringIDToTypeID( "lineJoin" );                        var idlineJoin = stringIDToTypeID( "lineJoin" );                        var idmiterJoin = stringIDToTypeID( "miterJoin" );                        desc1915.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );                        var idlineWidth = stringIDToTypeID( "lineWidth" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1915.putUnitDouble( idlineWidth, idPnt, 0.240000 );                        var idmiterLimit = stringIDToTypeID( "miterLimit" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1915.putUnitDouble( idmiterLimit, idPnt, 0.960000 );                        var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );                        desc1915.putDouble( idlineDashoffset, 0.000000 );                    var idTxtS = charIDToTypeID( "TxtS" );                    desc1914.putObject( iddefaultStyle, idTxtS, desc1915 );                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );                desc1913.putObject( idparagraphStyle, idparagraphStyle, desc1914 );            var idparagraphStyleRange = stringIDToTypeID( "paragraphStyleRange" );            list105.putObject( idparagraphStyleRange, desc1913 );                var desc1918 = new ActionDescriptor();                var idFrom = charIDToTypeID( "From" );                desc1918.putInteger( idFrom, 512 );                var idT = charIDToTypeID( "T   " );                desc1918.putInteger( idT, 768 );                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );                    var desc1919 = new ActionDescriptor();                    var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );                    desc1919.putBoolean( idstyleSheetHasParent, true );                    var idAlgn = charIDToTypeID( "Algn" );                    var idAlg = charIDToTypeID( "Alg " );                    var idjustifyLeft = stringIDToTypeID( "justifyLeft" );                    desc1919.putEnumerated( idAlgn, idAlg, idjustifyLeft );                    var idfirstLineIndent = stringIDToTypeID( "firstLineIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1919.putUnitDouble( idfirstLineIndent, idPnt, 23.828448 );                    var idstartIndent = stringIDToTypeID( "startIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1919.putUnitDouble( idstartIndent, idPnt, 0.000000 );                    var idendIndent = stringIDToTypeID( "endIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1919.putUnitDouble( idendIndent, idPnt, 0.000000 );                    var idspaceBefore = stringIDToTypeID( "spaceBefore" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1919.putUnitDouble( idspaceBefore, idPnt, 0.150494 );                    var idspaceAfter = stringIDToTypeID( "spaceAfter" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1919.putUnitDouble( idspaceAfter, idPnt, 0.000000 );                    var iddropCapMultiplier = stringIDToTypeID( "dropCapMultiplier" );                    desc1919.putInteger( iddropCapMultiplier, 1 );                    var idautoLeadingPercentage = stringIDToTypeID( "autoLeadingPercentage" );                    desc1919.putDouble( idautoLeadingPercentage, 1.750000 );                    var idleadingType = stringIDToTypeID( "leadingType" );                    var idleadingType = stringIDToTypeID( "leadingType" );                    var idleadingAbove = stringIDToTypeID( "leadingAbove" );                    desc1919.putEnumerated( idleadingType, idleadingType, idleadingAbove );                    var idhyphenate = stringIDToTypeID( "hyphenate" );                    desc1919.putBoolean( idhyphenate, true );                    var idhyphenateWordSize = stringIDToTypeID( "hyphenateWordSize" );                    desc1919.putInteger( idhyphenateWordSize, 6 );                    var idhyphenatePreLength = stringIDToTypeID( "hyphenatePreLength" );                    desc1919.putInteger( idhyphenatePreLength, 2 );                    var idhyphenatePostLength = stringIDToTypeID( "hyphenatePostLength" );                    desc1919.putInteger( idhyphenatePostLength, 2 );                    var idhyphenateLimit = stringIDToTypeID( "hyphenateLimit" );                    desc1919.putInteger( idhyphenateLimit, 0 );                    var idhyphenationZone = stringIDToTypeID( "hyphenationZone" );                    desc1919.putDouble( idhyphenationZone, 36.000000 );                    var idhyphenateCapitalized = stringIDToTypeID( "hyphenateCapitalized" );                    desc1919.putBoolean( idhyphenateCapitalized, true );                    var idhyphenationPreference = stringIDToTypeID( "hyphenationPreference" );                    desc1919.putDouble( idhyphenationPreference, 0.500000 );                    var idjustificationWordMinimum = stringIDToTypeID( "justificationWordMinimum" );                    desc1919.putDouble( idjustificationWordMinimum, 0.800000 );                    var idjustificationWordDesired = stringIDToTypeID( "justificationWordDesired" );                    desc1919.putDouble( idjustificationWordDesired, 1.000000 );                    var idjustificationWordMaximum = stringIDToTypeID( "justificationWordMaximum" );                    desc1919.putDouble( idjustificationWordMaximum, 1.330000 );                    var idjustificationLetterMinimum = stringIDToTypeID( "justificationLetterMinimum" );                    desc1919.putDouble( idjustificationLetterMinimum, 0.000000 );                    var idjustificationLetterDesired = stringIDToTypeID( "justificationLetterDesired" );                    desc1919.putDouble( idjustificationLetterDesired, 0.000000 );                    var idjustificationLetterMaximum = stringIDToTypeID( "justificationLetterMaximum" );                    desc1919.putDouble( idjustificationLetterMaximum, 0.000000 );                    var idjustificationGlyphMinimum = stringIDToTypeID( "justificationGlyphMinimum" );                    desc1919.putDouble( idjustificationGlyphMinimum, 1.000000 );                    var idjustificationGlyphDesired = stringIDToTypeID( "justificationGlyphDesired" );                    desc1919.putDouble( idjustificationGlyphDesired, 1.000000 );                    var idjustificationGlyphMaximum = stringIDToTypeID( "justificationGlyphMaximum" );                    desc1919.putDouble( idjustificationGlyphMaximum, 1.000000 );                    var idsingleWordJustification = stringIDToTypeID( "singleWordJustification" );                    var idAlg = charIDToTypeID( "Alg " );                    var idJstA = charIDToTypeID( "JstA" );                    desc1919.putEnumerated( idsingleWordJustification, idAlg, idJstA );                    var idhangingRoman = stringIDToTypeID( "hangingRoman" );                    desc1919.putBoolean( idhangingRoman, false );                    var idautoTCY = stringIDToTypeID( "autoTCY" );                    desc1919.putInteger( idautoTCY, 1 );                    var idkeepTogether = stringIDToTypeID( "keepTogether" );                    desc1919.putBoolean( idkeepTogether, true );                    var idburasagari = stringIDToTypeID( "burasagari" );                    var idburasagari = stringIDToTypeID( "burasagari" );                    var idburasagariNone = stringIDToTypeID( "burasagariNone" );                    desc1919.putEnumerated( idburasagari, idburasagari, idburasagariNone );                    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );                    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );                    var idpushIn = stringIDToTypeID( "pushIn" );                    desc1919.putEnumerated( idpreferredKinsokuOrder, idpreferredKinsokuOrder, idpushIn );                    var idkurikaeshiMojiShori = stringIDToTypeID( "kurikaeshiMojiShori" );                    desc1919.putBoolean( idkurikaeshiMojiShori, false );                    var idkinsokuSetName = stringIDToTypeID( "kinsokuSetName" );                    var idkinsokuSetName = stringIDToTypeID( "kinsokuSetName" );                    var idSoft = stringIDToTypeID( "Soft" );                    desc1919.putEnumerated( idkinsokuSetName, idkinsokuSetName, idSoft );                    var idmojiKumiName = stringIDToTypeID( "mojiKumiName" );                    var idmojiKumiName = stringIDToTypeID( "mojiKumiName" );                    var idPhotoshopsixMojiKumiSetone = stringIDToTypeID( "Photoshop6MojiKumiSet1" );                    desc1919.putEnumerated( idmojiKumiName, idmojiKumiName, idPhotoshopsixMojiKumiSetone );                    var idtextEveryLineComposer = stringIDToTypeID( "textEveryLineComposer" );                    desc1919.putBoolean( idtextEveryLineComposer, false );                    var iddefaultTabWidth = stringIDToTypeID( "defaultTabWidth" );                    desc1919.putDouble( iddefaultTabWidth, 36.000000 );                    var iddefaultStyle = stringIDToTypeID( "defaultStyle" );                        var desc1920 = new ActionDescriptor();                        var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );                        desc1920.putString( idfontPostScriptName, """FZBWKSJW--GB1-0""" );                        var idFntN = charIDToTypeID( "FntN" );                        desc1920.putString( idFntN, """FZBWKSJW""" );                        var idFntS = charIDToTypeID( "FntS" );                        desc1920.putString( idFntS, """-GB1-0""" );                        var idScrp = charIDToTypeID( "Scrp" );                        desc1920.putInteger( idScrp, 25 );                        var idFntT = charIDToTypeID( "FntT" );                        desc1920.putInteger( idFntT, 2 );                        var idSz = charIDToTypeID( "Sz  " );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1920.putUnitDouble( idSz, idPnt, 2.880000 );                        var idHrzS = charIDToTypeID( "HrzS" );                        desc1920.putDouble( idHrzS, 100.000000 );                        var idVrtS = charIDToTypeID( "VrtS" );                        desc1920.putDouble( idVrtS, 100.000000 );                        var idsyntheticBold = stringIDToTypeID( "syntheticBold" );                        desc1920.putBoolean( idsyntheticBold, false );                        var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );                        desc1920.putBoolean( idsyntheticItalic, false );                        var idautoLeading = stringIDToTypeID( "autoLeading" );                        desc1920.putBoolean( idautoLeading, true );                        var idTrck = charIDToTypeID( "Trck" );                        desc1920.putInteger( idTrck, 0 );                        var idBsln = charIDToTypeID( "Bsln" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1920.putUnitDouble( idBsln, idPnt, 0.000000 );                        var idcharacterRotation = stringIDToTypeID( "characterRotation" );                        desc1920.putDouble( idcharacterRotation, 0.000000 );                        var idfontCaps = stringIDToTypeID( "fontCaps" );                        var idfontCaps = stringIDToTypeID( "fontCaps" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1920.putEnumerated( idfontCaps, idfontCaps, idNrml );                        var idbaseline = stringIDToTypeID( "baseline" );                        var idbaseline = stringIDToTypeID( "baseline" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1920.putEnumerated( idbaseline, idbaseline, idNrml );                        var idotbaseline = stringIDToTypeID( "otbaseline" );                        var idotbaseline = stringIDToTypeID( "otbaseline" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1920.putEnumerated( idotbaseline, idotbaseline, idNrml );                        var idstrikethrough = stringIDToTypeID( "strikethrough" );                        var idstrikethrough = stringIDToTypeID( "strikethrough" );                        var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );                        desc1920.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );                        var idUndl = charIDToTypeID( "Undl" );                        var idUndl = charIDToTypeID( "Undl" );                        var idunderlineOff = stringIDToTypeID( "underlineOff" );                        desc1920.putEnumerated( idUndl, idUndl, idunderlineOff );                        var idunderlineOffset = stringIDToTypeID( "underlineOffset" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1920.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );                        var idligature = stringIDToTypeID( "ligature" );                        desc1920.putBoolean( idligature, true );                        var idaltligature = stringIDToTypeID( "altligature" );                        desc1920.putBoolean( idaltligature, false );                        var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );                        desc1920.putBoolean( idcontextualLigatures, false );                        var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );                        desc1920.putBoolean( idalternateLigatures, false );                        var idoldStyle = stringIDToTypeID( "oldStyle" );                        desc1920.putBoolean( idoldStyle, false );                        var idfractions = stringIDToTypeID( "fractions" );                        desc1920.putBoolean( idfractions, false );                        var idordinals = stringIDToTypeID( "ordinals" );                        desc1920.putBoolean( idordinals, false );                        var idswash = stringIDToTypeID( "swash" );                        desc1920.putBoolean( idswash, false );                        var idtitling = stringIDToTypeID( "titling" );                        desc1920.putBoolean( idtitling, false );                        var idconnectionForms = stringIDToTypeID( "connectionForms" );                        desc1920.putBoolean( idconnectionForms, false );                        var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );                        desc1920.putBoolean( idstylisticAlternates, false );                        var idornaments = stringIDToTypeID( "ornaments" );                        desc1920.putBoolean( idornaments, false );                        var idfigureStyle = stringIDToTypeID( "figureStyle" );                        var idfigureStyle = stringIDToTypeID( "figureStyle" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1920.putEnumerated( idfigureStyle, idfigureStyle, idNrml );                        var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );                        desc1920.putBoolean( idproportionalMetrics, false );                        var idkana = stringIDToTypeID( "kana" );                        desc1920.putBoolean( idkana, false );                        var iditalics = stringIDToTypeID( "italics" );                        desc1920.putBoolean( iditalics, false );                        var idruby = stringIDToTypeID( "ruby" );                        desc1920.putBoolean( idruby, false );                        var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                        var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                        var idrotated = stringIDToTypeID( "rotated" );                        desc1920.putEnumerated( idbaselineDirection, idbaselineDirection, idrotated );                        var idtextLanguage = stringIDToTypeID( "textLanguage" );                        var idtextLanguage = stringIDToTypeID( "textLanguage" );                        var idenglishLanguage = stringIDToTypeID( "englishLanguage" );                        desc1920.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );                        var idmojiZume = stringIDToTypeID( "mojiZume" );                        desc1920.putDouble( idmojiZume, 0.000000 );                        var idgridAlignment = stringIDToTypeID( "gridAlignment" );                        var idgridAlignment = stringIDToTypeID( "gridAlignment" );                        var idroman = stringIDToTypeID( "roman" );                        desc1920.putEnumerated( idgridAlignment, idgridAlignment, idroman );                        var idenableWariChu = stringIDToTypeID( "enableWariChu" );                        desc1920.putBoolean( idenableWariChu, false );                        var idwariChuCount = stringIDToTypeID( "wariChuCount" );                        desc1920.putInteger( idwariChuCount, 2 );                        var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );                        desc1920.putInteger( idwariChuLineGap, 0 );                        var idwariChuScale = stringIDToTypeID( "wariChuScale" );                        desc1920.putDouble( idwariChuScale, 0.500000 );                        var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );                        desc1920.putInteger( idwariChuWidow, 2 );                        var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );                        desc1920.putInteger( idwariChuOrphan, 2 );                        var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                        var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                        var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );                        desc1920.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );                        var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );                        desc1920.putInteger( idtcyUpDown, 0 );                        var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );                        desc1920.putInteger( idtcyLeftRight, 0 );                        var idleftAki = stringIDToTypeID( "leftAki" );                        desc1920.putDouble( idleftAki, -1.000000 );                        var idrightAki = stringIDToTypeID( "rightAki" );                        desc1920.putDouble( idrightAki, -1.000000 );                        var idjiDori = stringIDToTypeID( "jiDori" );                        desc1920.putInteger( idjiDori, 0 );                        var idnoBreak = stringIDToTypeID( "noBreak" );                        desc1920.putBoolean( idnoBreak, false );                        var idClr = charIDToTypeID( "Clr " );                            var desc1921 = new ActionDescriptor();                            var idCyn = charIDToTypeID( "Cyn " );                            desc1921.putDouble( idCyn, 74.520000 );                            var idMgnt = charIDToTypeID( "Mgnt" );                            desc1921.putDouble( idMgnt, 67.780000 );                            var idYlw = charIDToTypeID( "Ylw " );                            desc1921.putDouble( idYlw, 67.130000 );                            var idBlck = charIDToTypeID( "Blck" );                            desc1921.putDouble( idBlck, 89.630000 );                        var idCMYC = charIDToTypeID( "CMYC" );                        desc1920.putObject( idClr, idCMYC, desc1921 );                        var idstrokeColor = stringIDToTypeID( "strokeColor" );                            var desc1922 = new ActionDescriptor();                            var idCyn = charIDToTypeID( "Cyn " );                            desc1922.putDouble( idCyn, 74.520000 );                            var idMgnt = charIDToTypeID( "Mgnt" );                            desc1922.putDouble( idMgnt, 67.780000 );                            var idYlw = charIDToTypeID( "Ylw " );                            desc1922.putDouble( idYlw, 67.130000 );                            var idBlck = charIDToTypeID( "Blck" );                            desc1922.putDouble( idBlck, 89.630000 );                        var idCMYC = charIDToTypeID( "CMYC" );                        desc1920.putObject( idstrokeColor, idCMYC, desc1922 );                        var idFl = charIDToTypeID( "Fl  " );                        desc1920.putBoolean( idFl, true );                        var idStrk = charIDToTypeID( "Strk" );                        desc1920.putBoolean( idStrk, false );                        var idfillFirst = stringIDToTypeID( "fillFirst" );                        desc1920.putBoolean( idfillFirst, true );                        var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );                        desc1920.putBoolean( idfillOverPrint, false );                        var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );                        desc1920.putBoolean( idstrokeOverPrint, false );                        var idlineCap = stringIDToTypeID( "lineCap" );                        var idlineCap = stringIDToTypeID( "lineCap" );                        var idbuttCap = stringIDToTypeID( "buttCap" );                        desc1920.putEnumerated( idlineCap, idlineCap, idbuttCap );                        var idlineJoin = stringIDToTypeID( "lineJoin" );                        var idlineJoin = stringIDToTypeID( "lineJoin" );                        var idmiterJoin = stringIDToTypeID( "miterJoin" );                        desc1920.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );                        var idlineWidth = stringIDToTypeID( "lineWidth" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1920.putUnitDouble( idlineWidth, idPnt, 0.240000 );                        var idmiterLimit = stringIDToTypeID( "miterLimit" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1920.putUnitDouble( idmiterLimit, idPnt, 0.960000 );                        var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );                        desc1920.putDouble( idlineDashoffset, 0.000000 );                    var idTxtS = charIDToTypeID( "TxtS" );                    desc1919.putObject( iddefaultStyle, idTxtS, desc1920 );                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );                desc1918.putObject( idparagraphStyle, idparagraphStyle, desc1919 );            var idparagraphStyleRange = stringIDToTypeID( "paragraphStyleRange" );            list105.putObject( idparagraphStyleRange, desc1918 );                var desc1923 = new ActionDescriptor();                var idFrom = charIDToTypeID( "From" );                desc1923.putInteger( idFrom, 768 );                var idT = charIDToTypeID( "T   " );                desc1923.putInteger( idT, 1024 );                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );                    var desc1924 = new ActionDescriptor();                    var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );                    desc1924.putBoolean( idstyleSheetHasParent, true );                    var idAlgn = charIDToTypeID( "Algn" );                    var idAlg = charIDToTypeID( "Alg " );                    var idjustifyLeft = stringIDToTypeID( "justifyLeft" );                    desc1924.putEnumerated( idAlgn, idAlg, idjustifyLeft );                    var idfirstLineIndent = stringIDToTypeID( "firstLineIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1924.putUnitDouble( idfirstLineIndent, idPnt, 23.828448 );                    var idstartIndent = stringIDToTypeID( "startIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1924.putUnitDouble( idstartIndent, idPnt, 0.000000 );                    var idendIndent = stringIDToTypeID( "endIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1924.putUnitDouble( idendIndent, idPnt, 0.000000 );                    var idspaceBefore = stringIDToTypeID( "spaceBefore" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1924.putUnitDouble( idspaceBefore, idPnt, 0.150494 );                    var idspaceAfter = stringIDToTypeID( "spaceAfter" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1924.putUnitDouble( idspaceAfter, idPnt, 0.000000 );                    var iddropCapMultiplier = stringIDToTypeID( "dropCapMultiplier" );                    desc1924.putInteger( iddropCapMultiplier, 1 );                    var idautoLeadingPercentage = stringIDToTypeID( "autoLeadingPercentage" );                    desc1924.putDouble( idautoLeadingPercentage, 1.750000 );                    var idleadingType = stringIDToTypeID( "leadingType" );                    var idleadingType = stringIDToTypeID( "leadingType" );                    var idleadingAbove = stringIDToTypeID( "leadingAbove" );                    desc1924.putEnumerated( idleadingType, idleadingType, idleadingAbove );                    var idhyphenate = stringIDToTypeID( "hyphenate" );                    desc1924.putBoolean( idhyphenate, true );                    var idhyphenateWordSize = stringIDToTypeID( "hyphenateWordSize" );                    desc1924.putInteger( idhyphenateWordSize, 6 );                    var idhyphenatePreLength = stringIDToTypeID( "hyphenatePreLength" );                    desc1924.putInteger( idhyphenatePreLength, 2 );                    var idhyphenatePostLength = stringIDToTypeID( "hyphenatePostLength" );                    desc1924.putInteger( idhyphenatePostLength, 2 );                    var idhyphenateLimit = stringIDToTypeID( "hyphenateLimit" );                    desc1924.putInteger( idhyphenateLimit, 0 );                    var idhyphenationZone = stringIDToTypeID( "hyphenationZone" );                    desc1924.putDouble( idhyphenationZone, 36.000000 );                    var idhyphenateCapitalized = stringIDToTypeID( "hyphenateCapitalized" );                    desc1924.putBoolean( idhyphenateCapitalized, true );                    var idhyphenationPreference = stringIDToTypeID( "hyphenationPreference" );                    desc1924.putDouble( idhyphenationPreference, 0.500000 );                    var idjustificationWordMinimum = stringIDToTypeID( "justificationWordMinimum" );                    desc1924.putDouble( idjustificationWordMinimum, 0.800000 );                    var idjustificationWordDesired = stringIDToTypeID( "justificationWordDesired" );                    desc1924.putDouble( idjustificationWordDesired, 1.000000 );                    var idjustificationWordMaximum = stringIDToTypeID( "justificationWordMaximum" );                    desc1924.putDouble( idjustificationWordMaximum, 1.330000 );                    var idjustificationLetterMinimum = stringIDToTypeID( "justificationLetterMinimum" );                    desc1924.putDouble( idjustificationLetterMinimum, 0.000000 );                    var idjustificationLetterDesired = stringIDToTypeID( "justificationLetterDesired" );                    desc1924.putDouble( idjustificationLetterDesired, 0.000000 );                    var idjustificationLetterMaximum = stringIDToTypeID( "justificationLetterMaximum" );                    desc1924.putDouble( idjustificationLetterMaximum, 0.000000 );                    var idjustificationGlyphMinimum = stringIDToTypeID( "justificationGlyphMinimum" );                    desc1924.putDouble( idjustificationGlyphMinimum, 1.000000 );                    var idjustificationGlyphDesired = stringIDToTypeID( "justificationGlyphDesired" );                    desc1924.putDouble( idjustificationGlyphDesired, 1.000000 );                    var idjustificationGlyphMaximum = stringIDToTypeID( "justificationGlyphMaximum" );                    desc1924.putDouble( idjustificationGlyphMaximum, 1.000000 );                    var idsingleWordJustification = stringIDToTypeID( "singleWordJustification" );                    var idAlg = charIDToTypeID( "Alg " );                    var idJstA = charIDToTypeID( "JstA" );                    desc1924.putEnumerated( idsingleWordJustification, idAlg, idJstA );                    var idhangingRoman = stringIDToTypeID( "hangingRoman" );                    desc1924.putBoolean( idhangingRoman, false );                    var idautoTCY = stringIDToTypeID( "autoTCY" );                    desc1924.putInteger( idautoTCY, 1 );                    var idkeepTogether = stringIDToTypeID( "keepTogether" );                    desc1924.putBoolean( idkeepTogether, true );                    var idburasagari = stringIDToTypeID( "burasagari" );                    var idburasagari = stringIDToTypeID( "burasagari" );                    var idburasagariNone = stringIDToTypeID( "burasagariNone" );                    desc1924.putEnumerated( idburasagari, idburasagari, idburasagariNone );                    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );                    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );                    var idpushIn = stringIDToTypeID( "pushIn" );                    desc1924.putEnumerated( idpreferredKinsokuOrder, idpreferredKinsokuOrder, idpushIn );                    var idkurikaeshiMojiShori = stringIDToTypeID( "kurikaeshiMojiShori" );                    desc1924.putBoolean( idkurikaeshiMojiShori, false );                    var idkinsokuSetName = stringIDToTypeID( "kinsokuSetName" );                    var idkinsokuSetName = stringIDToTypeID( "kinsokuSetName" );                    var idSoft = stringIDToTypeID( "Soft" );                    desc1924.putEnumerated( idkinsokuSetName, idkinsokuSetName, idSoft );                    var idmojiKumiName = stringIDToTypeID( "mojiKumiName" );                    var idmojiKumiName = stringIDToTypeID( "mojiKumiName" );                    var idPhotoshopsixMojiKumiSetone = stringIDToTypeID( "Photoshop6MojiKumiSet1" );                    desc1924.putEnumerated( idmojiKumiName, idmojiKumiName, idPhotoshopsixMojiKumiSetone );                    var idtextEveryLineComposer = stringIDToTypeID( "textEveryLineComposer" );                    desc1924.putBoolean( idtextEveryLineComposer, false );                    var iddefaultTabWidth = stringIDToTypeID( "defaultTabWidth" );                    desc1924.putDouble( iddefaultTabWidth, 36.000000 );                    var iddefaultStyle = stringIDToTypeID( "defaultStyle" );                        var desc1925 = new ActionDescriptor();                        var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );                        desc1925.putString( idfontPostScriptName, """FZBWKSJW--GB1-0""" );                        var idFntN = charIDToTypeID( "FntN" );                        desc1925.putString( idFntN, """FZBWKSJW""" );                        var idFntS = charIDToTypeID( "FntS" );                        desc1925.putString( idFntS, """-GB1-0""" );                        var idScrp = charIDToTypeID( "Scrp" );                        desc1925.putInteger( idScrp, 25 );                        var idFntT = charIDToTypeID( "FntT" );                        desc1925.putInteger( idFntT, 2 );                        var idSz = charIDToTypeID( "Sz  " );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1925.putUnitDouble( idSz, idPnt, 2.880000 );                        var idHrzS = charIDToTypeID( "HrzS" );                        desc1925.putDouble( idHrzS, 100.000000 );                        var idVrtS = charIDToTypeID( "VrtS" );                        desc1925.putDouble( idVrtS, 100.000000 );                        var idsyntheticBold = stringIDToTypeID( "syntheticBold" );                        desc1925.putBoolean( idsyntheticBold, false );                        var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );                        desc1925.putBoolean( idsyntheticItalic, false );                        var idautoLeading = stringIDToTypeID( "autoLeading" );                        desc1925.putBoolean( idautoLeading, true );                        var idTrck = charIDToTypeID( "Trck" );                        desc1925.putInteger( idTrck, 0 );                        var idBsln = charIDToTypeID( "Bsln" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1925.putUnitDouble( idBsln, idPnt, 0.000000 );                        var idcharacterRotation = stringIDToTypeID( "characterRotation" );                        desc1925.putDouble( idcharacterRotation, 0.000000 );                        var idfontCaps = stringIDToTypeID( "fontCaps" );                        var idfontCaps = stringIDToTypeID( "fontCaps" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1925.putEnumerated( idfontCaps, idfontCaps, idNrml );                        var idbaseline = stringIDToTypeID( "baseline" );                        var idbaseline = stringIDToTypeID( "baseline" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1925.putEnumerated( idbaseline, idbaseline, idNrml );                        var idotbaseline = stringIDToTypeID( "otbaseline" );                        var idotbaseline = stringIDToTypeID( "otbaseline" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1925.putEnumerated( idotbaseline, idotbaseline, idNrml );                        var idstrikethrough = stringIDToTypeID( "strikethrough" );                        var idstrikethrough = stringIDToTypeID( "strikethrough" );                        var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );                        desc1925.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );                        var idUndl = charIDToTypeID( "Undl" );                        var idUndl = charIDToTypeID( "Undl" );                        var idunderlineOff = stringIDToTypeID( "underlineOff" );                        desc1925.putEnumerated( idUndl, idUndl, idunderlineOff );                        var idunderlineOffset = stringIDToTypeID( "underlineOffset" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1925.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );                        var idligature = stringIDToTypeID( "ligature" );                        desc1925.putBoolean( idligature, true );                        var idaltligature = stringIDToTypeID( "altligature" );                        desc1925.putBoolean( idaltligature, false );                        var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );                        desc1925.putBoolean( idcontextualLigatures, false );                        var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );                        desc1925.putBoolean( idalternateLigatures, false );                        var idoldStyle = stringIDToTypeID( "oldStyle" );                        desc1925.putBoolean( idoldStyle, false );                        var idfractions = stringIDToTypeID( "fractions" );                        desc1925.putBoolean( idfractions, false );                        var idordinals = stringIDToTypeID( "ordinals" );                        desc1925.putBoolean( idordinals, false );                        var idswash = stringIDToTypeID( "swash" );                        desc1925.putBoolean( idswash, false );                        var idtitling = stringIDToTypeID( "titling" );                        desc1925.putBoolean( idtitling, false );                        var idconnectionForms = stringIDToTypeID( "connectionForms" );                        desc1925.putBoolean( idconnectionForms, false );                        var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );                        desc1925.putBoolean( idstylisticAlternates, false );                        var idornaments = stringIDToTypeID( "ornaments" );                        desc1925.putBoolean( idornaments, false );                        var idfigureStyle = stringIDToTypeID( "figureStyle" );                        var idfigureStyle = stringIDToTypeID( "figureStyle" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1925.putEnumerated( idfigureStyle, idfigureStyle, idNrml );                        var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );                        desc1925.putBoolean( idproportionalMetrics, false );                        var idkana = stringIDToTypeID( "kana" );                        desc1925.putBoolean( idkana, false );                        var iditalics = stringIDToTypeID( "italics" );                        desc1925.putBoolean( iditalics, false );                        var idruby = stringIDToTypeID( "ruby" );                        desc1925.putBoolean( idruby, false );                        var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                        var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                        var idrotated = stringIDToTypeID( "rotated" );                        desc1925.putEnumerated( idbaselineDirection, idbaselineDirection, idrotated );                        var idtextLanguage = stringIDToTypeID( "textLanguage" );                        var idtextLanguage = stringIDToTypeID( "textLanguage" );                        var idenglishLanguage = stringIDToTypeID( "englishLanguage" );                        desc1925.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );                        var idmojiZume = stringIDToTypeID( "mojiZume" );                        desc1925.putDouble( idmojiZume, 0.000000 );                        var idgridAlignment = stringIDToTypeID( "gridAlignment" );                        var idgridAlignment = stringIDToTypeID( "gridAlignment" );                        var idroman = stringIDToTypeID( "roman" );                        desc1925.putEnumerated( idgridAlignment, idgridAlignment, idroman );                        var idenableWariChu = stringIDToTypeID( "enableWariChu" );                        desc1925.putBoolean( idenableWariChu, false );                        var idwariChuCount = stringIDToTypeID( "wariChuCount" );                        desc1925.putInteger( idwariChuCount, 2 );                        var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );                        desc1925.putInteger( idwariChuLineGap, 0 );                        var idwariChuScale = stringIDToTypeID( "wariChuScale" );                        desc1925.putDouble( idwariChuScale, 0.500000 );                        var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );                        desc1925.putInteger( idwariChuWidow, 2 );                        var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );                        desc1925.putInteger( idwariChuOrphan, 2 );                        var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                        var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                        var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );                        desc1925.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );                        var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );                        desc1925.putInteger( idtcyUpDown, 0 );                        var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );                        desc1925.putInteger( idtcyLeftRight, 0 );                        var idleftAki = stringIDToTypeID( "leftAki" );                        desc1925.putDouble( idleftAki, -1.000000 );                        var idrightAki = stringIDToTypeID( "rightAki" );                        desc1925.putDouble( idrightAki, -1.000000 );                        var idjiDori = stringIDToTypeID( "jiDori" );                        desc1925.putInteger( idjiDori, 0 );                        var idnoBreak = stringIDToTypeID( "noBreak" );                        desc1925.putBoolean( idnoBreak, false );                        var idClr = charIDToTypeID( "Clr " );                            var desc1926 = new ActionDescriptor();                            var idCyn = charIDToTypeID( "Cyn " );                            desc1926.putDouble( idCyn, 74.520000 );                            var idMgnt = charIDToTypeID( "Mgnt" );                            desc1926.putDouble( idMgnt, 67.780000 );                            var idYlw = charIDToTypeID( "Ylw " );                            desc1926.putDouble( idYlw, 67.130000 );                            var idBlck = charIDToTypeID( "Blck" );                            desc1926.putDouble( idBlck, 89.630000 );                        var idCMYC = charIDToTypeID( "CMYC" );                        desc1925.putObject( idClr, idCMYC, desc1926 );                        var idstrokeColor = stringIDToTypeID( "strokeColor" );                            var desc1927 = new ActionDescriptor();                            var idCyn = charIDToTypeID( "Cyn " );                            desc1927.putDouble( idCyn, 74.520000 );                            var idMgnt = charIDToTypeID( "Mgnt" );                            desc1927.putDouble( idMgnt, 67.780000 );                            var idYlw = charIDToTypeID( "Ylw " );                            desc1927.putDouble( idYlw, 67.130000 );                            var idBlck = charIDToTypeID( "Blck" );                            desc1927.putDouble( idBlck, 89.630000 );                        var idCMYC = charIDToTypeID( "CMYC" );                        desc1925.putObject( idstrokeColor, idCMYC, desc1927 );                        var idFl = charIDToTypeID( "Fl  " );                        desc1925.putBoolean( idFl, true );                        var idStrk = charIDToTypeID( "Strk" );                        desc1925.putBoolean( idStrk, false );                        var idfillFirst = stringIDToTypeID( "fillFirst" );                        desc1925.putBoolean( idfillFirst, true );                        var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );                        desc1925.putBoolean( idfillOverPrint, false );                        var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );                        desc1925.putBoolean( idstrokeOverPrint, false );                        var idlineCap = stringIDToTypeID( "lineCap" );                        var idlineCap = stringIDToTypeID( "lineCap" );                        var idbuttCap = stringIDToTypeID( "buttCap" );                        desc1925.putEnumerated( idlineCap, idlineCap, idbuttCap );                        var idlineJoin = stringIDToTypeID( "lineJoin" );                        var idlineJoin = stringIDToTypeID( "lineJoin" );                        var idmiterJoin = stringIDToTypeID( "miterJoin" );                        desc1925.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );                        var idlineWidth = stringIDToTypeID( "lineWidth" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1925.putUnitDouble( idlineWidth, idPnt, 0.240000 );                        var idmiterLimit = stringIDToTypeID( "miterLimit" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1925.putUnitDouble( idmiterLimit, idPnt, 0.960000 );                        var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );                        desc1925.putDouble( idlineDashoffset, 0.000000 );                    var idTxtS = charIDToTypeID( "TxtS" );                    desc1924.putObject( iddefaultStyle, idTxtS, desc1925 );                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );                desc1923.putObject( idparagraphStyle, idparagraphStyle, desc1924 );            var idparagraphStyleRange = stringIDToTypeID( "paragraphStyleRange" );            list105.putObject( idparagraphStyleRange, desc1923 );                var desc1928 = new ActionDescriptor();                var idFrom = charIDToTypeID( "From" );                desc1928.putInteger( idFrom, 1024 );                var idT = charIDToTypeID( "T   " );                desc1928.putInteger( idT, 1280 );                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );                    var desc1929 = new ActionDescriptor();                    var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );                    desc1929.putBoolean( idstyleSheetHasParent, true );                    var idAlgn = charIDToTypeID( "Algn" );                    var idAlg = charIDToTypeID( "Alg " );                    var idjustifyLeft = stringIDToTypeID( "justifyLeft" );                    desc1929.putEnumerated( idAlgn, idAlg, idjustifyLeft );                    var idfirstLineIndent = stringIDToTypeID( "firstLineIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1929.putUnitDouble( idfirstLineIndent, idPnt, 23.828448 );                    var idstartIndent = stringIDToTypeID( "startIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1929.putUnitDouble( idstartIndent, idPnt, 0.000000 );                    var idendIndent = stringIDToTypeID( "endIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1929.putUnitDouble( idendIndent, idPnt, 0.000000 );                    var idspaceBefore = stringIDToTypeID( "spaceBefore" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1929.putUnitDouble( idspaceBefore, idPnt, 0.150494 );                    var idspaceAfter = stringIDToTypeID( "spaceAfter" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1929.putUnitDouble( idspaceAfter, idPnt, 0.000000 );                    var iddropCapMultiplier = stringIDToTypeID( "dropCapMultiplier" );                    desc1929.putInteger( iddropCapMultiplier, 1 );                    var idautoLeadingPercentage = stringIDToTypeID( "autoLeadingPercentage" );                    desc1929.putDouble( idautoLeadingPercentage, 1.750000 );                    var idleadingType = stringIDToTypeID( "leadingType" );                    var idleadingType = stringIDToTypeID( "leadingType" );                    var idleadingAbove = stringIDToTypeID( "leadingAbove" );                    desc1929.putEnumerated( idleadingType, idleadingType, idleadingAbove );                    var idhyphenate = stringIDToTypeID( "hyphenate" );                    desc1929.putBoolean( idhyphenate, true );                    var idhyphenateWordSize = stringIDToTypeID( "hyphenateWordSize" );                    desc1929.putInteger( idhyphenateWordSize, 6 );                    var idhyphenatePreLength = stringIDToTypeID( "hyphenatePreLength" );                    desc1929.putInteger( idhyphenatePreLength, 2 );                    var idhyphenatePostLength = stringIDToTypeID( "hyphenatePostLength" );                    desc1929.putInteger( idhyphenatePostLength, 2 );                    var idhyphenateLimit = stringIDToTypeID( "hyphenateLimit" );                    desc1929.putInteger( idhyphenateLimit, 0 );                    var idhyphenationZone = stringIDToTypeID( "hyphenationZone" );                    desc1929.putDouble( idhyphenationZone, 36.000000 );                    var idhyphenateCapitalized = stringIDToTypeID( "hyphenateCapitalized" );                    desc1929.putBoolean( idhyphenateCapitalized, true );                    var idhyphenationPreference = stringIDToTypeID( "hyphenationPreference" );                    desc1929.putDouble( idhyphenationPreference, 0.500000 );                    var idjustificationWordMinimum = stringIDToTypeID( "justificationWordMinimum" );                    desc1929.putDouble( idjustificationWordMinimum, 0.800000 );                    var idjustificationWordDesired = stringIDToTypeID( "justificationWordDesired" );                    desc1929.putDouble( idjustificationWordDesired, 1.000000 );                    var idjustificationWordMaximum = stringIDToTypeID( "justificationWordMaximum" );                    desc1929.putDouble( idjustificationWordMaximum, 1.330000 );                    var idjustificationLetterMinimum = stringIDToTypeID( "justificationLetterMinimum" );                    desc1929.putDouble( idjustificationLetterMinimum, 0.000000 );                    var idjustificationLetterDesired = stringIDToTypeID( "justificationLetterDesired" );                    desc1929.putDouble( idjustificationLetterDesired, 0.000000 );                    var idjustificationLetterMaximum = stringIDToTypeID( "justificationLetterMaximum" );                    desc1929.putDouble( idjustificationLetterMaximum, 0.000000 );                    var idjustificationGlyphMinimum = stringIDToTypeID( "justificationGlyphMinimum" );                    desc1929.putDouble( idjustificationGlyphMinimum, 1.000000 );                    var idjustificationGlyphDesired = stringIDToTypeID( "justificationGlyphDesired" );                    desc1929.putDouble( idjustificationGlyphDesired, 1.000000 );                    var idjustificationGlyphMaximum = stringIDToTypeID( "justificationGlyphMaximum" );                    desc1929.putDouble( idjustificationGlyphMaximum, 1.000000 );                    var idsingleWordJustification = stringIDToTypeID( "singleWordJustification" );                    var idAlg = charIDToTypeID( "Alg " );                    var idJstA = charIDToTypeID( "JstA" );                    desc1929.putEnumerated( idsingleWordJustification, idAlg, idJstA );                    var idhangingRoman = stringIDToTypeID( "hangingRoman" );                    desc1929.putBoolean( idhangingRoman, false );                    var idautoTCY = stringIDToTypeID( "autoTCY" );                    desc1929.putInteger( idautoTCY, 1 );                    var idkeepTogether = stringIDToTypeID( "keepTogether" );                    desc1929.putBoolean( idkeepTogether, true );                    var idburasagari = stringIDToTypeID( "burasagari" );                    var idburasagari = stringIDToTypeID( "burasagari" );                    var idburasagariNone = stringIDToTypeID( "burasagariNone" );                    desc1929.putEnumerated( idburasagari, idburasagari, idburasagariNone );                    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );                    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );                    var idpushIn = stringIDToTypeID( "pushIn" );                    desc1929.putEnumerated( idpreferredKinsokuOrder, idpreferredKinsokuOrder, idpushIn );                    var idkurikaeshiMojiShori = stringIDToTypeID( "kurikaeshiMojiShori" );                    desc1929.putBoolean( idkurikaeshiMojiShori, false );                    var idkinsokuSetName = stringIDToTypeID( "kinsokuSetName" );                    var idkinsokuSetName = stringIDToTypeID( "kinsokuSetName" );                    var idSoft = stringIDToTypeID( "Soft" );                    desc1929.putEnumerated( idkinsokuSetName, idkinsokuSetName, idSoft );                    var idmojiKumiName = stringIDToTypeID( "mojiKumiName" );                    var idmojiKumiName = stringIDToTypeID( "mojiKumiName" );                    var idPhotoshopsixMojiKumiSetone = stringIDToTypeID( "Photoshop6MojiKumiSet1" );                    desc1929.putEnumerated( idmojiKumiName, idmojiKumiName, idPhotoshopsixMojiKumiSetone );                    var idtextEveryLineComposer = stringIDToTypeID( "textEveryLineComposer" );                    desc1929.putBoolean( idtextEveryLineComposer, false );                    var iddefaultTabWidth = stringIDToTypeID( "defaultTabWidth" );                    desc1929.putDouble( iddefaultTabWidth, 36.000000 );                    var iddefaultStyle = stringIDToTypeID( "defaultStyle" );                        var desc1930 = new ActionDescriptor();                        var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );                        desc1930.putString( idfontPostScriptName, """FZBWKSJW--GB1-0""" );                        var idFntN = charIDToTypeID( "FntN" );                        desc1930.putString( idFntN, """FZBWKSJW""" );                        var idFntS = charIDToTypeID( "FntS" );                        desc1930.putString( idFntS, """-GB1-0""" );                        var idScrp = charIDToTypeID( "Scrp" );                        desc1930.putInteger( idScrp, 25 );                        var idFntT = charIDToTypeID( "FntT" );                        desc1930.putInteger( idFntT, 2 );                        var idSz = charIDToTypeID( "Sz  " );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1930.putUnitDouble( idSz, idPnt, 2.880000 );                        var idHrzS = charIDToTypeID( "HrzS" );                        desc1930.putDouble( idHrzS, 100.000000 );                        var idVrtS = charIDToTypeID( "VrtS" );                        desc1930.putDouble( idVrtS, 100.000000 );                        var idsyntheticBold = stringIDToTypeID( "syntheticBold" );                        desc1930.putBoolean( idsyntheticBold, false );                        var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );                        desc1930.putBoolean( idsyntheticItalic, false );                        var idautoLeading = stringIDToTypeID( "autoLeading" );                        desc1930.putBoolean( idautoLeading, true );                        var idTrck = charIDToTypeID( "Trck" );                        desc1930.putInteger( idTrck, 0 );                        var idBsln = charIDToTypeID( "Bsln" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1930.putUnitDouble( idBsln, idPnt, 0.000000 );                        var idcharacterRotation = stringIDToTypeID( "characterRotation" );                        desc1930.putDouble( idcharacterRotation, 0.000000 );                        var idfontCaps = stringIDToTypeID( "fontCaps" );                        var idfontCaps = stringIDToTypeID( "fontCaps" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1930.putEnumerated( idfontCaps, idfontCaps, idNrml );                        var idbaseline = stringIDToTypeID( "baseline" );                        var idbaseline = stringIDToTypeID( "baseline" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1930.putEnumerated( idbaseline, idbaseline, idNrml );                        var idotbaseline = stringIDToTypeID( "otbaseline" );                        var idotbaseline = stringIDToTypeID( "otbaseline" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1930.putEnumerated( idotbaseline, idotbaseline, idNrml );                        var idstrikethrough = stringIDToTypeID( "strikethrough" );                        var idstrikethrough = stringIDToTypeID( "strikethrough" );                        var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );                        desc1930.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );                        var idUndl = charIDToTypeID( "Undl" );                        var idUndl = charIDToTypeID( "Undl" );                        var idunderlineOff = stringIDToTypeID( "underlineOff" );                        desc1930.putEnumerated( idUndl, idUndl, idunderlineOff );                        var idunderlineOffset = stringIDToTypeID( "underlineOffset" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1930.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );                        var idligature = stringIDToTypeID( "ligature" );                        desc1930.putBoolean( idligature, true );                        var idaltligature = stringIDToTypeID( "altligature" );                        desc1930.putBoolean( idaltligature, false );                        var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );                        desc1930.putBoolean( idcontextualLigatures, false );                        var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );                        desc1930.putBoolean( idalternateLigatures, false );                        var idoldStyle = stringIDToTypeID( "oldStyle" );                        desc1930.putBoolean( idoldStyle, false );                        var idfractions = stringIDToTypeID( "fractions" );                        desc1930.putBoolean( idfractions, false );                        var idordinals = stringIDToTypeID( "ordinals" );                        desc1930.putBoolean( idordinals, false );                        var idswash = stringIDToTypeID( "swash" );                        desc1930.putBoolean( idswash, false );                        var idtitling = stringIDToTypeID( "titling" );                        desc1930.putBoolean( idtitling, false );                        var idconnectionForms = stringIDToTypeID( "connectionForms" );                        desc1930.putBoolean( idconnectionForms, false );                        var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );                        desc1930.putBoolean( idstylisticAlternates, false );                        var idornaments = stringIDToTypeID( "ornaments" );                        desc1930.putBoolean( idornaments, false );                        var idfigureStyle = stringIDToTypeID( "figureStyle" );                        var idfigureStyle = stringIDToTypeID( "figureStyle" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1930.putEnumerated( idfigureStyle, idfigureStyle, idNrml );                        var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );                        desc1930.putBoolean( idproportionalMetrics, false );                        var idkana = stringIDToTypeID( "kana" );                        desc1930.putBoolean( idkana, false );                        var iditalics = stringIDToTypeID( "italics" );                        desc1930.putBoolean( iditalics, false );                        var idruby = stringIDToTypeID( "ruby" );                        desc1930.putBoolean( idruby, false );                        var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                        var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                        var idrotated = stringIDToTypeID( "rotated" );                        desc1930.putEnumerated( idbaselineDirection, idbaselineDirection, idrotated );                        var idtextLanguage = stringIDToTypeID( "textLanguage" );                        var idtextLanguage = stringIDToTypeID( "textLanguage" );                        var idenglishLanguage = stringIDToTypeID( "englishLanguage" );                        desc1930.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );                        var idmojiZume = stringIDToTypeID( "mojiZume" );                        desc1930.putDouble( idmojiZume, 0.000000 );                        var idgridAlignment = stringIDToTypeID( "gridAlignment" );                        var idgridAlignment = stringIDToTypeID( "gridAlignment" );                        var idroman = stringIDToTypeID( "roman" );                        desc1930.putEnumerated( idgridAlignment, idgridAlignment, idroman );                        var idenableWariChu = stringIDToTypeID( "enableWariChu" );                        desc1930.putBoolean( idenableWariChu, false );                        var idwariChuCount = stringIDToTypeID( "wariChuCount" );                        desc1930.putInteger( idwariChuCount, 2 );                        var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );                        desc1930.putInteger( idwariChuLineGap, 0 );                        var idwariChuScale = stringIDToTypeID( "wariChuScale" );                        desc1930.putDouble( idwariChuScale, 0.500000 );                        var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );                        desc1930.putInteger( idwariChuWidow, 2 );                        var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );                        desc1930.putInteger( idwariChuOrphan, 2 );                        var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                        var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                        var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );                        desc1930.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );                        var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );                        desc1930.putInteger( idtcyUpDown, 0 );                        var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );                        desc1930.putInteger( idtcyLeftRight, 0 );                        var idleftAki = stringIDToTypeID( "leftAki" );                        desc1930.putDouble( idleftAki, -1.000000 );                        var idrightAki = stringIDToTypeID( "rightAki" );                        desc1930.putDouble( idrightAki, -1.000000 );                        var idjiDori = stringIDToTypeID( "jiDori" );                        desc1930.putInteger( idjiDori, 0 );                        var idnoBreak = stringIDToTypeID( "noBreak" );                        desc1930.putBoolean( idnoBreak, false );                        var idClr = charIDToTypeID( "Clr " );                            var desc1931 = new ActionDescriptor();                            var idCyn = charIDToTypeID( "Cyn " );                            desc1931.putDouble( idCyn, 74.520000 );                            var idMgnt = charIDToTypeID( "Mgnt" );                            desc1931.putDouble( idMgnt, 67.780000 );                            var idYlw = charIDToTypeID( "Ylw " );                            desc1931.putDouble( idYlw, 67.130000 );                            var idBlck = charIDToTypeID( "Blck" );                            desc1931.putDouble( idBlck, 89.630000 );                        var idCMYC = charIDToTypeID( "CMYC" );                        desc1930.putObject( idClr, idCMYC, desc1931 );                        var idstrokeColor = stringIDToTypeID( "strokeColor" );                            var desc1932 = new ActionDescriptor();                            var idCyn = charIDToTypeID( "Cyn " );                            desc1932.putDouble( idCyn, 74.520000 );                            var idMgnt = charIDToTypeID( "Mgnt" );                            desc1932.putDouble( idMgnt, 67.780000 );                            var idYlw = charIDToTypeID( "Ylw " );                            desc1932.putDouble( idYlw, 67.130000 );                            var idBlck = charIDToTypeID( "Blck" );                            desc1932.putDouble( idBlck, 89.630000 );                        var idCMYC = charIDToTypeID( "CMYC" );                        desc1930.putObject( idstrokeColor, idCMYC, desc1932 );                        var idFl = charIDToTypeID( "Fl  " );                        desc1930.putBoolean( idFl, true );                        var idStrk = charIDToTypeID( "Strk" );                        desc1930.putBoolean( idStrk, false );                        var idfillFirst = stringIDToTypeID( "fillFirst" );                        desc1930.putBoolean( idfillFirst, true );                        var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );                        desc1930.putBoolean( idfillOverPrint, false );                        var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );                        desc1930.putBoolean( idstrokeOverPrint, false );                        var idlineCap = stringIDToTypeID( "lineCap" );                        var idlineCap = stringIDToTypeID( "lineCap" );                        var idbuttCap = stringIDToTypeID( "buttCap" );                        desc1930.putEnumerated( idlineCap, idlineCap, idbuttCap );                        var idlineJoin = stringIDToTypeID( "lineJoin" );                        var idlineJoin = stringIDToTypeID( "lineJoin" );                        var idmiterJoin = stringIDToTypeID( "miterJoin" );                        desc1930.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );                        var idlineWidth = stringIDToTypeID( "lineWidth" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1930.putUnitDouble( idlineWidth, idPnt, 0.240000 );                        var idmiterLimit = stringIDToTypeID( "miterLimit" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1930.putUnitDouble( idmiterLimit, idPnt, 0.960000 );                        var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );                        desc1930.putDouble( idlineDashoffset, 0.000000 );                    var idTxtS = charIDToTypeID( "TxtS" );                    desc1929.putObject( iddefaultStyle, idTxtS, desc1930 );                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );                desc1928.putObject( idparagraphStyle, idparagraphStyle, desc1929 );            var idparagraphStyleRange = stringIDToTypeID( "paragraphStyleRange" );            list105.putObject( idparagraphStyleRange, desc1928 );                var desc1933 = new ActionDescriptor();                var idFrom = charIDToTypeID( "From" );                desc1933.putInteger( idFrom, 1280 );                var idT = charIDToTypeID( "T   " );                desc1933.putInteger( idT, 1536 );                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );                    var desc1934 = new ActionDescriptor();                    var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );                    desc1934.putBoolean( idstyleSheetHasParent, true );                    var idAlgn = charIDToTypeID( "Algn" );                    var idAlg = charIDToTypeID( "Alg " );                    var idjustifyLeft = stringIDToTypeID( "justifyLeft" );                    desc1934.putEnumerated( idAlgn, idAlg, idjustifyLeft );                    var idfirstLineIndent = stringIDToTypeID( "firstLineIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1934.putUnitDouble( idfirstLineIndent, idPnt, 23.828448 );                    var idstartIndent = stringIDToTypeID( "startIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1934.putUnitDouble( idstartIndent, idPnt, 0.000000 );                    var idendIndent = stringIDToTypeID( "endIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1934.putUnitDouble( idendIndent, idPnt, 0.000000 );                    var idspaceBefore = stringIDToTypeID( "spaceBefore" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1934.putUnitDouble( idspaceBefore, idPnt, 0.150494 );                    var idspaceAfter = stringIDToTypeID( "spaceAfter" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1934.putUnitDouble( idspaceAfter, idPnt, 0.000000 );                    var iddropCapMultiplier = stringIDToTypeID( "dropCapMultiplier" );                    desc1934.putInteger( iddropCapMultiplier, 1 );                    var idautoLeadingPercentage = stringIDToTypeID( "autoLeadingPercentage" );                    desc1934.putDouble( idautoLeadingPercentage, 1.750000 );                    var idleadingType = stringIDToTypeID( "leadingType" );                    var idleadingType = stringIDToTypeID( "leadingType" );                    var idleadingAbove = stringIDToTypeID( "leadingAbove" );                    desc1934.putEnumerated( idleadingType, idleadingType, idleadingAbove );                    var idhyphenate = stringIDToTypeID( "hyphenate" );                    desc1934.putBoolean( idhyphenate, true );                    var idhyphenateWordSize = stringIDToTypeID( "hyphenateWordSize" );                    desc1934.putInteger( idhyphenateWordSize, 6 );                    var idhyphenatePreLength = stringIDToTypeID( "hyphenatePreLength" );                    desc1934.putInteger( idhyphenatePreLength, 2 );                    var idhyphenatePostLength = stringIDToTypeID( "hyphenatePostLength" );                    desc1934.putInteger( idhyphenatePostLength, 2 );                    var idhyphenateLimit = stringIDToTypeID( "hyphenateLimit" );                    desc1934.putInteger( idhyphenateLimit, 0 );                    var idhyphenationZone = stringIDToTypeID( "hyphenationZone" );                    desc1934.putDouble( idhyphenationZone, 36.000000 );                    var idhyphenateCapitalized = stringIDToTypeID( "hyphenateCapitalized" );                    desc1934.putBoolean( idhyphenateCapitalized, true );                    var idhyphenationPreference = stringIDToTypeID( "hyphenationPreference" );                    desc1934.putDouble( idhyphenationPreference, 0.500000 );                    var idjustificationWordMinimum = stringIDToTypeID( "justificationWordMinimum" );                    desc1934.putDouble( idjustificationWordMinimum, 0.800000 );                    var idjustificationWordDesired = stringIDToTypeID( "justificationWordDesired" );                    desc1934.putDouble( idjustificationWordDesired, 1.000000 );                    var idjustificationWordMaximum = stringIDToTypeID( "justificationWordMaximum" );                    desc1934.putDouble( idjustificationWordMaximum, 1.330000 );                    var idjustificationLetterMinimum = stringIDToTypeID( "justificationLetterMinimum" );                    desc1934.putDouble( idjustificationLetterMinimum, 0.000000 );                    var idjustificationLetterDesired = stringIDToTypeID( "justificationLetterDesired" );                    desc1934.putDouble( idjustificationLetterDesired, 0.000000 );                    var idjustificationLetterMaximum = stringIDToTypeID( "justificationLetterMaximum" );                    desc1934.putDouble( idjustificationLetterMaximum, 0.000000 );                    var idjustificationGlyphMinimum = stringIDToTypeID( "justificationGlyphMinimum" );                    desc1934.putDouble( idjustificationGlyphMinimum, 1.000000 );                    var idjustificationGlyphDesired = stringIDToTypeID( "justificationGlyphDesired" );                    desc1934.putDouble( idjustificationGlyphDesired, 1.000000 );                    var idjustificationGlyphMaximum = stringIDToTypeID( "justificationGlyphMaximum" );                    desc1934.putDouble( idjustificationGlyphMaximum, 1.000000 );                    var idsingleWordJustification = stringIDToTypeID( "singleWordJustification" );                    var idAlg = charIDToTypeID( "Alg " );                    var idJstA = charIDToTypeID( "JstA" );                    desc1934.putEnumerated( idsingleWordJustification, idAlg, idJstA );                    var idhangingRoman = stringIDToTypeID( "hangingRoman" );                    desc1934.putBoolean( idhangingRoman, false );                    var idautoTCY = stringIDToTypeID( "autoTCY" );                    desc1934.putInteger( idautoTCY, 1 );                    var idkeepTogether = stringIDToTypeID( "keepTogether" );                    desc1934.putBoolean( idkeepTogether, true );                    var idburasagari = stringIDToTypeID( "burasagari" );                    var idburasagari = stringIDToTypeID( "burasagari" );                    var idburasagariNone = stringIDToTypeID( "burasagariNone" );                    desc1934.putEnumerated( idburasagari, idburasagari, idburasagariNone );                    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );                    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );                    var idpushIn = stringIDToTypeID( "pushIn" );                    desc1934.putEnumerated( idpreferredKinsokuOrder, idpreferredKinsokuOrder, idpushIn );                    var idkurikaeshiMojiShori = stringIDToTypeID( "kurikaeshiMojiShori" );                    desc1934.putBoolean( idkurikaeshiMojiShori, false );                    var idkinsokuSetName = stringIDToTypeID( "kinsokuSetName" );                    var idkinsokuSetName = stringIDToTypeID( "kinsokuSetName" );                    var idSoft = stringIDToTypeID( "Soft" );                    desc1934.putEnumerated( idkinsokuSetName, idkinsokuSetName, idSoft );                    var idmojiKumiName = stringIDToTypeID( "mojiKumiName" );                    var idmojiKumiName = stringIDToTypeID( "mojiKumiName" );                    var idPhotoshopsixMojiKumiSetone = stringIDToTypeID( "Photoshop6MojiKumiSet1" );                    desc1934.putEnumerated( idmojiKumiName, idmojiKumiName, idPhotoshopsixMojiKumiSetone );                    var idtextEveryLineComposer = stringIDToTypeID( "textEveryLineComposer" );                    desc1934.putBoolean( idtextEveryLineComposer, false );                    var iddefaultTabWidth = stringIDToTypeID( "defaultTabWidth" );                    desc1934.putDouble( iddefaultTabWidth, 36.000000 );                    var iddefaultStyle = stringIDToTypeID( "defaultStyle" );                        var desc1935 = new ActionDescriptor();                        var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );                        desc1935.putString( idfontPostScriptName, """FZBWKSJW--GB1-0""" );                        var idFntN = charIDToTypeID( "FntN" );                        desc1935.putString( idFntN, """FZBWKSJW""" );                        var idFntS = charIDToTypeID( "FntS" );                        desc1935.putString( idFntS, """-GB1-0""" );                        var idScrp = charIDToTypeID( "Scrp" );                        desc1935.putInteger( idScrp, 25 );                        var idFntT = charIDToTypeID( "FntT" );                        desc1935.putInteger( idFntT, 2 );                        var idSz = charIDToTypeID( "Sz  " );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1935.putUnitDouble( idSz, idPnt, 2.880000 );                        var idHrzS = charIDToTypeID( "HrzS" );                        desc1935.putDouble( idHrzS, 100.000000 );                        var idVrtS = charIDToTypeID( "VrtS" );                        desc1935.putDouble( idVrtS, 100.000000 );                        var idsyntheticBold = stringIDToTypeID( "syntheticBold" );                        desc1935.putBoolean( idsyntheticBold, false );                        var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );                        desc1935.putBoolean( idsyntheticItalic, false );                        var idautoLeading = stringIDToTypeID( "autoLeading" );                        desc1935.putBoolean( idautoLeading, true );                        var idTrck = charIDToTypeID( "Trck" );                        desc1935.putInteger( idTrck, 0 );                        var idBsln = charIDToTypeID( "Bsln" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1935.putUnitDouble( idBsln, idPnt, 0.000000 );                        var idcharacterRotation = stringIDToTypeID( "characterRotation" );                        desc1935.putDouble( idcharacterRotation, 0.000000 );                        var idfontCaps = stringIDToTypeID( "fontCaps" );                        var idfontCaps = stringIDToTypeID( "fontCaps" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1935.putEnumerated( idfontCaps, idfontCaps, idNrml );                        var idbaseline = stringIDToTypeID( "baseline" );                        var idbaseline = stringIDToTypeID( "baseline" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1935.putEnumerated( idbaseline, idbaseline, idNrml );                        var idotbaseline = stringIDToTypeID( "otbaseline" );                        var idotbaseline = stringIDToTypeID( "otbaseline" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1935.putEnumerated( idotbaseline, idotbaseline, idNrml );                        var idstrikethrough = stringIDToTypeID( "strikethrough" );                        var idstrikethrough = stringIDToTypeID( "strikethrough" );                        var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );                        desc1935.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );                        var idUndl = charIDToTypeID( "Undl" );                        var idUndl = charIDToTypeID( "Undl" );                        var idunderlineOff = stringIDToTypeID( "underlineOff" );                        desc1935.putEnumerated( idUndl, idUndl, idunderlineOff );                        var idunderlineOffset = stringIDToTypeID( "underlineOffset" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1935.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );                        var idligature = stringIDToTypeID( "ligature" );                        desc1935.putBoolean( idligature, true );                        var idaltligature = stringIDToTypeID( "altligature" );                        desc1935.putBoolean( idaltligature, false );                        var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );                        desc1935.putBoolean( idcontextualLigatures, false );                        var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );                        desc1935.putBoolean( idalternateLigatures, false );                        var idoldStyle = stringIDToTypeID( "oldStyle" );                        desc1935.putBoolean( idoldStyle, false );                        var idfractions = stringIDToTypeID( "fractions" );                        desc1935.putBoolean( idfractions, false );                        var idordinals = stringIDToTypeID( "ordinals" );                        desc1935.putBoolean( idordinals, false );                        var idswash = stringIDToTypeID( "swash" );                        desc1935.putBoolean( idswash, false );                        var idtitling = stringIDToTypeID( "titling" );                        desc1935.putBoolean( idtitling, false );                        var idconnectionForms = stringIDToTypeID( "connectionForms" );                        desc1935.putBoolean( idconnectionForms, false );                        var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );                        desc1935.putBoolean( idstylisticAlternates, false );                        var idornaments = stringIDToTypeID( "ornaments" );                        desc1935.putBoolean( idornaments, false );                        var idfigureStyle = stringIDToTypeID( "figureStyle" );                        var idfigureStyle = stringIDToTypeID( "figureStyle" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1935.putEnumerated( idfigureStyle, idfigureStyle, idNrml );                        var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );                        desc1935.putBoolean( idproportionalMetrics, false );                        var idkana = stringIDToTypeID( "kana" );                        desc1935.putBoolean( idkana, false );                        var iditalics = stringIDToTypeID( "italics" );                        desc1935.putBoolean( iditalics, false );                        var idruby = stringIDToTypeID( "ruby" );                        desc1935.putBoolean( idruby, false );                        var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                        var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                        var idrotated = stringIDToTypeID( "rotated" );                        desc1935.putEnumerated( idbaselineDirection, idbaselineDirection, idrotated );                        var idtextLanguage = stringIDToTypeID( "textLanguage" );                        var idtextLanguage = stringIDToTypeID( "textLanguage" );                        var idenglishLanguage = stringIDToTypeID( "englishLanguage" );                        desc1935.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );                        var idmojiZume = stringIDToTypeID( "mojiZume" );                        desc1935.putDouble( idmojiZume, 0.000000 );                        var idgridAlignment = stringIDToTypeID( "gridAlignment" );                        var idgridAlignment = stringIDToTypeID( "gridAlignment" );                        var idroman = stringIDToTypeID( "roman" );                        desc1935.putEnumerated( idgridAlignment, idgridAlignment, idroman );                        var idenableWariChu = stringIDToTypeID( "enableWariChu" );                        desc1935.putBoolean( idenableWariChu, false );                        var idwariChuCount = stringIDToTypeID( "wariChuCount" );                        desc1935.putInteger( idwariChuCount, 2 );                        var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );                        desc1935.putInteger( idwariChuLineGap, 0 );                        var idwariChuScale = stringIDToTypeID( "wariChuScale" );                        desc1935.putDouble( idwariChuScale, 0.500000 );                        var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );                        desc1935.putInteger( idwariChuWidow, 2 );                        var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );                        desc1935.putInteger( idwariChuOrphan, 2 );                        var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                        var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                        var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );                        desc1935.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );                        var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );                        desc1935.putInteger( idtcyUpDown, 0 );                        var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );                        desc1935.putInteger( idtcyLeftRight, 0 );                        var idleftAki = stringIDToTypeID( "leftAki" );                        desc1935.putDouble( idleftAki, -1.000000 );                        var idrightAki = stringIDToTypeID( "rightAki" );                        desc1935.putDouble( idrightAki, -1.000000 );                        var idjiDori = stringIDToTypeID( "jiDori" );                        desc1935.putInteger( idjiDori, 0 );                        var idnoBreak = stringIDToTypeID( "noBreak" );                        desc1935.putBoolean( idnoBreak, false );                        var idClr = charIDToTypeID( "Clr " );                            var desc1936 = new ActionDescriptor();                            var idCyn = charIDToTypeID( "Cyn " );                            desc1936.putDouble( idCyn, 74.520000 );                            var idMgnt = charIDToTypeID( "Mgnt" );                            desc1936.putDouble( idMgnt, 67.780000 );                            var idYlw = charIDToTypeID( "Ylw " );                            desc1936.putDouble( idYlw, 67.130000 );                            var idBlck = charIDToTypeID( "Blck" );                            desc1936.putDouble( idBlck, 89.630000 );                        var idCMYC = charIDToTypeID( "CMYC" );                        desc1935.putObject( idClr, idCMYC, desc1936 );                        var idstrokeColor = stringIDToTypeID( "strokeColor" );                            var desc1937 = new ActionDescriptor();                            var idCyn = charIDToTypeID( "Cyn " );                            desc1937.putDouble( idCyn, 74.520000 );                            var idMgnt = charIDToTypeID( "Mgnt" );                            desc1937.putDouble( idMgnt, 67.780000 );                            var idYlw = charIDToTypeID( "Ylw " );                            desc1937.putDouble( idYlw, 67.130000 );                            var idBlck = charIDToTypeID( "Blck" );                            desc1937.putDouble( idBlck, 89.630000 );                        var idCMYC = charIDToTypeID( "CMYC" );                        desc1935.putObject( idstrokeColor, idCMYC, desc1937 );                        var idFl = charIDToTypeID( "Fl  " );                        desc1935.putBoolean( idFl, true );                        var idStrk = charIDToTypeID( "Strk" );                        desc1935.putBoolean( idStrk, false );                        var idfillFirst = stringIDToTypeID( "fillFirst" );                        desc1935.putBoolean( idfillFirst, true );                        var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );                        desc1935.putBoolean( idfillOverPrint, false );                        var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );                        desc1935.putBoolean( idstrokeOverPrint, false );                        var idlineCap = stringIDToTypeID( "lineCap" );                        var idlineCap = stringIDToTypeID( "lineCap" );                        var idbuttCap = stringIDToTypeID( "buttCap" );                        desc1935.putEnumerated( idlineCap, idlineCap, idbuttCap );                        var idlineJoin = stringIDToTypeID( "lineJoin" );                        var idlineJoin = stringIDToTypeID( "lineJoin" );                        var idmiterJoin = stringIDToTypeID( "miterJoin" );                        desc1935.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );                        var idlineWidth = stringIDToTypeID( "lineWidth" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1935.putUnitDouble( idlineWidth, idPnt, 0.240000 );                        var idmiterLimit = stringIDToTypeID( "miterLimit" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1935.putUnitDouble( idmiterLimit, idPnt, 0.960000 );                        var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );                        desc1935.putDouble( idlineDashoffset, 0.000000 );                    var idTxtS = charIDToTypeID( "TxtS" );                    desc1934.putObject( iddefaultStyle, idTxtS, desc1935 );                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );                desc1933.putObject( idparagraphStyle, idparagraphStyle, desc1934 );            var idparagraphStyleRange = stringIDToTypeID( "paragraphStyleRange" );            list105.putObject( idparagraphStyleRange, desc1933 );                var desc1938 = new ActionDescriptor();                var idFrom = charIDToTypeID( "From" );                desc1938.putInteger( idFrom, 1536 );                var idT = charIDToTypeID( "T   " );                desc1938.putInteger( idT, 1537 );                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );                    var desc1939 = new ActionDescriptor();                    var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );                    desc1939.putBoolean( idstyleSheetHasParent, true );                    var idAlgn = charIDToTypeID( "Algn" );                    var idAlg = charIDToTypeID( "Alg " );                    var idjustifyLeft = stringIDToTypeID( "justifyLeft" );                    desc1939.putEnumerated( idAlgn, idAlg, idjustifyLeft );                    var idfirstLineIndent = stringIDToTypeID( "firstLineIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1939.putUnitDouble( idfirstLineIndent, idPnt, 23.828448 );                    var idstartIndent = stringIDToTypeID( "startIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1939.putUnitDouble( idstartIndent, idPnt, 0.000000 );                    var idendIndent = stringIDToTypeID( "endIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1939.putUnitDouble( idendIndent, idPnt, 0.000000 );                    var idspaceBefore = stringIDToTypeID( "spaceBefore" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1939.putUnitDouble( idspaceBefore, idPnt, 0.150494 );                    var idspaceAfter = stringIDToTypeID( "spaceAfter" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1939.putUnitDouble( idspaceAfter, idPnt, 0.000000 );                    var iddropCapMultiplier = stringIDToTypeID( "dropCapMultiplier" );                    desc1939.putInteger( iddropCapMultiplier, 1 );                    var idautoLeadingPercentage = stringIDToTypeID( "autoLeadingPercentage" );                    desc1939.putDouble( idautoLeadingPercentage, 1.750000 );                    var idleadingType = stringIDToTypeID( "leadingType" );                    var idleadingType = stringIDToTypeID( "leadingType" );                    var idleadingAbove = stringIDToTypeID( "leadingAbove" );                    desc1939.putEnumerated( idleadingType, idleadingType, idleadingAbove );                    var idhyphenate = stringIDToTypeID( "hyphenate" );                    desc1939.putBoolean( idhyphenate, true );                    var idhyphenateWordSize = stringIDToTypeID( "hyphenateWordSize" );                    desc1939.putInteger( idhyphenateWordSize, 6 );                    var idhyphenatePreLength = stringIDToTypeID( "hyphenatePreLength" );                    desc1939.putInteger( idhyphenatePreLength, 2 );                    var idhyphenatePostLength = stringIDToTypeID( "hyphenatePostLength" );                    desc1939.putInteger( idhyphenatePostLength, 2 );                    var idhyphenateLimit = stringIDToTypeID( "hyphenateLimit" );                    desc1939.putInteger( idhyphenateLimit, 0 );                    var idhyphenationZone = stringIDToTypeID( "hyphenationZone" );                    desc1939.putDouble( idhyphenationZone, 36.000000 );                    var idhyphenateCapitalized = stringIDToTypeID( "hyphenateCapitalized" );                    desc1939.putBoolean( idhyphenateCapitalized, true );                    var idhyphenationPreference = stringIDToTypeID( "hyphenationPreference" );                    desc1939.putDouble( idhyphenationPreference, 0.500000 );                    var idjustificationWordMinimum = stringIDToTypeID( "justificationWordMinimum" );                    desc1939.putDouble( idjustificationWordMinimum, 0.800000 );                    var idjustificationWordDesired = stringIDToTypeID( "justificationWordDesired" );                    desc1939.putDouble( idjustificationWordDesired, 1.000000 );                    var idjustificationWordMaximum = stringIDToTypeID( "justificationWordMaximum" );                    desc1939.putDouble( idjustificationWordMaximum, 1.330000 );                    var idjustificationLetterMinimum = stringIDToTypeID( "justificationLetterMinimum" );                    desc1939.putDouble( idjustificationLetterMinimum, 0.000000 );                    var idjustificationLetterDesired = stringIDToTypeID( "justificationLetterDesired" );                    desc1939.putDouble( idjustificationLetterDesired, 0.000000 );                    var idjustificationLetterMaximum = stringIDToTypeID( "justificationLetterMaximum" );                    desc1939.putDouble( idjustificationLetterMaximum, 0.000000 );                    var idjustificationGlyphMinimum = stringIDToTypeID( "justificationGlyphMinimum" );                    desc1939.putDouble( idjustificationGlyphMinimum, 1.000000 );                    var idjustificationGlyphDesired = stringIDToTypeID( "justificationGlyphDesired" );                    desc1939.putDouble( idjustificationGlyphDesired, 1.000000 );                    var idjustificationGlyphMaximum = stringIDToTypeID( "justificationGlyphMaximum" );                    desc1939.putDouble( idjustificationGlyphMaximum, 1.000000 );                    var idsingleWordJustification = stringIDToTypeID( "singleWordJustification" );                    var idAlg = charIDToTypeID( "Alg " );                    var idJstA = charIDToTypeID( "JstA" );                    desc1939.putEnumerated( idsingleWordJustification, idAlg, idJstA );                    var idhangingRoman = stringIDToTypeID( "hangingRoman" );                    desc1939.putBoolean( idhangingRoman, false );                    var idautoTCY = stringIDToTypeID( "autoTCY" );                    desc1939.putInteger( idautoTCY, 1 );                    var idkeepTogether = stringIDToTypeID( "keepTogether" );                    desc1939.putBoolean( idkeepTogether, true );                    var idburasagari = stringIDToTypeID( "burasagari" );                    var idburasagari = stringIDToTypeID( "burasagari" );                    var idburasagariNone = stringIDToTypeID( "burasagariNone" );                    desc1939.putEnumerated( idburasagari, idburasagari, idburasagariNone );                    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );                    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );                    var idpushIn = stringIDToTypeID( "pushIn" );                    desc1939.putEnumerated( idpreferredKinsokuOrder, idpreferredKinsokuOrder, idpushIn );                    var idkurikaeshiMojiShori = stringIDToTypeID( "kurikaeshiMojiShori" );                    desc1939.putBoolean( idkurikaeshiMojiShori, false );                    var idkinsokuSetName = stringIDToTypeID( "kinsokuSetName" );                    var idkinsokuSetName = stringIDToTypeID( "kinsokuSetName" );                    var idSoft = stringIDToTypeID( "Soft" );                    desc1939.putEnumerated( idkinsokuSetName, idkinsokuSetName, idSoft );                    var idmojiKumiName = stringIDToTypeID( "mojiKumiName" );                    var idmojiKumiName = stringIDToTypeID( "mojiKumiName" );                    var idPhotoshopsixMojiKumiSetone = stringIDToTypeID( "Photoshop6MojiKumiSet1" );                    desc1939.putEnumerated( idmojiKumiName, idmojiKumiName, idPhotoshopsixMojiKumiSetone );                    var idtextEveryLineComposer = stringIDToTypeID( "textEveryLineComposer" );                    desc1939.putBoolean( idtextEveryLineComposer, false );                    var iddefaultTabWidth = stringIDToTypeID( "defaultTabWidth" );                    desc1939.putDouble( iddefaultTabWidth, 36.000000 );                    var iddefaultStyle = stringIDToTypeID( "defaultStyle" );                        var desc1940 = new ActionDescriptor();                        var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );                        desc1940.putString( idfontPostScriptName, """FZBWKSJW--GB1-0""" );                        var idFntN = charIDToTypeID( "FntN" );                        desc1940.putString( idFntN, """FZBWKSJW""" );                        var idFntS = charIDToTypeID( "FntS" );                        desc1940.putString( idFntS, """-GB1-0""" );                        var idScrp = charIDToTypeID( "Scrp" );                        desc1940.putInteger( idScrp, 25 );                        var idFntT = charIDToTypeID( "FntT" );                        desc1940.putInteger( idFntT, 2 );                        var idSz = charIDToTypeID( "Sz  " );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1940.putUnitDouble( idSz, idPnt, 2.880000 );                        var idHrzS = charIDToTypeID( "HrzS" );                        desc1940.putDouble( idHrzS, 100.000000 );                        var idVrtS = charIDToTypeID( "VrtS" );                        desc1940.putDouble( idVrtS, 100.000000 );                        var idsyntheticBold = stringIDToTypeID( "syntheticBold" );                        desc1940.putBoolean( idsyntheticBold, false );                        var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );                        desc1940.putBoolean( idsyntheticItalic, false );                        var idautoLeading = stringIDToTypeID( "autoLeading" );                        desc1940.putBoolean( idautoLeading, true );                        var idTrck = charIDToTypeID( "Trck" );                        desc1940.putInteger( idTrck, 0 );                        var idBsln = charIDToTypeID( "Bsln" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1940.putUnitDouble( idBsln, idPnt, 0.000000 );                        var idcharacterRotation = stringIDToTypeID( "characterRotation" );                        desc1940.putDouble( idcharacterRotation, 0.000000 );                        var idfontCaps = stringIDToTypeID( "fontCaps" );                        var idfontCaps = stringIDToTypeID( "fontCaps" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1940.putEnumerated( idfontCaps, idfontCaps, idNrml );                        var idbaseline = stringIDToTypeID( "baseline" );                        var idbaseline = stringIDToTypeID( "baseline" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1940.putEnumerated( idbaseline, idbaseline, idNrml );                        var idotbaseline = stringIDToTypeID( "otbaseline" );                        var idotbaseline = stringIDToTypeID( "otbaseline" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1940.putEnumerated( idotbaseline, idotbaseline, idNrml );                        var idstrikethrough = stringIDToTypeID( "strikethrough" );                        var idstrikethrough = stringIDToTypeID( "strikethrough" );                        var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );                        desc1940.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );                        var idUndl = charIDToTypeID( "Undl" );                        var idUndl = charIDToTypeID( "Undl" );                        var idunderlineOff = stringIDToTypeID( "underlineOff" );                        desc1940.putEnumerated( idUndl, idUndl, idunderlineOff );                        var idunderlineOffset = stringIDToTypeID( "underlineOffset" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1940.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );                        var idligature = stringIDToTypeID( "ligature" );                        desc1940.putBoolean( idligature, true );                        var idaltligature = stringIDToTypeID( "altligature" );                        desc1940.putBoolean( idaltligature, false );                        var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );                        desc1940.putBoolean( idcontextualLigatures, false );                        var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );                        desc1940.putBoolean( idalternateLigatures, false );                        var idoldStyle = stringIDToTypeID( "oldStyle" );                        desc1940.putBoolean( idoldStyle, false );                        var idfractions = stringIDToTypeID( "fractions" );                        desc1940.putBoolean( idfractions, false );                        var idordinals = stringIDToTypeID( "ordinals" );                        desc1940.putBoolean( idordinals, false );                        var idswash = stringIDToTypeID( "swash" );                        desc1940.putBoolean( idswash, false );                        var idtitling = stringIDToTypeID( "titling" );                        desc1940.putBoolean( idtitling, false );                        var idconnectionForms = stringIDToTypeID( "connectionForms" );                        desc1940.putBoolean( idconnectionForms, false );                        var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );                        desc1940.putBoolean( idstylisticAlternates, false );                        var idornaments = stringIDToTypeID( "ornaments" );                        desc1940.putBoolean( idornaments, false );                        var idfigureStyle = stringIDToTypeID( "figureStyle" );                        var idfigureStyle = stringIDToTypeID( "figureStyle" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1940.putEnumerated( idfigureStyle, idfigureStyle, idNrml );                        var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );                        desc1940.putBoolean( idproportionalMetrics, false );                        var idkana = stringIDToTypeID( "kana" );                        desc1940.putBoolean( idkana, false );                        var iditalics = stringIDToTypeID( "italics" );                        desc1940.putBoolean( iditalics, false );                        var idruby = stringIDToTypeID( "ruby" );                        desc1940.putBoolean( idruby, false );                        var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                        var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                        var idrotated = stringIDToTypeID( "rotated" );                        desc1940.putEnumerated( idbaselineDirection, idbaselineDirection, idrotated );                        var idtextLanguage = stringIDToTypeID( "textLanguage" );                        var idtextLanguage = stringIDToTypeID( "textLanguage" );                        var idenglishLanguage = stringIDToTypeID( "englishLanguage" );                        desc1940.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );                        var idmojiZume = stringIDToTypeID( "mojiZume" );                        desc1940.putDouble( idmojiZume, 0.000000 );                        var idgridAlignment = stringIDToTypeID( "gridAlignment" );                        var idgridAlignment = stringIDToTypeID( "gridAlignment" );                        var idroman = stringIDToTypeID( "roman" );                        desc1940.putEnumerated( idgridAlignment, idgridAlignment, idroman );                        var idenableWariChu = stringIDToTypeID( "enableWariChu" );                        desc1940.putBoolean( idenableWariChu, false );                        var idwariChuCount = stringIDToTypeID( "wariChuCount" );                        desc1940.putInteger( idwariChuCount, 2 );                        var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );                        desc1940.putInteger( idwariChuLineGap, 0 );                        var idwariChuScale = stringIDToTypeID( "wariChuScale" );                        desc1940.putDouble( idwariChuScale, 0.500000 );                        var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );                        desc1940.putInteger( idwariChuWidow, 2 );                        var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );                        desc1940.putInteger( idwariChuOrphan, 2 );                        var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                        var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                        var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );                        desc1940.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );                        var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );                        desc1940.putInteger( idtcyUpDown, 0 );                        var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );                        desc1940.putInteger( idtcyLeftRight, 0 );                        var idleftAki = stringIDToTypeID( "leftAki" );                        desc1940.putDouble( idleftAki, -1.000000 );                        var idrightAki = stringIDToTypeID( "rightAki" );                        desc1940.putDouble( idrightAki, -1.000000 );                        var idjiDori = stringIDToTypeID( "jiDori" );                        desc1940.putInteger( idjiDori, 0 );                        var idnoBreak = stringIDToTypeID( "noBreak" );                        desc1940.putBoolean( idnoBreak, false );                        var idClr = charIDToTypeID( "Clr " );                            var desc1941 = new ActionDescriptor();                            var idCyn = charIDToTypeID( "Cyn " );                            desc1941.putDouble( idCyn, 74.520000 );                            var idMgnt = charIDToTypeID( "Mgnt" );                            desc1941.putDouble( idMgnt, 67.780000 );                            var idYlw = charIDToTypeID( "Ylw " );                            desc1941.putDouble( idYlw, 67.130000 );                            var idBlck = charIDToTypeID( "Blck" );                            desc1941.putDouble( idBlck, 89.630000 );                        var idCMYC = charIDToTypeID( "CMYC" );                        desc1940.putObject( idClr, idCMYC, desc1941 );                        var idstrokeColor = stringIDToTypeID( "strokeColor" );                            var desc1942 = new ActionDescriptor();                            var idCyn = charIDToTypeID( "Cyn " );                            desc1942.putDouble( idCyn, 74.520000 );                            var idMgnt = charIDToTypeID( "Mgnt" );                            desc1942.putDouble( idMgnt, 67.780000 );                            var idYlw = charIDToTypeID( "Ylw " );                            desc1942.putDouble( idYlw, 67.130000 );                            var idBlck = charIDToTypeID( "Blck" );                            desc1942.putDouble( idBlck, 89.630000 );                        var idCMYC = charIDToTypeID( "CMYC" );                        desc1940.putObject( idstrokeColor, idCMYC, desc1942 );                        var idFl = charIDToTypeID( "Fl  " );                        desc1940.putBoolean( idFl, true );                        var idStrk = charIDToTypeID( "Strk" );                        desc1940.putBoolean( idStrk, false );                        var idfillFirst = stringIDToTypeID( "fillFirst" );                        desc1940.putBoolean( idfillFirst, true );                        var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );                        desc1940.putBoolean( idfillOverPrint, false );                        var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );                        desc1940.putBoolean( idstrokeOverPrint, false );                        var idlineCap = stringIDToTypeID( "lineCap" );                        var idlineCap = stringIDToTypeID( "lineCap" );                        var idbuttCap = stringIDToTypeID( "buttCap" );                        desc1940.putEnumerated( idlineCap, idlineCap, idbuttCap );                        var idlineJoin = stringIDToTypeID( "lineJoin" );                        var idlineJoin = stringIDToTypeID( "lineJoin" );                        var idmiterJoin = stringIDToTypeID( "miterJoin" );                        desc1940.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );                        var idlineWidth = stringIDToTypeID( "lineWidth" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1940.putUnitDouble( idlineWidth, idPnt, 0.240000 );                        var idmiterLimit = stringIDToTypeID( "miterLimit" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1940.putUnitDouble( idmiterLimit, idPnt, 0.960000 );                        var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );                        desc1940.putDouble( idlineDashoffset, 0.000000 );                    var idTxtS = charIDToTypeID( "TxtS" );                    desc1939.putObject( iddefaultStyle, idTxtS, desc1940 );                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );                desc1938.putObject( idparagraphStyle, idparagraphStyle, desc1939 );            var idparagraphStyleRange = stringIDToTypeID( "paragraphStyleRange" );            list105.putObject( idparagraphStyleRange, desc1938 );                var desc1943 = new ActionDescriptor();                var idFrom = charIDToTypeID( "From" );                desc1943.putInteger( idFrom, 1537 );                var idT = charIDToTypeID( "T   " );                desc1943.putInteger( idT, 1793 );                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );                    var desc1944 = new ActionDescriptor();                    var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );                    desc1944.putBoolean( idstyleSheetHasParent, true );                    var idAlgn = charIDToTypeID( "Algn" );                    var idAlg = charIDToTypeID( "Alg " );                    var idjustifyLeft = stringIDToTypeID( "justifyLeft" );                    desc1944.putEnumerated( idAlgn, idAlg, idjustifyLeft );                    var idfirstLineIndent = stringIDToTypeID( "firstLineIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1944.putUnitDouble( idfirstLineIndent, idPnt, 23.828448 );                    var idstartIndent = stringIDToTypeID( "startIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1944.putUnitDouble( idstartIndent, idPnt, 0.000000 );                    var idendIndent = stringIDToTypeID( "endIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1944.putUnitDouble( idendIndent, idPnt, 0.000000 );                    var idspaceBefore = stringIDToTypeID( "spaceBefore" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1944.putUnitDouble( idspaceBefore, idPnt, 0.150494 );                    var idspaceAfter = stringIDToTypeID( "spaceAfter" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1944.putUnitDouble( idspaceAfter, idPnt, 0.000000 );                    var iddropCapMultiplier = stringIDToTypeID( "dropCapMultiplier" );                    desc1944.putInteger( iddropCapMultiplier, 1 );                    var idautoLeadingPercentage = stringIDToTypeID( "autoLeadingPercentage" );                    desc1944.putDouble( idautoLeadingPercentage, 1.750000 );                    var idleadingType = stringIDToTypeID( "leadingType" );                    var idleadingType = stringIDToTypeID( "leadingType" );                    var idleadingAbove = stringIDToTypeID( "leadingAbove" );                    desc1944.putEnumerated( idleadingType, idleadingType, idleadingAbove );                    var idhyphenate = stringIDToTypeID( "hyphenate" );                    desc1944.putBoolean( idhyphenate, true );                    var idhyphenateWordSize = stringIDToTypeID( "hyphenateWordSize" );                    desc1944.putInteger( idhyphenateWordSize, 6 );                    var idhyphenatePreLength = stringIDToTypeID( "hyphenatePreLength" );                    desc1944.putInteger( idhyphenatePreLength, 2 );                    var idhyphenatePostLength = stringIDToTypeID( "hyphenatePostLength" );                    desc1944.putInteger( idhyphenatePostLength, 2 );                    var idhyphenateLimit = stringIDToTypeID( "hyphenateLimit" );                    desc1944.putInteger( idhyphenateLimit, 0 );                    var idhyphenationZone = stringIDToTypeID( "hyphenationZone" );                    desc1944.putDouble( idhyphenationZone, 36.000000 );                    var idhyphenateCapitalized = stringIDToTypeID( "hyphenateCapitalized" );                    desc1944.putBoolean( idhyphenateCapitalized, true );                    var idhyphenationPreference = stringIDToTypeID( "hyphenationPreference" );                    desc1944.putDouble( idhyphenationPreference, 0.500000 );                    var idjustificationWordMinimum = stringIDToTypeID( "justificationWordMinimum" );                    desc1944.putDouble( idjustificationWordMinimum, 0.800000 );                    var idjustificationWordDesired = stringIDToTypeID( "justificationWordDesired" );                    desc1944.putDouble( idjustificationWordDesired, 1.000000 );                    var idjustificationWordMaximum = stringIDToTypeID( "justificationWordMaximum" );                    desc1944.putDouble( idjustificationWordMaximum, 1.330000 );                    var idjustificationLetterMinimum = stringIDToTypeID( "justificationLetterMinimum" );                    desc1944.putDouble( idjustificationLetterMinimum, 0.000000 );                    var idjustificationLetterDesired = stringIDToTypeID( "justificationLetterDesired" );                    desc1944.putDouble( idjustificationLetterDesired, 0.000000 );                    var idjustificationLetterMaximum = stringIDToTypeID( "justificationLetterMaximum" );                    desc1944.putDouble( idjustificationLetterMaximum, 0.000000 );                    var idjustificationGlyphMinimum = stringIDToTypeID( "justificationGlyphMinimum" );                    desc1944.putDouble( idjustificationGlyphMinimum, 1.000000 );                    var idjustificationGlyphDesired = stringIDToTypeID( "justificationGlyphDesired" );                    desc1944.putDouble( idjustificationGlyphDesired, 1.000000 );                    var idjustificationGlyphMaximum = stringIDToTypeID( "justificationGlyphMaximum" );                    desc1944.putDouble( idjustificationGlyphMaximum, 1.000000 );                    var idsingleWordJustification = stringIDToTypeID( "singleWordJustification" );                    var idAlg = charIDToTypeID( "Alg " );                    var idJstA = charIDToTypeID( "JstA" );                    desc1944.putEnumerated( idsingleWordJustification, idAlg, idJstA );                    var idhangingRoman = stringIDToTypeID( "hangingRoman" );                    desc1944.putBoolean( idhangingRoman, false );                    var idautoTCY = stringIDToTypeID( "autoTCY" );                    desc1944.putInteger( idautoTCY, 1 );                    var idkeepTogether = stringIDToTypeID( "keepTogether" );                    desc1944.putBoolean( idkeepTogether, true );                    var idburasagari = stringIDToTypeID( "burasagari" );                    var idburasagari = stringIDToTypeID( "burasagari" );                    var idburasagariNone = stringIDToTypeID( "burasagariNone" );                    desc1944.putEnumerated( idburasagari, idburasagari, idburasagariNone );                    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );                    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );                    var idpushIn = stringIDToTypeID( "pushIn" );                    desc1944.putEnumerated( idpreferredKinsokuOrder, idpreferredKinsokuOrder, idpushIn );                    var idkurikaeshiMojiShori = stringIDToTypeID( "kurikaeshiMojiShori" );                    desc1944.putBoolean( idkurikaeshiMojiShori, false );                    var idkinsokuSetName = stringIDToTypeID( "kinsokuSetName" );                    var idkinsokuSetName = stringIDToTypeID( "kinsokuSetName" );                    var idSoft = stringIDToTypeID( "Soft" );                    desc1944.putEnumerated( idkinsokuSetName, idkinsokuSetName, idSoft );                    var idmojiKumiName = stringIDToTypeID( "mojiKumiName" );                    var idmojiKumiName = stringIDToTypeID( "mojiKumiName" );                    var idPhotoshopsixMojiKumiSetone = stringIDToTypeID( "Photoshop6MojiKumiSet1" );                    desc1944.putEnumerated( idmojiKumiName, idmojiKumiName, idPhotoshopsixMojiKumiSetone );                    var idtextEveryLineComposer = stringIDToTypeID( "textEveryLineComposer" );                    desc1944.putBoolean( idtextEveryLineComposer, false );                    var iddefaultTabWidth = stringIDToTypeID( "defaultTabWidth" );                    desc1944.putDouble( iddefaultTabWidth, 36.000000 );                    var iddefaultStyle = stringIDToTypeID( "defaultStyle" );                        var desc1945 = new ActionDescriptor();                        var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );                        desc1945.putString( idfontPostScriptName, """FZBWKSJW--GB1-0""" );                        var idFntN = charIDToTypeID( "FntN" );                        desc1945.putString( idFntN, """FZBWKSJW""" );                        var idFntS = charIDToTypeID( "FntS" );                        desc1945.putString( idFntS, """-GB1-0""" );                        var idScrp = charIDToTypeID( "Scrp" );                        desc1945.putInteger( idScrp, 25 );                        var idFntT = charIDToTypeID( "FntT" );                        desc1945.putInteger( idFntT, 2 );                        var idSz = charIDToTypeID( "Sz  " );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1945.putUnitDouble( idSz, idPnt, 2.880000 );                        var idHrzS = charIDToTypeID( "HrzS" );                        desc1945.putDouble( idHrzS, 100.000000 );                        var idVrtS = charIDToTypeID( "VrtS" );                        desc1945.putDouble( idVrtS, 100.000000 );                        var idsyntheticBold = stringIDToTypeID( "syntheticBold" );                        desc1945.putBoolean( idsyntheticBold, false );                        var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );                        desc1945.putBoolean( idsyntheticItalic, false );                        var idautoLeading = stringIDToTypeID( "autoLeading" );                        desc1945.putBoolean( idautoLeading, true );                        var idTrck = charIDToTypeID( "Trck" );                        desc1945.putInteger( idTrck, 0 );                        var idBsln = charIDToTypeID( "Bsln" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1945.putUnitDouble( idBsln, idPnt, 0.000000 );                        var idcharacterRotation = stringIDToTypeID( "characterRotation" );                        desc1945.putDouble( idcharacterRotation, 0.000000 );                        var idfontCaps = stringIDToTypeID( "fontCaps" );                        var idfontCaps = stringIDToTypeID( "fontCaps" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1945.putEnumerated( idfontCaps, idfontCaps, idNrml );                        var idbaseline = stringIDToTypeID( "baseline" );                        var idbaseline = stringIDToTypeID( "baseline" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1945.putEnumerated( idbaseline, idbaseline, idNrml );                        var idotbaseline = stringIDToTypeID( "otbaseline" );                        var idotbaseline = stringIDToTypeID( "otbaseline" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1945.putEnumerated( idotbaseline, idotbaseline, idNrml );                        var idstrikethrough = stringIDToTypeID( "strikethrough" );                        var idstrikethrough = stringIDToTypeID( "strikethrough" );                        var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );                        desc1945.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );                        var idUndl = charIDToTypeID( "Undl" );                        var idUndl = charIDToTypeID( "Undl" );                        var idunderlineOff = stringIDToTypeID( "underlineOff" );                        desc1945.putEnumerated( idUndl, idUndl, idunderlineOff );                        var idunderlineOffset = stringIDToTypeID( "underlineOffset" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1945.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );                        var idligature = stringIDToTypeID( "ligature" );                        desc1945.putBoolean( idligature, true );                        var idaltligature = stringIDToTypeID( "altligature" );                        desc1945.putBoolean( idaltligature, false );                        var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );                        desc1945.putBoolean( idcontextualLigatures, false );                        var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );                        desc1945.putBoolean( idalternateLigatures, false );                        var idoldStyle = stringIDToTypeID( "oldStyle" );                        desc1945.putBoolean( idoldStyle, false );                        var idfractions = stringIDToTypeID( "fractions" );                        desc1945.putBoolean( idfractions, false );                        var idordinals = stringIDToTypeID( "ordinals" );                        desc1945.putBoolean( idordinals, false );                        var idswash = stringIDToTypeID( "swash" );                        desc1945.putBoolean( idswash, false );                        var idtitling = stringIDToTypeID( "titling" );                        desc1945.putBoolean( idtitling, false );                        var idconnectionForms = stringIDToTypeID( "connectionForms" );                        desc1945.putBoolean( idconnectionForms, false );                        var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );                        desc1945.putBoolean( idstylisticAlternates, false );                        var idornaments = stringIDToTypeID( "ornaments" );                        desc1945.putBoolean( idornaments, false );                        var idfigureStyle = stringIDToTypeID( "figureStyle" );                        var idfigureStyle = stringIDToTypeID( "figureStyle" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1945.putEnumerated( idfigureStyle, idfigureStyle, idNrml );                        var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );                        desc1945.putBoolean( idproportionalMetrics, false );                        var idkana = stringIDToTypeID( "kana" );                        desc1945.putBoolean( idkana, false );                        var iditalics = stringIDToTypeID( "italics" );                        desc1945.putBoolean( iditalics, false );                        var idruby = stringIDToTypeID( "ruby" );                        desc1945.putBoolean( idruby, false );                        var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                        var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                        var idrotated = stringIDToTypeID( "rotated" );                        desc1945.putEnumerated( idbaselineDirection, idbaselineDirection, idrotated );                        var idtextLanguage = stringIDToTypeID( "textLanguage" );                        var idtextLanguage = stringIDToTypeID( "textLanguage" );                        var idenglishLanguage = stringIDToTypeID( "englishLanguage" );                        desc1945.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );                        var idmojiZume = stringIDToTypeID( "mojiZume" );                        desc1945.putDouble( idmojiZume, 0.000000 );                        var idgridAlignment = stringIDToTypeID( "gridAlignment" );                        var idgridAlignment = stringIDToTypeID( "gridAlignment" );                        var idroman = stringIDToTypeID( "roman" );                        desc1945.putEnumerated( idgridAlignment, idgridAlignment, idroman );                        var idenableWariChu = stringIDToTypeID( "enableWariChu" );                        desc1945.putBoolean( idenableWariChu, false );                        var idwariChuCount = stringIDToTypeID( "wariChuCount" );                        desc1945.putInteger( idwariChuCount, 2 );                        var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );                        desc1945.putInteger( idwariChuLineGap, 0 );                        var idwariChuScale = stringIDToTypeID( "wariChuScale" );                        desc1945.putDouble( idwariChuScale, 0.500000 );                        var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );                        desc1945.putInteger( idwariChuWidow, 2 );                        var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );                        desc1945.putInteger( idwariChuOrphan, 2 );                        var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                        var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                        var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );                        desc1945.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );                        var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );                        desc1945.putInteger( idtcyUpDown, 0 );                        var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );                        desc1945.putInteger( idtcyLeftRight, 0 );                        var idleftAki = stringIDToTypeID( "leftAki" );                        desc1945.putDouble( idleftAki, -1.000000 );                        var idrightAki = stringIDToTypeID( "rightAki" );                        desc1945.putDouble( idrightAki, -1.000000 );                        var idjiDori = stringIDToTypeID( "jiDori" );                        desc1945.putInteger( idjiDori, 0 );                        var idnoBreak = stringIDToTypeID( "noBreak" );                        desc1945.putBoolean( idnoBreak, false );                        var idClr = charIDToTypeID( "Clr " );                            var desc1946 = new ActionDescriptor();                            var idCyn = charIDToTypeID( "Cyn " );                            desc1946.putDouble( idCyn, 74.520000 );                            var idMgnt = charIDToTypeID( "Mgnt" );                            desc1946.putDouble( idMgnt, 67.780000 );                            var idYlw = charIDToTypeID( "Ylw " );                            desc1946.putDouble( idYlw, 67.130000 );                            var idBlck = charIDToTypeID( "Blck" );                            desc1946.putDouble( idBlck, 89.630000 );                        var idCMYC = charIDToTypeID( "CMYC" );                        desc1945.putObject( idClr, idCMYC, desc1946 );                        var idstrokeColor = stringIDToTypeID( "strokeColor" );                            var desc1947 = new ActionDescriptor();                            var idCyn = charIDToTypeID( "Cyn " );                            desc1947.putDouble( idCyn, 74.520000 );                            var idMgnt = charIDToTypeID( "Mgnt" );                            desc1947.putDouble( idMgnt, 67.780000 );                            var idYlw = charIDToTypeID( "Ylw " );                            desc1947.putDouble( idYlw, 67.130000 );                            var idBlck = charIDToTypeID( "Blck" );                            desc1947.putDouble( idBlck, 89.630000 );                        var idCMYC = charIDToTypeID( "CMYC" );                        desc1945.putObject( idstrokeColor, idCMYC, desc1947 );                        var idFl = charIDToTypeID( "Fl  " );                        desc1945.putBoolean( idFl, true );                        var idStrk = charIDToTypeID( "Strk" );                        desc1945.putBoolean( idStrk, false );                        var idfillFirst = stringIDToTypeID( "fillFirst" );                        desc1945.putBoolean( idfillFirst, true );                        var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );                        desc1945.putBoolean( idfillOverPrint, false );                        var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );                        desc1945.putBoolean( idstrokeOverPrint, false );                        var idlineCap = stringIDToTypeID( "lineCap" );                        var idlineCap = stringIDToTypeID( "lineCap" );                        var idbuttCap = stringIDToTypeID( "buttCap" );                        desc1945.putEnumerated( idlineCap, idlineCap, idbuttCap );                        var idlineJoin = stringIDToTypeID( "lineJoin" );                        var idlineJoin = stringIDToTypeID( "lineJoin" );                        var idmiterJoin = stringIDToTypeID( "miterJoin" );                        desc1945.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );                        var idlineWidth = stringIDToTypeID( "lineWidth" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1945.putUnitDouble( idlineWidth, idPnt, 0.240000 );                        var idmiterLimit = stringIDToTypeID( "miterLimit" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1945.putUnitDouble( idmiterLimit, idPnt, 0.960000 );                        var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );                        desc1945.putDouble( idlineDashoffset, 0.000000 );                    var idTxtS = charIDToTypeID( "TxtS" );                    desc1944.putObject( iddefaultStyle, idTxtS, desc1945 );                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );                desc1943.putObject( idparagraphStyle, idparagraphStyle, desc1944 );            var idparagraphStyleRange = stringIDToTypeID( "paragraphStyleRange" );            list105.putObject( idparagraphStyleRange, desc1943 );                var desc1948 = new ActionDescriptor();                var idFrom = charIDToTypeID( "From" );                desc1948.putInteger( idFrom, 1793 );                var idT = charIDToTypeID( "T   " );                desc1948.putInteger( idT, 2049 );                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );                    var desc1949 = new ActionDescriptor();                    var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );                    desc1949.putBoolean( idstyleSheetHasParent, true );                    var idAlgn = charIDToTypeID( "Algn" );                    var idAlg = charIDToTypeID( "Alg " );                    var idjustifyLeft = stringIDToTypeID( "justifyLeft" );                    desc1949.putEnumerated( idAlgn, idAlg, idjustifyLeft );                    var idfirstLineIndent = stringIDToTypeID( "firstLineIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1949.putUnitDouble( idfirstLineIndent, idPnt, 23.828448 );                    var idstartIndent = stringIDToTypeID( "startIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1949.putUnitDouble( idstartIndent, idPnt, 0.000000 );                    var idendIndent = stringIDToTypeID( "endIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1949.putUnitDouble( idendIndent, idPnt, 0.000000 );                    var idspaceBefore = stringIDToTypeID( "spaceBefore" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1949.putUnitDouble( idspaceBefore, idPnt, 0.150494 );                    var idspaceAfter = stringIDToTypeID( "spaceAfter" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1949.putUnitDouble( idspaceAfter, idPnt, 0.000000 );                    var iddropCapMultiplier = stringIDToTypeID( "dropCapMultiplier" );                    desc1949.putInteger( iddropCapMultiplier, 1 );                    var idautoLeadingPercentage = stringIDToTypeID( "autoLeadingPercentage" );                    desc1949.putDouble( idautoLeadingPercentage, 1.750000 );                    var idleadingType = stringIDToTypeID( "leadingType" );                    var idleadingType = stringIDToTypeID( "leadingType" );                    var idleadingAbove = stringIDToTypeID( "leadingAbove" );                    desc1949.putEnumerated( idleadingType, idleadingType, idleadingAbove );                    var idhyphenate = stringIDToTypeID( "hyphenate" );                    desc1949.putBoolean( idhyphenate, true );                    var idhyphenateWordSize = stringIDToTypeID( "hyphenateWordSize" );                    desc1949.putInteger( idhyphenateWordSize, 6 );                    var idhyphenatePreLength = stringIDToTypeID( "hyphenatePreLength" );                    desc1949.putInteger( idhyphenatePreLength, 2 );                    var idhyphenatePostLength = stringIDToTypeID( "hyphenatePostLength" );                    desc1949.putInteger( idhyphenatePostLength, 2 );                    var idhyphenateLimit = stringIDToTypeID( "hyphenateLimit" );                    desc1949.putInteger( idhyphenateLimit, 0 );                    var idhyphenationZone = stringIDToTypeID( "hyphenationZone" );                    desc1949.putDouble( idhyphenationZone, 36.000000 );                    var idhyphenateCapitalized = stringIDToTypeID( "hyphenateCapitalized" );                    desc1949.putBoolean( idhyphenateCapitalized, true );                    var idhyphenationPreference = stringIDToTypeID( "hyphenationPreference" );                    desc1949.putDouble( idhyphenationPreference, 0.500000 );                    var idjustificationWordMinimum = stringIDToTypeID( "justificationWordMinimum" );                    desc1949.putDouble( idjustificationWordMinimum, 0.800000 );                    var idjustificationWordDesired = stringIDToTypeID( "justificationWordDesired" );                    desc1949.putDouble( idjustificationWordDesired, 1.000000 );                    var idjustificationWordMaximum = stringIDToTypeID( "justificationWordMaximum" );                    desc1949.putDouble( idjustificationWordMaximum, 1.330000 );                    var idjustificationLetterMinimum = stringIDToTypeID( "justificationLetterMinimum" );                    desc1949.putDouble( idjustificationLetterMinimum, 0.000000 );                    var idjustificationLetterDesired = stringIDToTypeID( "justificationLetterDesired" );                    desc1949.putDouble( idjustificationLetterDesired, 0.000000 );                    var idjustificationLetterMaximum = stringIDToTypeID( "justificationLetterMaximum" );                    desc1949.putDouble( idjustificationLetterMaximum, 0.000000 );                    var idjustificationGlyphMinimum = stringIDToTypeID( "justificationGlyphMinimum" );                    desc1949.putDouble( idjustificationGlyphMinimum, 1.000000 );                    var idjustificationGlyphDesired = stringIDToTypeID( "justificationGlyphDesired" );                    desc1949.putDouble( idjustificationGlyphDesired, 1.000000 );                    var idjustificationGlyphMaximum = stringIDToTypeID( "justificationGlyphMaximum" );                    desc1949.putDouble( idjustificationGlyphMaximum, 1.000000 );                    var idsingleWordJustification = stringIDToTypeID( "singleWordJustification" );                    var idAlg = charIDToTypeID( "Alg " );                    var idJstA = charIDToTypeID( "JstA" );                    desc1949.putEnumerated( idsingleWordJustification, idAlg, idJstA );                    var idhangingRoman = stringIDToTypeID( "hangingRoman" );                    desc1949.putBoolean( idhangingRoman, false );                    var idautoTCY = stringIDToTypeID( "autoTCY" );                    desc1949.putInteger( idautoTCY, 1 );                    var idkeepTogether = stringIDToTypeID( "keepTogether" );                    desc1949.putBoolean( idkeepTogether, true );                    var idburasagari = stringIDToTypeID( "burasagari" );                    var idburasagari = stringIDToTypeID( "burasagari" );                    var idburasagariNone = stringIDToTypeID( "burasagariNone" );                    desc1949.putEnumerated( idburasagari, idburasagari, idburasagariNone );                    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );                    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );                    var idpushIn = stringIDToTypeID( "pushIn" );                    desc1949.putEnumerated( idpreferredKinsokuOrder, idpreferredKinsokuOrder, idpushIn );                    var idkurikaeshiMojiShori = stringIDToTypeID( "kurikaeshiMojiShori" );                    desc1949.putBoolean( idkurikaeshiMojiShori, false );                    var idkinsokuSetName = stringIDToTypeID( "kinsokuSetName" );                    var idkinsokuSetName = stringIDToTypeID( "kinsokuSetName" );                    var idSoft = stringIDToTypeID( "Soft" );                    desc1949.putEnumerated( idkinsokuSetName, idkinsokuSetName, idSoft );                    var idmojiKumiName = stringIDToTypeID( "mojiKumiName" );                    var idmojiKumiName = stringIDToTypeID( "mojiKumiName" );                    var idPhotoshopsixMojiKumiSetone = stringIDToTypeID( "Photoshop6MojiKumiSet1" );                    desc1949.putEnumerated( idmojiKumiName, idmojiKumiName, idPhotoshopsixMojiKumiSetone );                    var idtextEveryLineComposer = stringIDToTypeID( "textEveryLineComposer" );                    desc1949.putBoolean( idtextEveryLineComposer, false );                    var iddefaultTabWidth = stringIDToTypeID( "defaultTabWidth" );                    desc1949.putDouble( iddefaultTabWidth, 36.000000 );                    var iddefaultStyle = stringIDToTypeID( "defaultStyle" );                        var desc1950 = new ActionDescriptor();                        var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );                        desc1950.putString( idfontPostScriptName, """FZBWKSJW--GB1-0""" );                        var idFntN = charIDToTypeID( "FntN" );                        desc1950.putString( idFntN, """FZBWKSJW""" );                        var idFntS = charIDToTypeID( "FntS" );                        desc1950.putString( idFntS, """-GB1-0""" );                        var idScrp = charIDToTypeID( "Scrp" );                        desc1950.putInteger( idScrp, 25 );                        var idFntT = charIDToTypeID( "FntT" );                        desc1950.putInteger( idFntT, 2 );                        var idSz = charIDToTypeID( "Sz  " );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1950.putUnitDouble( idSz, idPnt, 2.880000 );                        var idHrzS = charIDToTypeID( "HrzS" );                        desc1950.putDouble( idHrzS, 100.000000 );                        var idVrtS = charIDToTypeID( "VrtS" );                        desc1950.putDouble( idVrtS, 100.000000 );                        var idsyntheticBold = stringIDToTypeID( "syntheticBold" );                        desc1950.putBoolean( idsyntheticBold, false );                        var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );                        desc1950.putBoolean( idsyntheticItalic, false );                        var idautoLeading = stringIDToTypeID( "autoLeading" );                        desc1950.putBoolean( idautoLeading, true );                        var idTrck = charIDToTypeID( "Trck" );                        desc1950.putInteger( idTrck, 0 );                        var idBsln = charIDToTypeID( "Bsln" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1950.putUnitDouble( idBsln, idPnt, 0.000000 );                        var idcharacterRotation = stringIDToTypeID( "characterRotation" );                        desc1950.putDouble( idcharacterRotation, 0.000000 );                        var idfontCaps = stringIDToTypeID( "fontCaps" );                        var idfontCaps = stringIDToTypeID( "fontCaps" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1950.putEnumerated( idfontCaps, idfontCaps, idNrml );                        var idbaseline = stringIDToTypeID( "baseline" );                        var idbaseline = stringIDToTypeID( "baseline" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1950.putEnumerated( idbaseline, idbaseline, idNrml );                        var idotbaseline = stringIDToTypeID( "otbaseline" );                        var idotbaseline = stringIDToTypeID( "otbaseline" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1950.putEnumerated( idotbaseline, idotbaseline, idNrml );                        var idstrikethrough = stringIDToTypeID( "strikethrough" );                        var idstrikethrough = stringIDToTypeID( "strikethrough" );                        var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );                        desc1950.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );                        var idUndl = charIDToTypeID( "Undl" );                        var idUndl = charIDToTypeID( "Undl" );                        var idunderlineOff = stringIDToTypeID( "underlineOff" );                        desc1950.putEnumerated( idUndl, idUndl, idunderlineOff );                        var idunderlineOffset = stringIDToTypeID( "underlineOffset" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1950.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );                        var idligature = stringIDToTypeID( "ligature" );                        desc1950.putBoolean( idligature, true );                        var idaltligature = stringIDToTypeID( "altligature" );                        desc1950.putBoolean( idaltligature, false );                        var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );                        desc1950.putBoolean( idcontextualLigatures, false );                        var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );                        desc1950.putBoolean( idalternateLigatures, false );                        var idoldStyle = stringIDToTypeID( "oldStyle" );                        desc1950.putBoolean( idoldStyle, false );                        var idfractions = stringIDToTypeID( "fractions" );                        desc1950.putBoolean( idfractions, false );                        var idordinals = stringIDToTypeID( "ordinals" );                        desc1950.putBoolean( idordinals, false );                        var idswash = stringIDToTypeID( "swash" );                        desc1950.putBoolean( idswash, false );                        var idtitling = stringIDToTypeID( "titling" );                        desc1950.putBoolean( idtitling, false );                        var idconnectionForms = stringIDToTypeID( "connectionForms" );                        desc1950.putBoolean( idconnectionForms, false );                        var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );                        desc1950.putBoolean( idstylisticAlternates, false );                        var idornaments = stringIDToTypeID( "ornaments" );                        desc1950.putBoolean( idornaments, false );                        var idfigureStyle = stringIDToTypeID( "figureStyle" );                        var idfigureStyle = stringIDToTypeID( "figureStyle" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1950.putEnumerated( idfigureStyle, idfigureStyle, idNrml );                        var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );                        desc1950.putBoolean( idproportionalMetrics, false );                        var idkana = stringIDToTypeID( "kana" );                        desc1950.putBoolean( idkana, false );                        var iditalics = stringIDToTypeID( "italics" );                        desc1950.putBoolean( iditalics, false );                        var idruby = stringIDToTypeID( "ruby" );                        desc1950.putBoolean( idruby, false );                        var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                        var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                        var idrotated = stringIDToTypeID( "rotated" );                        desc1950.putEnumerated( idbaselineDirection, idbaselineDirection, idrotated );                        var idtextLanguage = stringIDToTypeID( "textLanguage" );                        var idtextLanguage = stringIDToTypeID( "textLanguage" );                        var idenglishLanguage = stringIDToTypeID( "englishLanguage" );                        desc1950.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );                        var idmojiZume = stringIDToTypeID( "mojiZume" );                        desc1950.putDouble( idmojiZume, 0.000000 );                        var idgridAlignment = stringIDToTypeID( "gridAlignment" );                        var idgridAlignment = stringIDToTypeID( "gridAlignment" );                        var idroman = stringIDToTypeID( "roman" );                        desc1950.putEnumerated( idgridAlignment, idgridAlignment, idroman );                        var idenableWariChu = stringIDToTypeID( "enableWariChu" );                        desc1950.putBoolean( idenableWariChu, false );                        var idwariChuCount = stringIDToTypeID( "wariChuCount" );                        desc1950.putInteger( idwariChuCount, 2 );                        var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );                        desc1950.putInteger( idwariChuLineGap, 0 );                        var idwariChuScale = stringIDToTypeID( "wariChuScale" );                        desc1950.putDouble( idwariChuScale, 0.500000 );                        var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );                        desc1950.putInteger( idwariChuWidow, 2 );                        var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );                        desc1950.putInteger( idwariChuOrphan, 2 );                        var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                        var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                        var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );                        desc1950.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );                        var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );                        desc1950.putInteger( idtcyUpDown, 0 );                        var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );                        desc1950.putInteger( idtcyLeftRight, 0 );                        var idleftAki = stringIDToTypeID( "leftAki" );                        desc1950.putDouble( idleftAki, -1.000000 );                        var idrightAki = stringIDToTypeID( "rightAki" );                        desc1950.putDouble( idrightAki, -1.000000 );                        var idjiDori = stringIDToTypeID( "jiDori" );                        desc1950.putInteger( idjiDori, 0 );                        var idnoBreak = stringIDToTypeID( "noBreak" );                        desc1950.putBoolean( idnoBreak, false );                        var idClr = charIDToTypeID( "Clr " );                            var desc1951 = new ActionDescriptor();                            var idCyn = charIDToTypeID( "Cyn " );                            desc1951.putDouble( idCyn, 74.520000 );                            var idMgnt = charIDToTypeID( "Mgnt" );                            desc1951.putDouble( idMgnt, 67.780000 );                            var idYlw = charIDToTypeID( "Ylw " );                            desc1951.putDouble( idYlw, 67.130000 );                            var idBlck = charIDToTypeID( "Blck" );                            desc1951.putDouble( idBlck, 89.630000 );                        var idCMYC = charIDToTypeID( "CMYC" );                        desc1950.putObject( idClr, idCMYC, desc1951 );                        var idstrokeColor = stringIDToTypeID( "strokeColor" );                            var desc1952 = new ActionDescriptor();                            var idCyn = charIDToTypeID( "Cyn " );                            desc1952.putDouble( idCyn, 74.520000 );                            var idMgnt = charIDToTypeID( "Mgnt" );                            desc1952.putDouble( idMgnt, 67.780000 );                            var idYlw = charIDToTypeID( "Ylw " );                            desc1952.putDouble( idYlw, 67.130000 );                            var idBlck = charIDToTypeID( "Blck" );                            desc1952.putDouble( idBlck, 89.630000 );                        var idCMYC = charIDToTypeID( "CMYC" );                        desc1950.putObject( idstrokeColor, idCMYC, desc1952 );                        var idFl = charIDToTypeID( "Fl  " );                        desc1950.putBoolean( idFl, true );                        var idStrk = charIDToTypeID( "Strk" );                        desc1950.putBoolean( idStrk, false );                        var idfillFirst = stringIDToTypeID( "fillFirst" );                        desc1950.putBoolean( idfillFirst, true );                        var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );                        desc1950.putBoolean( idfillOverPrint, false );                        var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );                        desc1950.putBoolean( idstrokeOverPrint, false );                        var idlineCap = stringIDToTypeID( "lineCap" );                        var idlineCap = stringIDToTypeID( "lineCap" );                        var idbuttCap = stringIDToTypeID( "buttCap" );                        desc1950.putEnumerated( idlineCap, idlineCap, idbuttCap );                        var idlineJoin = stringIDToTypeID( "lineJoin" );                        var idlineJoin = stringIDToTypeID( "lineJoin" );                        var idmiterJoin = stringIDToTypeID( "miterJoin" );                        desc1950.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );                        var idlineWidth = stringIDToTypeID( "lineWidth" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1950.putUnitDouble( idlineWidth, idPnt, 0.240000 );                        var idmiterLimit = stringIDToTypeID( "miterLimit" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1950.putUnitDouble( idmiterLimit, idPnt, 0.960000 );                        var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );                        desc1950.putDouble( idlineDashoffset, 0.000000 );                    var idTxtS = charIDToTypeID( "TxtS" );                    desc1949.putObject( iddefaultStyle, idTxtS, desc1950 );                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );                desc1948.putObject( idparagraphStyle, idparagraphStyle, desc1949 );            var idparagraphStyleRange = stringIDToTypeID( "paragraphStyleRange" );            list105.putObject( idparagraphStyleRange, desc1948 );                var desc1953 = new ActionDescriptor();                var idFrom = charIDToTypeID( "From" );                desc1953.putInteger( idFrom, 2049 );                var idT = charIDToTypeID( "T   " );                desc1953.putInteger( idT, 2305 );                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );                    var desc1954 = new ActionDescriptor();                    var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );                    desc1954.putBoolean( idstyleSheetHasParent, true );                    var idAlgn = charIDToTypeID( "Algn" );                    var idAlg = charIDToTypeID( "Alg " );                    var idjustifyLeft = stringIDToTypeID( "justifyLeft" );                    desc1954.putEnumerated( idAlgn, idAlg, idjustifyLeft );                    var idfirstLineIndent = stringIDToTypeID( "firstLineIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1954.putUnitDouble( idfirstLineIndent, idPnt, 23.828448 );                    var idstartIndent = stringIDToTypeID( "startIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1954.putUnitDouble( idstartIndent, idPnt, 0.000000 );                    var idendIndent = stringIDToTypeID( "endIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1954.putUnitDouble( idendIndent, idPnt, 0.000000 );                    var idspaceBefore = stringIDToTypeID( "spaceBefore" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1954.putUnitDouble( idspaceBefore, idPnt, 0.150494 );                    var idspaceAfter = stringIDToTypeID( "spaceAfter" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1954.putUnitDouble( idspaceAfter, idPnt, 0.000000 );                    var iddropCapMultiplier = stringIDToTypeID( "dropCapMultiplier" );                    desc1954.putInteger( iddropCapMultiplier, 1 );                    var idautoLeadingPercentage = stringIDToTypeID( "autoLeadingPercentage" );                    desc1954.putDouble( idautoLeadingPercentage, 1.750000 );                    var idleadingType = stringIDToTypeID( "leadingType" );                    var idleadingType = stringIDToTypeID( "leadingType" );                    var idleadingAbove = stringIDToTypeID( "leadingAbove" );                    desc1954.putEnumerated( idleadingType, idleadingType, idleadingAbove );                    var idhyphenate = stringIDToTypeID( "hyphenate" );                    desc1954.putBoolean( idhyphenate, true );                    var idhyphenateWordSize = stringIDToTypeID( "hyphenateWordSize" );                    desc1954.putInteger( idhyphenateWordSize, 6 );                    var idhyphenatePreLength = stringIDToTypeID( "hyphenatePreLength" );                    desc1954.putInteger( idhyphenatePreLength, 2 );                    var idhyphenatePostLength = stringIDToTypeID( "hyphenatePostLength" );                    desc1954.putInteger( idhyphenatePostLength, 2 );                    var idhyphenateLimit = stringIDToTypeID( "hyphenateLimit" );                    desc1954.putInteger( idhyphenateLimit, 0 );                    var idhyphenationZone = stringIDToTypeID( "hyphenationZone" );                    desc1954.putDouble( idhyphenationZone, 36.000000 );                    var idhyphenateCapitalized = stringIDToTypeID( "hyphenateCapitalized" );                    desc1954.putBoolean( idhyphenateCapitalized, true );                    var idhyphenationPreference = stringIDToTypeID( "hyphenationPreference" );                    desc1954.putDouble( idhyphenationPreference, 0.500000 );                    var idjustificationWordMinimum = stringIDToTypeID( "justificationWordMinimum" );                    desc1954.putDouble( idjustificationWordMinimum, 0.800000 );                    var idjustificationWordDesired = stringIDToTypeID( "justificationWordDesired" );                    desc1954.putDouble( idjustificationWordDesired, 1.000000 );                    var idjustificationWordMaximum = stringIDToTypeID( "justificationWordMaximum" );                    desc1954.putDouble( idjustificationWordMaximum, 1.330000 );                    var idjustificationLetterMinimum = stringIDToTypeID( "justificationLetterMinimum" );                    desc1954.putDouble( idjustificationLetterMinimum, 0.000000 );                    var idjustificationLetterDesired = stringIDToTypeID( "justificationLetterDesired" );                    desc1954.putDouble( idjustificationLetterDesired, 0.000000 );                    var idjustificationLetterMaximum = stringIDToTypeID( "justificationLetterMaximum" );                    desc1954.putDouble( idjustificationLetterMaximum, 0.000000 );                    var idjustificationGlyphMinimum = stringIDToTypeID( "justificationGlyphMinimum" );                    desc1954.putDouble( idjustificationGlyphMinimum, 1.000000 );                    var idjustificationGlyphDesired = stringIDToTypeID( "justificationGlyphDesired" );                    desc1954.putDouble( idjustificationGlyphDesired, 1.000000 );                    var idjustificationGlyphMaximum = stringIDToTypeID( "justificationGlyphMaximum" );                    desc1954.putDouble( idjustificationGlyphMaximum, 1.000000 );                    var idsingleWordJustification = stringIDToTypeID( "singleWordJustification" );                    var idAlg = charIDToTypeID( "Alg " );                    var idJstA = charIDToTypeID( "JstA" );                    desc1954.putEnumerated( idsingleWordJustification, idAlg, idJstA );                    var idhangingRoman = stringIDToTypeID( "hangingRoman" );                    desc1954.putBoolean( idhangingRoman, false );                    var idautoTCY = stringIDToTypeID( "autoTCY" );                    desc1954.putInteger( idautoTCY, 1 );                    var idkeepTogether = stringIDToTypeID( "keepTogether" );                    desc1954.putBoolean( idkeepTogether, true );                    var idburasagari = stringIDToTypeID( "burasagari" );                    var idburasagari = stringIDToTypeID( "burasagari" );                    var idburasagariNone = stringIDToTypeID( "burasagariNone" );                    desc1954.putEnumerated( idburasagari, idburasagari, idburasagariNone );                    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );                    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );                    var idpushIn = stringIDToTypeID( "pushIn" );                    desc1954.putEnumerated( idpreferredKinsokuOrder, idpreferredKinsokuOrder, idpushIn );                    var idkurikaeshiMojiShori = stringIDToTypeID( "kurikaeshiMojiShori" );                    desc1954.putBoolean( idkurikaeshiMojiShori, false );                    var idkinsokuSetName = stringIDToTypeID( "kinsokuSetName" );                    var idkinsokuSetName = stringIDToTypeID( "kinsokuSetName" );                    var idSoft = stringIDToTypeID( "Soft" );                    desc1954.putEnumerated( idkinsokuSetName, idkinsokuSetName, idSoft );                    var idmojiKumiName = stringIDToTypeID( "mojiKumiName" );                    var idmojiKumiName = stringIDToTypeID( "mojiKumiName" );                    var idPhotoshopsixMojiKumiSetone = stringIDToTypeID( "Photoshop6MojiKumiSet1" );                    desc1954.putEnumerated( idmojiKumiName, idmojiKumiName, idPhotoshopsixMojiKumiSetone );                    var idtextEveryLineComposer = stringIDToTypeID( "textEveryLineComposer" );                    desc1954.putBoolean( idtextEveryLineComposer, false );                    var iddefaultTabWidth = stringIDToTypeID( "defaultTabWidth" );                    desc1954.putDouble( iddefaultTabWidth, 36.000000 );                    var iddefaultStyle = stringIDToTypeID( "defaultStyle" );                        var desc1955 = new ActionDescriptor();                        var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );                        desc1955.putString( idfontPostScriptName, """FZBWKSJW--GB1-0""" );                        var idFntN = charIDToTypeID( "FntN" );                        desc1955.putString( idFntN, """FZBWKSJW""" );                        var idFntS = charIDToTypeID( "FntS" );                        desc1955.putString( idFntS, """-GB1-0""" );                        var idScrp = charIDToTypeID( "Scrp" );                        desc1955.putInteger( idScrp, 25 );                        var idFntT = charIDToTypeID( "FntT" );                        desc1955.putInteger( idFntT, 2 );                        var idSz = charIDToTypeID( "Sz  " );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1955.putUnitDouble( idSz, idPnt, 2.880000 );                        var idHrzS = charIDToTypeID( "HrzS" );                        desc1955.putDouble( idHrzS, 100.000000 );                        var idVrtS = charIDToTypeID( "VrtS" );                        desc1955.putDouble( idVrtS, 100.000000 );                        var idsyntheticBold = stringIDToTypeID( "syntheticBold" );                        desc1955.putBoolean( idsyntheticBold, false );                        var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );                        desc1955.putBoolean( idsyntheticItalic, false );                        var idautoLeading = stringIDToTypeID( "autoLeading" );                        desc1955.putBoolean( idautoLeading, true );                        var idTrck = charIDToTypeID( "Trck" );                        desc1955.putInteger( idTrck, 0 );                        var idBsln = charIDToTypeID( "Bsln" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1955.putUnitDouble( idBsln, idPnt, 0.000000 );                        var idcharacterRotation = stringIDToTypeID( "characterRotation" );                        desc1955.putDouble( idcharacterRotation, 0.000000 );                        var idfontCaps = stringIDToTypeID( "fontCaps" );                        var idfontCaps = stringIDToTypeID( "fontCaps" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1955.putEnumerated( idfontCaps, idfontCaps, idNrml );                        var idbaseline = stringIDToTypeID( "baseline" );                        var idbaseline = stringIDToTypeID( "baseline" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1955.putEnumerated( idbaseline, idbaseline, idNrml );                        var idotbaseline = stringIDToTypeID( "otbaseline" );                        var idotbaseline = stringIDToTypeID( "otbaseline" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1955.putEnumerated( idotbaseline, idotbaseline, idNrml );                        var idstrikethrough = stringIDToTypeID( "strikethrough" );                        var idstrikethrough = stringIDToTypeID( "strikethrough" );                        var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );                        desc1955.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );                        var idUndl = charIDToTypeID( "Undl" );                        var idUndl = charIDToTypeID( "Undl" );                        var idunderlineOff = stringIDToTypeID( "underlineOff" );                        desc1955.putEnumerated( idUndl, idUndl, idunderlineOff );                        var idunderlineOffset = stringIDToTypeID( "underlineOffset" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1955.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );                        var idligature = stringIDToTypeID( "ligature" );                        desc1955.putBoolean( idligature, true );                        var idaltligature = stringIDToTypeID( "altligature" );                        desc1955.putBoolean( idaltligature, false );                        var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );                        desc1955.putBoolean( idcontextualLigatures, false );                        var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );                        desc1955.putBoolean( idalternateLigatures, false );                        var idoldStyle = stringIDToTypeID( "oldStyle" );                        desc1955.putBoolean( idoldStyle, false );                        var idfractions = stringIDToTypeID( "fractions" );                        desc1955.putBoolean( idfractions, false );                        var idordinals = stringIDToTypeID( "ordinals" );                        desc1955.putBoolean( idordinals, false );                        var idswash = stringIDToTypeID( "swash" );                        desc1955.putBoolean( idswash, false );                        var idtitling = stringIDToTypeID( "titling" );                        desc1955.putBoolean( idtitling, false );                        var idconnectionForms = stringIDToTypeID( "connectionForms" );                        desc1955.putBoolean( idconnectionForms, false );                        var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );                        desc1955.putBoolean( idstylisticAlternates, false );                        var idornaments = stringIDToTypeID( "ornaments" );                        desc1955.putBoolean( idornaments, false );                        var idfigureStyle = stringIDToTypeID( "figureStyle" );                        var idfigureStyle = stringIDToTypeID( "figureStyle" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1955.putEnumerated( idfigureStyle, idfigureStyle, idNrml );                        var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );                        desc1955.putBoolean( idproportionalMetrics, false );                        var idkana = stringIDToTypeID( "kana" );                        desc1955.putBoolean( idkana, false );                        var iditalics = stringIDToTypeID( "italics" );                        desc1955.putBoolean( iditalics, false );                        var idruby = stringIDToTypeID( "ruby" );                        desc1955.putBoolean( idruby, false );                        var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                        var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                        var idrotated = stringIDToTypeID( "rotated" );                        desc1955.putEnumerated( idbaselineDirection, idbaselineDirection, idrotated );                        var idtextLanguage = stringIDToTypeID( "textLanguage" );                        var idtextLanguage = stringIDToTypeID( "textLanguage" );                        var idenglishLanguage = stringIDToTypeID( "englishLanguage" );                        desc1955.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );                        var idmojiZume = stringIDToTypeID( "mojiZume" );                        desc1955.putDouble( idmojiZume, 0.000000 );                        var idgridAlignment = stringIDToTypeID( "gridAlignment" );                        var idgridAlignment = stringIDToTypeID( "gridAlignment" );                        var idroman = stringIDToTypeID( "roman" );                        desc1955.putEnumerated( idgridAlignment, idgridAlignment, idroman );                        var idenableWariChu = stringIDToTypeID( "enableWariChu" );                        desc1955.putBoolean( idenableWariChu, false );                        var idwariChuCount = stringIDToTypeID( "wariChuCount" );                        desc1955.putInteger( idwariChuCount, 2 );                        var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );                        desc1955.putInteger( idwariChuLineGap, 0 );                        var idwariChuScale = stringIDToTypeID( "wariChuScale" );                        desc1955.putDouble( idwariChuScale, 0.500000 );                        var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );                        desc1955.putInteger( idwariChuWidow, 2 );                        var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );                        desc1955.putInteger( idwariChuOrphan, 2 );                        var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                        var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                        var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );                        desc1955.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );                        var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );                        desc1955.putInteger( idtcyUpDown, 0 );                        var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );                        desc1955.putInteger( idtcyLeftRight, 0 );                        var idleftAki = stringIDToTypeID( "leftAki" );                        desc1955.putDouble( idleftAki, -1.000000 );                        var idrightAki = stringIDToTypeID( "rightAki" );                        desc1955.putDouble( idrightAki, -1.000000 );                        var idjiDori = stringIDToTypeID( "jiDori" );                        desc1955.putInteger( idjiDori, 0 );                        var idnoBreak = stringIDToTypeID( "noBreak" );                        desc1955.putBoolean( idnoBreak, false );                        var idClr = charIDToTypeID( "Clr " );                            var desc1956 = new ActionDescriptor();                            var idCyn = charIDToTypeID( "Cyn " );                            desc1956.putDouble( idCyn, 74.520000 );                            var idMgnt = charIDToTypeID( "Mgnt" );                            desc1956.putDouble( idMgnt, 67.780000 );                            var idYlw = charIDToTypeID( "Ylw " );                            desc1956.putDouble( idYlw, 67.130000 );                            var idBlck = charIDToTypeID( "Blck" );                            desc1956.putDouble( idBlck, 89.630000 );                        var idCMYC = charIDToTypeID( "CMYC" );                        desc1955.putObject( idClr, idCMYC, desc1956 );                        var idstrokeColor = stringIDToTypeID( "strokeColor" );                            var desc1957 = new ActionDescriptor();                            var idCyn = charIDToTypeID( "Cyn " );                            desc1957.putDouble( idCyn, 74.520000 );                            var idMgnt = charIDToTypeID( "Mgnt" );                            desc1957.putDouble( idMgnt, 67.780000 );                            var idYlw = charIDToTypeID( "Ylw " );                            desc1957.putDouble( idYlw, 67.130000 );                            var idBlck = charIDToTypeID( "Blck" );                            desc1957.putDouble( idBlck, 89.630000 );                        var idCMYC = charIDToTypeID( "CMYC" );                        desc1955.putObject( idstrokeColor, idCMYC, desc1957 );                        var idFl = charIDToTypeID( "Fl  " );                        desc1955.putBoolean( idFl, true );                        var idStrk = charIDToTypeID( "Strk" );                        desc1955.putBoolean( idStrk, false );                        var idfillFirst = stringIDToTypeID( "fillFirst" );                        desc1955.putBoolean( idfillFirst, true );                        var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );                        desc1955.putBoolean( idfillOverPrint, false );                        var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );                        desc1955.putBoolean( idstrokeOverPrint, false );                        var idlineCap = stringIDToTypeID( "lineCap" );                        var idlineCap = stringIDToTypeID( "lineCap" );                        var idbuttCap = stringIDToTypeID( "buttCap" );                        desc1955.putEnumerated( idlineCap, idlineCap, idbuttCap );                        var idlineJoin = stringIDToTypeID( "lineJoin" );                        var idlineJoin = stringIDToTypeID( "lineJoin" );                        var idmiterJoin = stringIDToTypeID( "miterJoin" );                        desc1955.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );                        var idlineWidth = stringIDToTypeID( "lineWidth" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1955.putUnitDouble( idlineWidth, idPnt, 0.240000 );                        var idmiterLimit = stringIDToTypeID( "miterLimit" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1955.putUnitDouble( idmiterLimit, idPnt, 0.960000 );                        var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );                        desc1955.putDouble( idlineDashoffset, 0.000000 );                    var idTxtS = charIDToTypeID( "TxtS" );                    desc1954.putObject( iddefaultStyle, idTxtS, desc1955 );                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );                desc1953.putObject( idparagraphStyle, idparagraphStyle, desc1954 );            var idparagraphStyleRange = stringIDToTypeID( "paragraphStyleRange" );            list105.putObject( idparagraphStyleRange, desc1953 );                var desc1958 = new ActionDescriptor();                var idFrom = charIDToTypeID( "From" );                desc1958.putInteger( idFrom, 2305 );                var idT = charIDToTypeID( "T   " );                desc1958.putInteger( idT, 2306 );                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );                    var desc1959 = new ActionDescriptor();                    var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );                    desc1959.putBoolean( idstyleSheetHasParent, true );                    var idAlgn = charIDToTypeID( "Algn" );                    var idAlg = charIDToTypeID( "Alg " );                    var idjustifyLeft = stringIDToTypeID( "justifyLeft" );                    desc1959.putEnumerated( idAlgn, idAlg, idjustifyLeft );                    var idfirstLineIndent = stringIDToTypeID( "firstLineIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1959.putUnitDouble( idfirstLineIndent, idPnt, 23.828448 );                    var idstartIndent = stringIDToTypeID( "startIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1959.putUnitDouble( idstartIndent, idPnt, 0.000000 );                    var idendIndent = stringIDToTypeID( "endIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1959.putUnitDouble( idendIndent, idPnt, 0.000000 );                    var idspaceBefore = stringIDToTypeID( "spaceBefore" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1959.putUnitDouble( idspaceBefore, idPnt, 0.150494 );                    var idspaceAfter = stringIDToTypeID( "spaceAfter" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1959.putUnitDouble( idspaceAfter, idPnt, 0.000000 );                    var iddropCapMultiplier = stringIDToTypeID( "dropCapMultiplier" );                    desc1959.putInteger( iddropCapMultiplier, 1 );                    var idautoLeadingPercentage = stringIDToTypeID( "autoLeadingPercentage" );                    desc1959.putDouble( idautoLeadingPercentage, 1.750000 );                    var idleadingType = stringIDToTypeID( "leadingType" );                    var idleadingType = stringIDToTypeID( "leadingType" );                    var idleadingAbove = stringIDToTypeID( "leadingAbove" );                    desc1959.putEnumerated( idleadingType, idleadingType, idleadingAbove );                    var idhyphenate = stringIDToTypeID( "hyphenate" );                    desc1959.putBoolean( idhyphenate, true );                    var idhyphenateWordSize = stringIDToTypeID( "hyphenateWordSize" );                    desc1959.putInteger( idhyphenateWordSize, 6 );                    var idhyphenatePreLength = stringIDToTypeID( "hyphenatePreLength" );                    desc1959.putInteger( idhyphenatePreLength, 2 );                    var idhyphenatePostLength = stringIDToTypeID( "hyphenatePostLength" );                    desc1959.putInteger( idhyphenatePostLength, 2 );                    var idhyphenateLimit = stringIDToTypeID( "hyphenateLimit" );                    desc1959.putInteger( idhyphenateLimit, 0 );                    var idhyphenationZone = stringIDToTypeID( "hyphenationZone" );                    desc1959.putDouble( idhyphenationZone, 36.000000 );                    var idhyphenateCapitalized = stringIDToTypeID( "hyphenateCapitalized" );                    desc1959.putBoolean( idhyphenateCapitalized, true );                    var idhyphenationPreference = stringIDToTypeID( "hyphenationPreference" );                    desc1959.putDouble( idhyphenationPreference, 0.500000 );                    var idjustificationWordMinimum = stringIDToTypeID( "justificationWordMinimum" );                    desc1959.putDouble( idjustificationWordMinimum, 0.800000 );                    var idjustificationWordDesired = stringIDToTypeID( "justificationWordDesired" );                    desc1959.putDouble( idjustificationWordDesired, 1.000000 );                    var idjustificationWordMaximum = stringIDToTypeID( "justificationWordMaximum" );                    desc1959.putDouble( idjustificationWordMaximum, 1.330000 );                    var idjustificationLetterMinimum = stringIDToTypeID( "justificationLetterMinimum" );                    desc1959.putDouble( idjustificationLetterMinimum, 0.000000 );                    var idjustificationLetterDesired = stringIDToTypeID( "justificationLetterDesired" );                    desc1959.putDouble( idjustificationLetterDesired, 0.000000 );                    var idjustificationLetterMaximum = stringIDToTypeID( "justificationLetterMaximum" );                    desc1959.putDouble( idjustificationLetterMaximum, 0.000000 );                    var idjustificationGlyphMinimum = stringIDToTypeID( "justificationGlyphMinimum" );                    desc1959.putDouble( idjustificationGlyphMinimum, 1.000000 );                    var idjustificationGlyphDesired = stringIDToTypeID( "justificationGlyphDesired" );                    desc1959.putDouble( idjustificationGlyphDesired, 1.000000 );                    var idjustificationGlyphMaximum = stringIDToTypeID( "justificationGlyphMaximum" );                    desc1959.putDouble( idjustificationGlyphMaximum, 1.000000 );                    var idsingleWordJustification = stringIDToTypeID( "singleWordJustification" );                    var idAlg = charIDToTypeID( "Alg " );                    var idJstA = charIDToTypeID( "JstA" );                    desc1959.putEnumerated( idsingleWordJustification, idAlg, idJstA );                    var idhangingRoman = stringIDToTypeID( "hangingRoman" );                    desc1959.putBoolean( idhangingRoman, false );                    var idautoTCY = stringIDToTypeID( "autoTCY" );                    desc1959.putInteger( idautoTCY, 1 );                    var idkeepTogether = stringIDToTypeID( "keepTogether" );                    desc1959.putBoolean( idkeepTogether, true );                    var idburasagari = stringIDToTypeID( "burasagari" );                    var idburasagari = stringIDToTypeID( "burasagari" );                    var idburasagariNone = stringIDToTypeID( "burasagariNone" );                    desc1959.putEnumerated( idburasagari, idburasagari, idburasagariNone );                    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );                    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );                    var idpushIn = stringIDToTypeID( "pushIn" );                    desc1959.putEnumerated( idpreferredKinsokuOrder, idpreferredKinsokuOrder, idpushIn );                    var idkurikaeshiMojiShori = stringIDToTypeID( "kurikaeshiMojiShori" );                    desc1959.putBoolean( idkurikaeshiMojiShori, false );                    var idkinsokuSetName = stringIDToTypeID( "kinsokuSetName" );                    var idkinsokuSetName = stringIDToTypeID( "kinsokuSetName" );                    var idSoft = stringIDToTypeID( "Soft" );                    desc1959.putEnumerated( idkinsokuSetName, idkinsokuSetName, idSoft );                    var idmojiKumiName = stringIDToTypeID( "mojiKumiName" );                    var idmojiKumiName = stringIDToTypeID( "mojiKumiName" );                    var idPhotoshopsixMojiKumiSetone = stringIDToTypeID( "Photoshop6MojiKumiSet1" );                    desc1959.putEnumerated( idmojiKumiName, idmojiKumiName, idPhotoshopsixMojiKumiSetone );                    var idtextEveryLineComposer = stringIDToTypeID( "textEveryLineComposer" );                    desc1959.putBoolean( idtextEveryLineComposer, false );                    var iddefaultTabWidth = stringIDToTypeID( "defaultTabWidth" );                    desc1959.putDouble( iddefaultTabWidth, 36.000000 );                    var iddefaultStyle = stringIDToTypeID( "defaultStyle" );                        var desc1960 = new ActionDescriptor();                        var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );                        desc1960.putString( idfontPostScriptName, """FZBWKSJW--GB1-0""" );                        var idFntN = charIDToTypeID( "FntN" );                        desc1960.putString( idFntN, """FZBWKSJW""" );                        var idFntS = charIDToTypeID( "FntS" );                        desc1960.putString( idFntS, """-GB1-0""" );                        var idScrp = charIDToTypeID( "Scrp" );                        desc1960.putInteger( idScrp, 25 );                        var idFntT = charIDToTypeID( "FntT" );                        desc1960.putInteger( idFntT, 2 );                        var idSz = charIDToTypeID( "Sz  " );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1960.putUnitDouble( idSz, idPnt, 2.880000 );                        var idHrzS = charIDToTypeID( "HrzS" );                        desc1960.putDouble( idHrzS, 100.000000 );                        var idVrtS = charIDToTypeID( "VrtS" );                        desc1960.putDouble( idVrtS, 100.000000 );                        var idsyntheticBold = stringIDToTypeID( "syntheticBold" );                        desc1960.putBoolean( idsyntheticBold, false );                        var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );                        desc1960.putBoolean( idsyntheticItalic, false );                        var idautoLeading = stringIDToTypeID( "autoLeading" );                        desc1960.putBoolean( idautoLeading, true );                        var idTrck = charIDToTypeID( "Trck" );                        desc1960.putInteger( idTrck, 0 );                        var idBsln = charIDToTypeID( "Bsln" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1960.putUnitDouble( idBsln, idPnt, 0.000000 );                        var idcharacterRotation = stringIDToTypeID( "characterRotation" );                        desc1960.putDouble( idcharacterRotation, 0.000000 );                        var idfontCaps = stringIDToTypeID( "fontCaps" );                        var idfontCaps = stringIDToTypeID( "fontCaps" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1960.putEnumerated( idfontCaps, idfontCaps, idNrml );                        var idbaseline = stringIDToTypeID( "baseline" );                        var idbaseline = stringIDToTypeID( "baseline" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1960.putEnumerated( idbaseline, idbaseline, idNrml );                        var idotbaseline = stringIDToTypeID( "otbaseline" );                        var idotbaseline = stringIDToTypeID( "otbaseline" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1960.putEnumerated( idotbaseline, idotbaseline, idNrml );                        var idstrikethrough = stringIDToTypeID( "strikethrough" );                        var idstrikethrough = stringIDToTypeID( "strikethrough" );                        var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );                        desc1960.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );                        var idUndl = charIDToTypeID( "Undl" );                        var idUndl = charIDToTypeID( "Undl" );                        var idunderlineOff = stringIDToTypeID( "underlineOff" );                        desc1960.putEnumerated( idUndl, idUndl, idunderlineOff );                        var idunderlineOffset = stringIDToTypeID( "underlineOffset" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1960.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );                        var idligature = stringIDToTypeID( "ligature" );                        desc1960.putBoolean( idligature, true );                        var idaltligature = stringIDToTypeID( "altligature" );                        desc1960.putBoolean( idaltligature, false );                        var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );                        desc1960.putBoolean( idcontextualLigatures, false );                        var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );                        desc1960.putBoolean( idalternateLigatures, false );                        var idoldStyle = stringIDToTypeID( "oldStyle" );                        desc1960.putBoolean( idoldStyle, false );                        var idfractions = stringIDToTypeID( "fractions" );                        desc1960.putBoolean( idfractions, false );                        var idordinals = stringIDToTypeID( "ordinals" );                        desc1960.putBoolean( idordinals, false );                        var idswash = stringIDToTypeID( "swash" );                        desc1960.putBoolean( idswash, false );                        var idtitling = stringIDToTypeID( "titling" );                        desc1960.putBoolean( idtitling, false );                        var idconnectionForms = stringIDToTypeID( "connectionForms" );                        desc1960.putBoolean( idconnectionForms, false );                        var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );                        desc1960.putBoolean( idstylisticAlternates, false );                        var idornaments = stringIDToTypeID( "ornaments" );                        desc1960.putBoolean( idornaments, false );                        var idfigureStyle = stringIDToTypeID( "figureStyle" );                        var idfigureStyle = stringIDToTypeID( "figureStyle" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1960.putEnumerated( idfigureStyle, idfigureStyle, idNrml );                        var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );                        desc1960.putBoolean( idproportionalMetrics, false );                        var idkana = stringIDToTypeID( "kana" );                        desc1960.putBoolean( idkana, false );                        var iditalics = stringIDToTypeID( "italics" );                        desc1960.putBoolean( iditalics, false );                        var idruby = stringIDToTypeID( "ruby" );                        desc1960.putBoolean( idruby, false );                        var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                        var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                        var idrotated = stringIDToTypeID( "rotated" );                        desc1960.putEnumerated( idbaselineDirection, idbaselineDirection, idrotated );                        var idtextLanguage = stringIDToTypeID( "textLanguage" );                        var idtextLanguage = stringIDToTypeID( "textLanguage" );                        var idenglishLanguage = stringIDToTypeID( "englishLanguage" );                        desc1960.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );                        var idmojiZume = stringIDToTypeID( "mojiZume" );                        desc1960.putDouble( idmojiZume, 0.000000 );                        var idgridAlignment = stringIDToTypeID( "gridAlignment" );                        var idgridAlignment = stringIDToTypeID( "gridAlignment" );                        var idroman = stringIDToTypeID( "roman" );                        desc1960.putEnumerated( idgridAlignment, idgridAlignment, idroman );                        var idenableWariChu = stringIDToTypeID( "enableWariChu" );                        desc1960.putBoolean( idenableWariChu, false );                        var idwariChuCount = stringIDToTypeID( "wariChuCount" );                        desc1960.putInteger( idwariChuCount, 2 );                        var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );                        desc1960.putInteger( idwariChuLineGap, 0 );                        var idwariChuScale = stringIDToTypeID( "wariChuScale" );                        desc1960.putDouble( idwariChuScale, 0.500000 );                        var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );                        desc1960.putInteger( idwariChuWidow, 2 );                        var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );                        desc1960.putInteger( idwariChuOrphan, 2 );                        var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                        var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                        var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );                        desc1960.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );                        var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );                        desc1960.putInteger( idtcyUpDown, 0 );                        var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );                        desc1960.putInteger( idtcyLeftRight, 0 );                        var idleftAki = stringIDToTypeID( "leftAki" );                        desc1960.putDouble( idleftAki, -1.000000 );                        var idrightAki = stringIDToTypeID( "rightAki" );                        desc1960.putDouble( idrightAki, -1.000000 );                        var idjiDori = stringIDToTypeID( "jiDori" );                        desc1960.putInteger( idjiDori, 0 );                        var idnoBreak = stringIDToTypeID( "noBreak" );                        desc1960.putBoolean( idnoBreak, false );                        var idClr = charIDToTypeID( "Clr " );                            var desc1961 = new ActionDescriptor();                            var idCyn = charIDToTypeID( "Cyn " );                            desc1961.putDouble( idCyn, 74.520000 );                            var idMgnt = charIDToTypeID( "Mgnt" );                            desc1961.putDouble( idMgnt, 67.780000 );                            var idYlw = charIDToTypeID( "Ylw " );                            desc1961.putDouble( idYlw, 67.130000 );                            var idBlck = charIDToTypeID( "Blck" );                            desc1961.putDouble( idBlck, 89.630000 );                        var idCMYC = charIDToTypeID( "CMYC" );                        desc1960.putObject( idClr, idCMYC, desc1961 );                        var idstrokeColor = stringIDToTypeID( "strokeColor" );                            var desc1962 = new ActionDescriptor();                            var idCyn = charIDToTypeID( "Cyn " );                            desc1962.putDouble( idCyn, 74.520000 );                            var idMgnt = charIDToTypeID( "Mgnt" );                            desc1962.putDouble( idMgnt, 67.780000 );                            var idYlw = charIDToTypeID( "Ylw " );                            desc1962.putDouble( idYlw, 67.130000 );                            var idBlck = charIDToTypeID( "Blck" );                            desc1962.putDouble( idBlck, 89.630000 );                        var idCMYC = charIDToTypeID( "CMYC" );                        desc1960.putObject( idstrokeColor, idCMYC, desc1962 );                        var idFl = charIDToTypeID( "Fl  " );                        desc1960.putBoolean( idFl, true );                        var idStrk = charIDToTypeID( "Strk" );                        desc1960.putBoolean( idStrk, false );                        var idfillFirst = stringIDToTypeID( "fillFirst" );                        desc1960.putBoolean( idfillFirst, true );                        var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );                        desc1960.putBoolean( idfillOverPrint, false );                        var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );                        desc1960.putBoolean( idstrokeOverPrint, false );                        var idlineCap = stringIDToTypeID( "lineCap" );                        var idlineCap = stringIDToTypeID( "lineCap" );                        var idbuttCap = stringIDToTypeID( "buttCap" );                        desc1960.putEnumerated( idlineCap, idlineCap, idbuttCap );                        var idlineJoin = stringIDToTypeID( "lineJoin" );                        var idlineJoin = stringIDToTypeID( "lineJoin" );                        var idmiterJoin = stringIDToTypeID( "miterJoin" );                        desc1960.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );                        var idlineWidth = stringIDToTypeID( "lineWidth" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1960.putUnitDouble( idlineWidth, idPnt, 0.240000 );                        var idmiterLimit = stringIDToTypeID( "miterLimit" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1960.putUnitDouble( idmiterLimit, idPnt, 0.960000 );                        var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );                        desc1960.putDouble( idlineDashoffset, 0.000000 );                    var idTxtS = charIDToTypeID( "TxtS" );                    desc1959.putObject( iddefaultStyle, idTxtS, desc1960 );                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );                desc1958.putObject( idparagraphStyle, idparagraphStyle, desc1959 );            var idparagraphStyleRange = stringIDToTypeID( "paragraphStyleRange" );            list105.putObject( idparagraphStyleRange, desc1958 );                var desc1963 = new ActionDescriptor();                var idFrom = charIDToTypeID( "From" );                desc1963.putInteger( idFrom, 2306 );                var idT = charIDToTypeID( "T   " );                desc1963.putInteger( idT, 2562 );                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );                    var desc1964 = new ActionDescriptor();                    var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );                    desc1964.putBoolean( idstyleSheetHasParent, true );                    var idAlgn = charIDToTypeID( "Algn" );                    var idAlg = charIDToTypeID( "Alg " );                    var idjustifyLeft = stringIDToTypeID( "justifyLeft" );                    desc1964.putEnumerated( idAlgn, idAlg, idjustifyLeft );                    var idfirstLineIndent = stringIDToTypeID( "firstLineIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1964.putUnitDouble( idfirstLineIndent, idPnt, 23.828448 );                    var idstartIndent = stringIDToTypeID( "startIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1964.putUnitDouble( idstartIndent, idPnt, 0.000000 );                    var idendIndent = stringIDToTypeID( "endIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1964.putUnitDouble( idendIndent, idPnt, 0.000000 );                    var idspaceBefore = stringIDToTypeID( "spaceBefore" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1964.putUnitDouble( idspaceBefore, idPnt, 0.150494 );                    var idspaceAfter = stringIDToTypeID( "spaceAfter" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1964.putUnitDouble( idspaceAfter, idPnt, 0.000000 );                    var iddropCapMultiplier = stringIDToTypeID( "dropCapMultiplier" );                    desc1964.putInteger( iddropCapMultiplier, 1 );                    var idautoLeadingPercentage = stringIDToTypeID( "autoLeadingPercentage" );                    desc1964.putDouble( idautoLeadingPercentage, 1.750000 );                    var idleadingType = stringIDToTypeID( "leadingType" );                    var idleadingType = stringIDToTypeID( "leadingType" );                    var idleadingAbove = stringIDToTypeID( "leadingAbove" );                    desc1964.putEnumerated( idleadingType, idleadingType, idleadingAbove );                    var idhyphenate = stringIDToTypeID( "hyphenate" );                    desc1964.putBoolean( idhyphenate, true );                    var idhyphenateWordSize = stringIDToTypeID( "hyphenateWordSize" );                    desc1964.putInteger( idhyphenateWordSize, 6 );                    var idhyphenatePreLength = stringIDToTypeID( "hyphenatePreLength" );                    desc1964.putInteger( idhyphenatePreLength, 2 );                    var idhyphenatePostLength = stringIDToTypeID( "hyphenatePostLength" );                    desc1964.putInteger( idhyphenatePostLength, 2 );                    var idhyphenateLimit = stringIDToTypeID( "hyphenateLimit" );                    desc1964.putInteger( idhyphenateLimit, 0 );                    var idhyphenationZone = stringIDToTypeID( "hyphenationZone" );                    desc1964.putDouble( idhyphenationZone, 36.000000 );                    var idhyphenateCapitalized = stringIDToTypeID( "hyphenateCapitalized" );                    desc1964.putBoolean( idhyphenateCapitalized, true );                    var idhyphenationPreference = stringIDToTypeID( "hyphenationPreference" );                    desc1964.putDouble( idhyphenationPreference, 0.500000 );                    var idjustificationWordMinimum = stringIDToTypeID( "justificationWordMinimum" );                    desc1964.putDouble( idjustificationWordMinimum, 0.800000 );                    var idjustificationWordDesired = stringIDToTypeID( "justificationWordDesired" );                    desc1964.putDouble( idjustificationWordDesired, 1.000000 );                    var idjustificationWordMaximum = stringIDToTypeID( "justificationWordMaximum" );                    desc1964.putDouble( idjustificationWordMaximum, 1.330000 );                    var idjustificationLetterMinimum = stringIDToTypeID( "justificationLetterMinimum" );                    desc1964.putDouble( idjustificationLetterMinimum, 0.000000 );                    var idjustificationLetterDesired = stringIDToTypeID( "justificationLetterDesired" );                    desc1964.putDouble( idjustificationLetterDesired, 0.000000 );                    var idjustificationLetterMaximum = stringIDToTypeID( "justificationLetterMaximum" );                    desc1964.putDouble( idjustificationLetterMaximum, 0.000000 );                    var idjustificationGlyphMinimum = stringIDToTypeID( "justificationGlyphMinimum" );                    desc1964.putDouble( idjustificationGlyphMinimum, 1.000000 );                    var idjustificationGlyphDesired = stringIDToTypeID( "justificationGlyphDesired" );                    desc1964.putDouble( idjustificationGlyphDesired, 1.000000 );                    var idjustificationGlyphMaximum = stringIDToTypeID( "justificationGlyphMaximum" );                    desc1964.putDouble( idjustificationGlyphMaximum, 1.000000 );                    var idsingleWordJustification = stringIDToTypeID( "singleWordJustification" );                    var idAlg = charIDToTypeID( "Alg " );                    var idJstA = charIDToTypeID( "JstA" );                    desc1964.putEnumerated( idsingleWordJustification, idAlg, idJstA );                    var idhangingRoman = stringIDToTypeID( "hangingRoman" );                    desc1964.putBoolean( idhangingRoman, false );                    var idautoTCY = stringIDToTypeID( "autoTCY" );                    desc1964.putInteger( idautoTCY, 1 );                    var idkeepTogether = stringIDToTypeID( "keepTogether" );                    desc1964.putBoolean( idkeepTogether, true );                    var idburasagari = stringIDToTypeID( "burasagari" );                    var idburasagari = stringIDToTypeID( "burasagari" );                    var idburasagariNone = stringIDToTypeID( "burasagariNone" );                    desc1964.putEnumerated( idburasagari, idburasagari, idburasagariNone );                    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );                    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );                    var idpushIn = stringIDToTypeID( "pushIn" );                    desc1964.putEnumerated( idpreferredKinsokuOrder, idpreferredKinsokuOrder, idpushIn );                    var idkurikaeshiMojiShori = stringIDToTypeID( "kurikaeshiMojiShori" );                    desc1964.putBoolean( idkurikaeshiMojiShori, false );                    var idkinsokuSetName = stringIDToTypeID( "kinsokuSetName" );                    var idkinsokuSetName = stringIDToTypeID( "kinsokuSetName" );                    var idSoft = stringIDToTypeID( "Soft" );                    desc1964.putEnumerated( idkinsokuSetName, idkinsokuSetName, idSoft );                    var idmojiKumiName = stringIDToTypeID( "mojiKumiName" );                    var idmojiKumiName = stringIDToTypeID( "mojiKumiName" );                    var idPhotoshopsixMojiKumiSetone = stringIDToTypeID( "Photoshop6MojiKumiSet1" );                    desc1964.putEnumerated( idmojiKumiName, idmojiKumiName, idPhotoshopsixMojiKumiSetone );                    var idtextEveryLineComposer = stringIDToTypeID( "textEveryLineComposer" );                    desc1964.putBoolean( idtextEveryLineComposer, false );                    var iddefaultTabWidth = stringIDToTypeID( "defaultTabWidth" );                    desc1964.putDouble( iddefaultTabWidth, 36.000000 );                    var iddefaultStyle = stringIDToTypeID( "defaultStyle" );                        var desc1965 = new ActionDescriptor();                        var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );                        desc1965.putString( idfontPostScriptName, """FZBWKSJW--GB1-0""" );                        var idFntN = charIDToTypeID( "FntN" );                        desc1965.putString( idFntN, """FZBWKSJW""" );                        var idFntS = charIDToTypeID( "FntS" );                        desc1965.putString( idFntS, """-GB1-0""" );                        var idScrp = charIDToTypeID( "Scrp" );                        desc1965.putInteger( idScrp, 25 );                        var idFntT = charIDToTypeID( "FntT" );                        desc1965.putInteger( idFntT, 2 );                        var idSz = charIDToTypeID( "Sz  " );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1965.putUnitDouble( idSz, idPnt, 2.880000 );                        var idHrzS = charIDToTypeID( "HrzS" );                        desc1965.putDouble( idHrzS, 100.000000 );                        var idVrtS = charIDToTypeID( "VrtS" );                        desc1965.putDouble( idVrtS, 100.000000 );                        var idsyntheticBold = stringIDToTypeID( "syntheticBold" );                        desc1965.putBoolean( idsyntheticBold, false );                        var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );                        desc1965.putBoolean( idsyntheticItalic, false );                        var idautoLeading = stringIDToTypeID( "autoLeading" );                        desc1965.putBoolean( idautoLeading, true );                        var idTrck = charIDToTypeID( "Trck" );                        desc1965.putInteger( idTrck, 0 );                        var idBsln = charIDToTypeID( "Bsln" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1965.putUnitDouble( idBsln, idPnt, 0.000000 );                        var idcharacterRotation = stringIDToTypeID( "characterRotation" );                        desc1965.putDouble( idcharacterRotation, 0.000000 );                        var idfontCaps = stringIDToTypeID( "fontCaps" );                        var idfontCaps = stringIDToTypeID( "fontCaps" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1965.putEnumerated( idfontCaps, idfontCaps, idNrml );                        var idbaseline = stringIDToTypeID( "baseline" );                        var idbaseline = stringIDToTypeID( "baseline" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1965.putEnumerated( idbaseline, idbaseline, idNrml );                        var idotbaseline = stringIDToTypeID( "otbaseline" );                        var idotbaseline = stringIDToTypeID( "otbaseline" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1965.putEnumerated( idotbaseline, idotbaseline, idNrml );                        var idstrikethrough = stringIDToTypeID( "strikethrough" );                        var idstrikethrough = stringIDToTypeID( "strikethrough" );                        var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );                        desc1965.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );                        var idUndl = charIDToTypeID( "Undl" );                        var idUndl = charIDToTypeID( "Undl" );                        var idunderlineOff = stringIDToTypeID( "underlineOff" );                        desc1965.putEnumerated( idUndl, idUndl, idunderlineOff );                        var idunderlineOffset = stringIDToTypeID( "underlineOffset" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1965.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );                        var idligature = stringIDToTypeID( "ligature" );                        desc1965.putBoolean( idligature, true );                        var idaltligature = stringIDToTypeID( "altligature" );                        desc1965.putBoolean( idaltligature, false );                        var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );                        desc1965.putBoolean( idcontextualLigatures, false );                        var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );                        desc1965.putBoolean( idalternateLigatures, false );                        var idoldStyle = stringIDToTypeID( "oldStyle" );                        desc1965.putBoolean( idoldStyle, false );                        var idfractions = stringIDToTypeID( "fractions" );                        desc1965.putBoolean( idfractions, false );                        var idordinals = stringIDToTypeID( "ordinals" );                        desc1965.putBoolean( idordinals, false );                        var idswash = stringIDToTypeID( "swash" );                        desc1965.putBoolean( idswash, false );                        var idtitling = stringIDToTypeID( "titling" );                        desc1965.putBoolean( idtitling, false );                        var idconnectionForms = stringIDToTypeID( "connectionForms" );                        desc1965.putBoolean( idconnectionForms, false );                        var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );                        desc1965.putBoolean( idstylisticAlternates, false );                        var idornaments = stringIDToTypeID( "ornaments" );                        desc1965.putBoolean( idornaments, false );                        var idfigureStyle = stringIDToTypeID( "figureStyle" );                        var idfigureStyle = stringIDToTypeID( "figureStyle" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1965.putEnumerated( idfigureStyle, idfigureStyle, idNrml );                        var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );                        desc1965.putBoolean( idproportionalMetrics, false );                        var idkana = stringIDToTypeID( "kana" );                        desc1965.putBoolean( idkana, false );                        var iditalics = stringIDToTypeID( "italics" );                        desc1965.putBoolean( iditalics, false );                        var idruby = stringIDToTypeID( "ruby" );                        desc1965.putBoolean( idruby, false );                        var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                        var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                        var idrotated = stringIDToTypeID( "rotated" );                        desc1965.putEnumerated( idbaselineDirection, idbaselineDirection, idrotated );                        var idtextLanguage = stringIDToTypeID( "textLanguage" );                        var idtextLanguage = stringIDToTypeID( "textLanguage" );                        var idenglishLanguage = stringIDToTypeID( "englishLanguage" );                        desc1965.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );                        var idmojiZume = stringIDToTypeID( "mojiZume" );                        desc1965.putDouble( idmojiZume, 0.000000 );                        var idgridAlignment = stringIDToTypeID( "gridAlignment" );                        var idgridAlignment = stringIDToTypeID( "gridAlignment" );                        var idroman = stringIDToTypeID( "roman" );                        desc1965.putEnumerated( idgridAlignment, idgridAlignment, idroman );                        var idenableWariChu = stringIDToTypeID( "enableWariChu" );                        desc1965.putBoolean( idenableWariChu, false );                        var idwariChuCount = stringIDToTypeID( "wariChuCount" );                        desc1965.putInteger( idwariChuCount, 2 );                        var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );                        desc1965.putInteger( idwariChuLineGap, 0 );                        var idwariChuScale = stringIDToTypeID( "wariChuScale" );                        desc1965.putDouble( idwariChuScale, 0.500000 );                        var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );                        desc1965.putInteger( idwariChuWidow, 2 );                        var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );                        desc1965.putInteger( idwariChuOrphan, 2 );                        var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                        var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                        var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );                        desc1965.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );                        var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );                        desc1965.putInteger( idtcyUpDown, 0 );                        var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );                        desc1965.putInteger( idtcyLeftRight, 0 );                        var idleftAki = stringIDToTypeID( "leftAki" );                        desc1965.putDouble( idleftAki, -1.000000 );                        var idrightAki = stringIDToTypeID( "rightAki" );                        desc1965.putDouble( idrightAki, -1.000000 );                        var idjiDori = stringIDToTypeID( "jiDori" );                        desc1965.putInteger( idjiDori, 0 );                        var idnoBreak = stringIDToTypeID( "noBreak" );                        desc1965.putBoolean( idnoBreak, false );                        var idClr = charIDToTypeID( "Clr " );                            var desc1966 = new ActionDescriptor();                            var idCyn = charIDToTypeID( "Cyn " );                            desc1966.putDouble( idCyn, 74.520000 );                            var idMgnt = charIDToTypeID( "Mgnt" );                            desc1966.putDouble( idMgnt, 67.780000 );                            var idYlw = charIDToTypeID( "Ylw " );                            desc1966.putDouble( idYlw, 67.130000 );                            var idBlck = charIDToTypeID( "Blck" );                            desc1966.putDouble( idBlck, 89.630000 );                        var idCMYC = charIDToTypeID( "CMYC" );                        desc1965.putObject( idClr, idCMYC, desc1966 );                        var idstrokeColor = stringIDToTypeID( "strokeColor" );                            var desc1967 = new ActionDescriptor();                            var idCyn = charIDToTypeID( "Cyn " );                            desc1967.putDouble( idCyn, 74.520000 );                            var idMgnt = charIDToTypeID( "Mgnt" );                            desc1967.putDouble( idMgnt, 67.780000 );                            var idYlw = charIDToTypeID( "Ylw " );                            desc1967.putDouble( idYlw, 67.130000 );                            var idBlck = charIDToTypeID( "Blck" );                            desc1967.putDouble( idBlck, 89.630000 );                        var idCMYC = charIDToTypeID( "CMYC" );                        desc1965.putObject( idstrokeColor, idCMYC, desc1967 );                        var idFl = charIDToTypeID( "Fl  " );                        desc1965.putBoolean( idFl, true );                        var idStrk = charIDToTypeID( "Strk" );                        desc1965.putBoolean( idStrk, false );                        var idfillFirst = stringIDToTypeID( "fillFirst" );                        desc1965.putBoolean( idfillFirst, true );                        var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );                        desc1965.putBoolean( idfillOverPrint, false );                        var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );                        desc1965.putBoolean( idstrokeOverPrint, false );                        var idlineCap = stringIDToTypeID( "lineCap" );                        var idlineCap = stringIDToTypeID( "lineCap" );                        var idbuttCap = stringIDToTypeID( "buttCap" );                        desc1965.putEnumerated( idlineCap, idlineCap, idbuttCap );                        var idlineJoin = stringIDToTypeID( "lineJoin" );                        var idlineJoin = stringIDToTypeID( "lineJoin" );                        var idmiterJoin = stringIDToTypeID( "miterJoin" );                        desc1965.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );                        var idlineWidth = stringIDToTypeID( "lineWidth" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1965.putUnitDouble( idlineWidth, idPnt, 0.240000 );                        var idmiterLimit = stringIDToTypeID( "miterLimit" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1965.putUnitDouble( idmiterLimit, idPnt, 0.960000 );                        var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );                        desc1965.putDouble( idlineDashoffset, 0.000000 );                    var idTxtS = charIDToTypeID( "TxtS" );                    desc1964.putObject( iddefaultStyle, idTxtS, desc1965 );                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );                desc1963.putObject( idparagraphStyle, idparagraphStyle, desc1964 );            var idparagraphStyleRange = stringIDToTypeID( "paragraphStyleRange" );            list105.putObject( idparagraphStyleRange, desc1963 );                var desc1968 = new ActionDescriptor();                var idFrom = charIDToTypeID( "From" );                desc1968.putInteger( idFrom, 2562 );                var idT = charIDToTypeID( "T   " );                desc1968.putInteger( idT, 2818 );                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );                    var desc1969 = new ActionDescriptor();                    var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );                    desc1969.putBoolean( idstyleSheetHasParent, true );                    var idAlgn = charIDToTypeID( "Algn" );                    var idAlg = charIDToTypeID( "Alg " );                    var idjustifyLeft = stringIDToTypeID( "justifyLeft" );                    desc1969.putEnumerated( idAlgn, idAlg, idjustifyLeft );                    var idfirstLineIndent = stringIDToTypeID( "firstLineIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1969.putUnitDouble( idfirstLineIndent, idPnt, 23.828448 );                    var idstartIndent = stringIDToTypeID( "startIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1969.putUnitDouble( idstartIndent, idPnt, 0.000000 );                    var idendIndent = stringIDToTypeID( "endIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1969.putUnitDouble( idendIndent, idPnt, 0.000000 );                    var idspaceBefore = stringIDToTypeID( "spaceBefore" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1969.putUnitDouble( idspaceBefore, idPnt, 0.150494 );                    var idspaceAfter = stringIDToTypeID( "spaceAfter" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1969.putUnitDouble( idspaceAfter, idPnt, 0.000000 );                    var iddropCapMultiplier = stringIDToTypeID( "dropCapMultiplier" );                    desc1969.putInteger( iddropCapMultiplier, 1 );                    var idautoLeadingPercentage = stringIDToTypeID( "autoLeadingPercentage" );                    desc1969.putDouble( idautoLeadingPercentage, 1.750000 );                    var idleadingType = stringIDToTypeID( "leadingType" );                    var idleadingType = stringIDToTypeID( "leadingType" );                    var idleadingAbove = stringIDToTypeID( "leadingAbove" );                    desc1969.putEnumerated( idleadingType, idleadingType, idleadingAbove );                    var idhyphenate = stringIDToTypeID( "hyphenate" );                    desc1969.putBoolean( idhyphenate, true );                    var idhyphenateWordSize = stringIDToTypeID( "hyphenateWordSize" );                    desc1969.putInteger( idhyphenateWordSize, 6 );                    var idhyphenatePreLength = stringIDToTypeID( "hyphenatePreLength" );                    desc1969.putInteger( idhyphenatePreLength, 2 );                    var idhyphenatePostLength = stringIDToTypeID( "hyphenatePostLength" );                    desc1969.putInteger( idhyphenatePostLength, 2 );                    var idhyphenateLimit = stringIDToTypeID( "hyphenateLimit" );                    desc1969.putInteger( idhyphenateLimit, 0 );                    var idhyphenationZone = stringIDToTypeID( "hyphenationZone" );                    desc1969.putDouble( idhyphenationZone, 36.000000 );                    var idhyphenateCapitalized = stringIDToTypeID( "hyphenateCapitalized" );                    desc1969.putBoolean( idhyphenateCapitalized, true );                    var idhyphenationPreference = stringIDToTypeID( "hyphenationPreference" );                    desc1969.putDouble( idhyphenationPreference, 0.500000 );                    var idjustificationWordMinimum = stringIDToTypeID( "justificationWordMinimum" );                    desc1969.putDouble( idjustificationWordMinimum, 0.800000 );                    var idjustificationWordDesired = stringIDToTypeID( "justificationWordDesired" );                    desc1969.putDouble( idjustificationWordDesired, 1.000000 );                    var idjustificationWordMaximum = stringIDToTypeID( "justificationWordMaximum" );                    desc1969.putDouble( idjustificationWordMaximum, 1.330000 );                    var idjustificationLetterMinimum = stringIDToTypeID( "justificationLetterMinimum" );                    desc1969.putDouble( idjustificationLetterMinimum, 0.000000 );                    var idjustificationLetterDesired = stringIDToTypeID( "justificationLetterDesired" );                    desc1969.putDouble( idjustificationLetterDesired, 0.000000 );                    var idjustificationLetterMaximum = stringIDToTypeID( "justificationLetterMaximum" );                    desc1969.putDouble( idjustificationLetterMaximum, 0.000000 );                    var idjustificationGlyphMinimum = stringIDToTypeID( "justificationGlyphMinimum" );                    desc1969.putDouble( idjustificationGlyphMinimum, 1.000000 );                    var idjustificationGlyphDesired = stringIDToTypeID( "justificationGlyphDesired" );                    desc1969.putDouble( idjustificationGlyphDesired, 1.000000 );                    var idjustificationGlyphMaximum = stringIDToTypeID( "justificationGlyphMaximum" );                    desc1969.putDouble( idjustificationGlyphMaximum, 1.000000 );                    var idsingleWordJustification = stringIDToTypeID( "singleWordJustification" );                    var idAlg = charIDToTypeID( "Alg " );                    var idJstA = charIDToTypeID( "JstA" );                    desc1969.putEnumerated( idsingleWordJustification, idAlg, idJstA );                    var idhangingRoman = stringIDToTypeID( "hangingRoman" );                    desc1969.putBoolean( idhangingRoman, false );                    var idautoTCY = stringIDToTypeID( "autoTCY" );                    desc1969.putInteger( idautoTCY, 1 );                    var idkeepTogether = stringIDToTypeID( "keepTogether" );                    desc1969.putBoolean( idkeepTogether, true );                    var idburasagari = stringIDToTypeID( "burasagari" );                    var idburasagari = stringIDToTypeID( "burasagari" );                    var idburasagariNone = stringIDToTypeID( "burasagariNone" );                    desc1969.putEnumerated( idburasagari, idburasagari, idburasagariNone );                    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );                    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );                    var idpushIn = stringIDToTypeID( "pushIn" );                    desc1969.putEnumerated( idpreferredKinsokuOrder, idpreferredKinsokuOrder, idpushIn );                    var idkurikaeshiMojiShori = stringIDToTypeID( "kurikaeshiMojiShori" );                    desc1969.putBoolean( idkurikaeshiMojiShori, false );                    var idkinsokuSetName = stringIDToTypeID( "kinsokuSetName" );                    var idkinsokuSetName = stringIDToTypeID( "kinsokuSetName" );                    var idSoft = stringIDToTypeID( "Soft" );                    desc1969.putEnumerated( idkinsokuSetName, idkinsokuSetName, idSoft );                    var idmojiKumiName = stringIDToTypeID( "mojiKumiName" );                    var idmojiKumiName = stringIDToTypeID( "mojiKumiName" );                    var idPhotoshopsixMojiKumiSetone = stringIDToTypeID( "Photoshop6MojiKumiSet1" );                    desc1969.putEnumerated( idmojiKumiName, idmojiKumiName, idPhotoshopsixMojiKumiSetone );                    var idtextEveryLineComposer = stringIDToTypeID( "textEveryLineComposer" );                    desc1969.putBoolean( idtextEveryLineComposer, false );                    var iddefaultTabWidth = stringIDToTypeID( "defaultTabWidth" );                    desc1969.putDouble( iddefaultTabWidth, 36.000000 );                    var iddefaultStyle = stringIDToTypeID( "defaultStyle" );                        var desc1970 = new ActionDescriptor();                        var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );                        desc1970.putString( idfontPostScriptName, """FZBWKSJW--GB1-0""" );                        var idFntN = charIDToTypeID( "FntN" );                        desc1970.putString( idFntN, """FZBWKSJW""" );                        var idFntS = charIDToTypeID( "FntS" );                        desc1970.putString( idFntS, """-GB1-0""" );                        var idScrp = charIDToTypeID( "Scrp" );                        desc1970.putInteger( idScrp, 25 );                        var idFntT = charIDToTypeID( "FntT" );                        desc1970.putInteger( idFntT, 2 );                        var idSz = charIDToTypeID( "Sz  " );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1970.putUnitDouble( idSz, idPnt, 2.880000 );                        var idHrzS = charIDToTypeID( "HrzS" );                        desc1970.putDouble( idHrzS, 100.000000 );                        var idVrtS = charIDToTypeID( "VrtS" );                        desc1970.putDouble( idVrtS, 100.000000 );                        var idsyntheticBold = stringIDToTypeID( "syntheticBold" );                        desc1970.putBoolean( idsyntheticBold, false );                        var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );                        desc1970.putBoolean( idsyntheticItalic, false );                        var idautoLeading = stringIDToTypeID( "autoLeading" );                        desc1970.putBoolean( idautoLeading, true );                        var idTrck = charIDToTypeID( "Trck" );                        desc1970.putInteger( idTrck, 0 );                        var idBsln = charIDToTypeID( "Bsln" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1970.putUnitDouble( idBsln, idPnt, 0.000000 );                        var idcharacterRotation = stringIDToTypeID( "characterRotation" );                        desc1970.putDouble( idcharacterRotation, 0.000000 );                        var idfontCaps = stringIDToTypeID( "fontCaps" );                        var idfontCaps = stringIDToTypeID( "fontCaps" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1970.putEnumerated( idfontCaps, idfontCaps, idNrml );                        var idbaseline = stringIDToTypeID( "baseline" );                        var idbaseline = stringIDToTypeID( "baseline" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1970.putEnumerated( idbaseline, idbaseline, idNrml );                        var idotbaseline = stringIDToTypeID( "otbaseline" );                        var idotbaseline = stringIDToTypeID( "otbaseline" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1970.putEnumerated( idotbaseline, idotbaseline, idNrml );                        var idstrikethrough = stringIDToTypeID( "strikethrough" );                        var idstrikethrough = stringIDToTypeID( "strikethrough" );                        var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );                        desc1970.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );                        var idUndl = charIDToTypeID( "Undl" );                        var idUndl = charIDToTypeID( "Undl" );                        var idunderlineOff = stringIDToTypeID( "underlineOff" );                        desc1970.putEnumerated( idUndl, idUndl, idunderlineOff );                        var idunderlineOffset = stringIDToTypeID( "underlineOffset" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1970.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );                        var idligature = stringIDToTypeID( "ligature" );                        desc1970.putBoolean( idligature, true );                        var idaltligature = stringIDToTypeID( "altligature" );                        desc1970.putBoolean( idaltligature, false );                        var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );                        desc1970.putBoolean( idcontextualLigatures, false );                        var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );                        desc1970.putBoolean( idalternateLigatures, false );                        var idoldStyle = stringIDToTypeID( "oldStyle" );                        desc1970.putBoolean( idoldStyle, false );                        var idfractions = stringIDToTypeID( "fractions" );                        desc1970.putBoolean( idfractions, false );                        var idordinals = stringIDToTypeID( "ordinals" );                        desc1970.putBoolean( idordinals, false );                        var idswash = stringIDToTypeID( "swash" );                        desc1970.putBoolean( idswash, false );                        var idtitling = stringIDToTypeID( "titling" );                        desc1970.putBoolean( idtitling, false );                        var idconnectionForms = stringIDToTypeID( "connectionForms" );                        desc1970.putBoolean( idconnectionForms, false );                        var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );                        desc1970.putBoolean( idstylisticAlternates, false );                        var idornaments = stringIDToTypeID( "ornaments" );                        desc1970.putBoolean( idornaments, false );                        var idfigureStyle = stringIDToTypeID( "figureStyle" );                        var idfigureStyle = stringIDToTypeID( "figureStyle" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1970.putEnumerated( idfigureStyle, idfigureStyle, idNrml );                        var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );                        desc1970.putBoolean( idproportionalMetrics, false );                        var idkana = stringIDToTypeID( "kana" );                        desc1970.putBoolean( idkana, false );                        var iditalics = stringIDToTypeID( "italics" );                        desc1970.putBoolean( iditalics, false );                        var idruby = stringIDToTypeID( "ruby" );                        desc1970.putBoolean( idruby, false );                        var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                        var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                        var idrotated = stringIDToTypeID( "rotated" );                        desc1970.putEnumerated( idbaselineDirection, idbaselineDirection, idrotated );                        var idtextLanguage = stringIDToTypeID( "textLanguage" );                        var idtextLanguage = stringIDToTypeID( "textLanguage" );                        var idenglishLanguage = stringIDToTypeID( "englishLanguage" );                        desc1970.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );                        var idmojiZume = stringIDToTypeID( "mojiZume" );                        desc1970.putDouble( idmojiZume, 0.000000 );                        var idgridAlignment = stringIDToTypeID( "gridAlignment" );                        var idgridAlignment = stringIDToTypeID( "gridAlignment" );                        var idroman = stringIDToTypeID( "roman" );                        desc1970.putEnumerated( idgridAlignment, idgridAlignment, idroman );                        var idenableWariChu = stringIDToTypeID( "enableWariChu" );                        desc1970.putBoolean( idenableWariChu, false );                        var idwariChuCount = stringIDToTypeID( "wariChuCount" );                        desc1970.putInteger( idwariChuCount, 2 );                        var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );                        desc1970.putInteger( idwariChuLineGap, 0 );                        var idwariChuScale = stringIDToTypeID( "wariChuScale" );                        desc1970.putDouble( idwariChuScale, 0.500000 );                        var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );                        desc1970.putInteger( idwariChuWidow, 2 );                        var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );                        desc1970.putInteger( idwariChuOrphan, 2 );                        var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                        var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                        var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );                        desc1970.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );                        var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );                        desc1970.putInteger( idtcyUpDown, 0 );                        var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );                        desc1970.putInteger( idtcyLeftRight, 0 );                        var idleftAki = stringIDToTypeID( "leftAki" );                        desc1970.putDouble( idleftAki, -1.000000 );                        var idrightAki = stringIDToTypeID( "rightAki" );                        desc1970.putDouble( idrightAki, -1.000000 );                        var idjiDori = stringIDToTypeID( "jiDori" );                        desc1970.putInteger( idjiDori, 0 );                        var idnoBreak = stringIDToTypeID( "noBreak" );                        desc1970.putBoolean( idnoBreak, false );                        var idClr = charIDToTypeID( "Clr " );                            var desc1971 = new ActionDescriptor();                            var idCyn = charIDToTypeID( "Cyn " );                            desc1971.putDouble( idCyn, 74.520000 );                            var idMgnt = charIDToTypeID( "Mgnt" );                            desc1971.putDouble( idMgnt, 67.780000 );                            var idYlw = charIDToTypeID( "Ylw " );                            desc1971.putDouble( idYlw, 67.130000 );                            var idBlck = charIDToTypeID( "Blck" );                            desc1971.putDouble( idBlck, 89.630000 );                        var idCMYC = charIDToTypeID( "CMYC" );                        desc1970.putObject( idClr, idCMYC, desc1971 );                        var idstrokeColor = stringIDToTypeID( "strokeColor" );                            var desc1972 = new ActionDescriptor();                            var idCyn = charIDToTypeID( "Cyn " );                            desc1972.putDouble( idCyn, 74.520000 );                            var idMgnt = charIDToTypeID( "Mgnt" );                            desc1972.putDouble( idMgnt, 67.780000 );                            var idYlw = charIDToTypeID( "Ylw " );                            desc1972.putDouble( idYlw, 67.130000 );                            var idBlck = charIDToTypeID( "Blck" );                            desc1972.putDouble( idBlck, 89.630000 );                        var idCMYC = charIDToTypeID( "CMYC" );                        desc1970.putObject( idstrokeColor, idCMYC, desc1972 );                        var idFl = charIDToTypeID( "Fl  " );                        desc1970.putBoolean( idFl, true );                        var idStrk = charIDToTypeID( "Strk" );                        desc1970.putBoolean( idStrk, false );                        var idfillFirst = stringIDToTypeID( "fillFirst" );                        desc1970.putBoolean( idfillFirst, true );                        var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );                        desc1970.putBoolean( idfillOverPrint, false );                        var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );                        desc1970.putBoolean( idstrokeOverPrint, false );                        var idlineCap = stringIDToTypeID( "lineCap" );                        var idlineCap = stringIDToTypeID( "lineCap" );                        var idbuttCap = stringIDToTypeID( "buttCap" );                        desc1970.putEnumerated( idlineCap, idlineCap, idbuttCap );                        var idlineJoin = stringIDToTypeID( "lineJoin" );                        var idlineJoin = stringIDToTypeID( "lineJoin" );                        var idmiterJoin = stringIDToTypeID( "miterJoin" );                        desc1970.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );                        var idlineWidth = stringIDToTypeID( "lineWidth" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1970.putUnitDouble( idlineWidth, idPnt, 0.240000 );                        var idmiterLimit = stringIDToTypeID( "miterLimit" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1970.putUnitDouble( idmiterLimit, idPnt, 0.960000 );                        var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );                        desc1970.putDouble( idlineDashoffset, 0.000000 );                    var idTxtS = charIDToTypeID( "TxtS" );                    desc1969.putObject( iddefaultStyle, idTxtS, desc1970 );                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );                desc1968.putObject( idparagraphStyle, idparagraphStyle, desc1969 );            var idparagraphStyleRange = stringIDToTypeID( "paragraphStyleRange" );            list105.putObject( idparagraphStyleRange, desc1968 );                var desc1973 = new ActionDescriptor();                var idFrom = charIDToTypeID( "From" );                desc1973.putInteger( idFrom, 2818 );                var idT = charIDToTypeID( "T   " );                desc1973.putInteger( idT, 3074 );                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );                    var desc1974 = new ActionDescriptor();                    var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );                    desc1974.putBoolean( idstyleSheetHasParent, true );                    var idAlgn = charIDToTypeID( "Algn" );                    var idAlg = charIDToTypeID( "Alg " );                    var idjustifyLeft = stringIDToTypeID( "justifyLeft" );                    desc1974.putEnumerated( idAlgn, idAlg, idjustifyLeft );                    var idfirstLineIndent = stringIDToTypeID( "firstLineIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1974.putUnitDouble( idfirstLineIndent, idPnt, 23.828448 );                    var idstartIndent = stringIDToTypeID( "startIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1974.putUnitDouble( idstartIndent, idPnt, 0.000000 );                    var idendIndent = stringIDToTypeID( "endIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1974.putUnitDouble( idendIndent, idPnt, 0.000000 );                    var idspaceBefore = stringIDToTypeID( "spaceBefore" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1974.putUnitDouble( idspaceBefore, idPnt, 0.150494 );                    var idspaceAfter = stringIDToTypeID( "spaceAfter" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1974.putUnitDouble( idspaceAfter, idPnt, 0.000000 );                    var iddropCapMultiplier = stringIDToTypeID( "dropCapMultiplier" );                    desc1974.putInteger( iddropCapMultiplier, 1 );                    var idautoLeadingPercentage = stringIDToTypeID( "autoLeadingPercentage" );                    desc1974.putDouble( idautoLeadingPercentage, 1.750000 );                    var idleadingType = stringIDToTypeID( "leadingType" );                    var idleadingType = stringIDToTypeID( "leadingType" );                    var idleadingAbove = stringIDToTypeID( "leadingAbove" );                    desc1974.putEnumerated( idleadingType, idleadingType, idleadingAbove );                    var idhyphenate = stringIDToTypeID( "hyphenate" );                    desc1974.putBoolean( idhyphenate, true );                    var idhyphenateWordSize = stringIDToTypeID( "hyphenateWordSize" );                    desc1974.putInteger( idhyphenateWordSize, 6 );                    var idhyphenatePreLength = stringIDToTypeID( "hyphenatePreLength" );                    desc1974.putInteger( idhyphenatePreLength, 2 );                    var idhyphenatePostLength = stringIDToTypeID( "hyphenatePostLength" );                    desc1974.putInteger( idhyphenatePostLength, 2 );                    var idhyphenateLimit = stringIDToTypeID( "hyphenateLimit" );                    desc1974.putInteger( idhyphenateLimit, 0 );                    var idhyphenationZone = stringIDToTypeID( "hyphenationZone" );                    desc1974.putDouble( idhyphenationZone, 36.000000 );                    var idhyphenateCapitalized = stringIDToTypeID( "hyphenateCapitalized" );                    desc1974.putBoolean( idhyphenateCapitalized, true );                    var idhyphenationPreference = stringIDToTypeID( "hyphenationPreference" );                    desc1974.putDouble( idhyphenationPreference, 0.500000 );                    var idjustificationWordMinimum = stringIDToTypeID( "justificationWordMinimum" );                    desc1974.putDouble( idjustificationWordMinimum, 0.800000 );                    var idjustificationWordDesired = stringIDToTypeID( "justificationWordDesired" );                    desc1974.putDouble( idjustificationWordDesired, 1.000000 );                    var idjustificationWordMaximum = stringIDToTypeID( "justificationWordMaximum" );                    desc1974.putDouble( idjustificationWordMaximum, 1.330000 );                    var idjustificationLetterMinimum = stringIDToTypeID( "justificationLetterMinimum" );                    desc1974.putDouble( idjustificationLetterMinimum, 0.000000 );                    var idjustificationLetterDesired = stringIDToTypeID( "justificationLetterDesired" );                    desc1974.putDouble( idjustificationLetterDesired, 0.000000 );                    var idjustificationLetterMaximum = stringIDToTypeID( "justificationLetterMaximum" );                    desc1974.putDouble( idjustificationLetterMaximum, 0.000000 );                    var idjustificationGlyphMinimum = stringIDToTypeID( "justificationGlyphMinimum" );                    desc1974.putDouble( idjustificationGlyphMinimum, 1.000000 );                    var idjustificationGlyphDesired = stringIDToTypeID( "justificationGlyphDesired" );                    desc1974.putDouble( idjustificationGlyphDesired, 1.000000 );                    var idjustificationGlyphMaximum = stringIDToTypeID( "justificationGlyphMaximum" );                    desc1974.putDouble( idjustificationGlyphMaximum, 1.000000 );                    var idsingleWordJustification = stringIDToTypeID( "singleWordJustification" );                    var idAlg = charIDToTypeID( "Alg " );                    var idJstA = charIDToTypeID( "JstA" );                    desc1974.putEnumerated( idsingleWordJustification, idAlg, idJstA );                    var idhangingRoman = stringIDToTypeID( "hangingRoman" );                    desc1974.putBoolean( idhangingRoman, false );                    var idautoTCY = stringIDToTypeID( "autoTCY" );                    desc1974.putInteger( idautoTCY, 1 );                    var idkeepTogether = stringIDToTypeID( "keepTogether" );                    desc1974.putBoolean( idkeepTogether, true );                    var idburasagari = stringIDToTypeID( "burasagari" );                    var idburasagari = stringIDToTypeID( "burasagari" );                    var idburasagariNone = stringIDToTypeID( "burasagariNone" );                    desc1974.putEnumerated( idburasagari, idburasagari, idburasagariNone );                    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );                    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );                    var idpushIn = stringIDToTypeID( "pushIn" );                    desc1974.putEnumerated( idpreferredKinsokuOrder, idpreferredKinsokuOrder, idpushIn );                    var idkurikaeshiMojiShori = stringIDToTypeID( "kurikaeshiMojiShori" );                    desc1974.putBoolean( idkurikaeshiMojiShori, false );                    var idkinsokuSetName = stringIDToTypeID( "kinsokuSetName" );                    var idkinsokuSetName = stringIDToTypeID( "kinsokuSetName" );                    var idSoft = stringIDToTypeID( "Soft" );                    desc1974.putEnumerated( idkinsokuSetName, idkinsokuSetName, idSoft );                    var idmojiKumiName = stringIDToTypeID( "mojiKumiName" );                    var idmojiKumiName = stringIDToTypeID( "mojiKumiName" );                    var idPhotoshopsixMojiKumiSetone = stringIDToTypeID( "Photoshop6MojiKumiSet1" );                    desc1974.putEnumerated( idmojiKumiName, idmojiKumiName, idPhotoshopsixMojiKumiSetone );                    var idtextEveryLineComposer = stringIDToTypeID( "textEveryLineComposer" );                    desc1974.putBoolean( idtextEveryLineComposer, false );                    var iddefaultTabWidth = stringIDToTypeID( "defaultTabWidth" );                    desc1974.putDouble( iddefaultTabWidth, 36.000000 );                    var iddefaultStyle = stringIDToTypeID( "defaultStyle" );                        var desc1975 = new ActionDescriptor();                        var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );                        desc1975.putString( idfontPostScriptName, """FZBWKSJW--GB1-0""" );                        var idFntN = charIDToTypeID( "FntN" );                        desc1975.putString( idFntN, """FZBWKSJW""" );                        var idFntS = charIDToTypeID( "FntS" );                        desc1975.putString( idFntS, """-GB1-0""" );                        var idScrp = charIDToTypeID( "Scrp" );                        desc1975.putInteger( idScrp, 25 );                        var idFntT = charIDToTypeID( "FntT" );                        desc1975.putInteger( idFntT, 2 );                        var idSz = charIDToTypeID( "Sz  " );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1975.putUnitDouble( idSz, idPnt, 2.880000 );                        var idHrzS = charIDToTypeID( "HrzS" );                        desc1975.putDouble( idHrzS, 100.000000 );                        var idVrtS = charIDToTypeID( "VrtS" );                        desc1975.putDouble( idVrtS, 100.000000 );                        var idsyntheticBold = stringIDToTypeID( "syntheticBold" );                        desc1975.putBoolean( idsyntheticBold, false );                        var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );                        desc1975.putBoolean( idsyntheticItalic, false );                        var idautoLeading = stringIDToTypeID( "autoLeading" );                        desc1975.putBoolean( idautoLeading, true );                        var idTrck = charIDToTypeID( "Trck" );                        desc1975.putInteger( idTrck, 0 );                        var idBsln = charIDToTypeID( "Bsln" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1975.putUnitDouble( idBsln, idPnt, 0.000000 );                        var idcharacterRotation = stringIDToTypeID( "characterRotation" );                        desc1975.putDouble( idcharacterRotation, 0.000000 );                        var idfontCaps = stringIDToTypeID( "fontCaps" );                        var idfontCaps = stringIDToTypeID( "fontCaps" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1975.putEnumerated( idfontCaps, idfontCaps, idNrml );                        var idbaseline = stringIDToTypeID( "baseline" );                        var idbaseline = stringIDToTypeID( "baseline" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1975.putEnumerated( idbaseline, idbaseline, idNrml );                        var idotbaseline = stringIDToTypeID( "otbaseline" );                        var idotbaseline = stringIDToTypeID( "otbaseline" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1975.putEnumerated( idotbaseline, idotbaseline, idNrml );                        var idstrikethrough = stringIDToTypeID( "strikethrough" );                        var idstrikethrough = stringIDToTypeID( "strikethrough" );                        var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );                        desc1975.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );                        var idUndl = charIDToTypeID( "Undl" );                        var idUndl = charIDToTypeID( "Undl" );                        var idunderlineOff = stringIDToTypeID( "underlineOff" );                        desc1975.putEnumerated( idUndl, idUndl, idunderlineOff );                        var idunderlineOffset = stringIDToTypeID( "underlineOffset" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1975.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );                        var idligature = stringIDToTypeID( "ligature" );                        desc1975.putBoolean( idligature, true );                        var idaltligature = stringIDToTypeID( "altligature" );                        desc1975.putBoolean( idaltligature, false );                        var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );                        desc1975.putBoolean( idcontextualLigatures, false );                        var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );                        desc1975.putBoolean( idalternateLigatures, false );                        var idoldStyle = stringIDToTypeID( "oldStyle" );                        desc1975.putBoolean( idoldStyle, false );                        var idfractions = stringIDToTypeID( "fractions" );                        desc1975.putBoolean( idfractions, false );                        var idordinals = stringIDToTypeID( "ordinals" );                        desc1975.putBoolean( idordinals, false );                        var idswash = stringIDToTypeID( "swash" );                        desc1975.putBoolean( idswash, false );                        var idtitling = stringIDToTypeID( "titling" );                        desc1975.putBoolean( idtitling, false );                        var idconnectionForms = stringIDToTypeID( "connectionForms" );                        desc1975.putBoolean( idconnectionForms, false );                        var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );                        desc1975.putBoolean( idstylisticAlternates, false );                        var idornaments = stringIDToTypeID( "ornaments" );                        desc1975.putBoolean( idornaments, false );                        var idfigureStyle = stringIDToTypeID( "figureStyle" );                        var idfigureStyle = stringIDToTypeID( "figureStyle" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1975.putEnumerated( idfigureStyle, idfigureStyle, idNrml );                        var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );                        desc1975.putBoolean( idproportionalMetrics, false );                        var idkana = stringIDToTypeID( "kana" );                        desc1975.putBoolean( idkana, false );                        var iditalics = stringIDToTypeID( "italics" );                        desc1975.putBoolean( iditalics, false );                        var idruby = stringIDToTypeID( "ruby" );                        desc1975.putBoolean( idruby, false );                        var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                        var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                        var idrotated = stringIDToTypeID( "rotated" );                        desc1975.putEnumerated( idbaselineDirection, idbaselineDirection, idrotated );                        var idtextLanguage = stringIDToTypeID( "textLanguage" );                        var idtextLanguage = stringIDToTypeID( "textLanguage" );                        var idenglishLanguage = stringIDToTypeID( "englishLanguage" );                        desc1975.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );                        var idmojiZume = stringIDToTypeID( "mojiZume" );                        desc1975.putDouble( idmojiZume, 0.000000 );                        var idgridAlignment = stringIDToTypeID( "gridAlignment" );                        var idgridAlignment = stringIDToTypeID( "gridAlignment" );                        var idroman = stringIDToTypeID( "roman" );                        desc1975.putEnumerated( idgridAlignment, idgridAlignment, idroman );                        var idenableWariChu = stringIDToTypeID( "enableWariChu" );                        desc1975.putBoolean( idenableWariChu, false );                        var idwariChuCount = stringIDToTypeID( "wariChuCount" );                        desc1975.putInteger( idwariChuCount, 2 );                        var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );                        desc1975.putInteger( idwariChuLineGap, 0 );                        var idwariChuScale = stringIDToTypeID( "wariChuScale" );                        desc1975.putDouble( idwariChuScale, 0.500000 );                        var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );                        desc1975.putInteger( idwariChuWidow, 2 );                        var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );                        desc1975.putInteger( idwariChuOrphan, 2 );                        var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                        var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                        var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );                        desc1975.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );                        var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );                        desc1975.putInteger( idtcyUpDown, 0 );                        var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );                        desc1975.putInteger( idtcyLeftRight, 0 );                        var idleftAki = stringIDToTypeID( "leftAki" );                        desc1975.putDouble( idleftAki, -1.000000 );                        var idrightAki = stringIDToTypeID( "rightAki" );                        desc1975.putDouble( idrightAki, -1.000000 );                        var idjiDori = stringIDToTypeID( "jiDori" );                        desc1975.putInteger( idjiDori, 0 );                        var idnoBreak = stringIDToTypeID( "noBreak" );                        desc1975.putBoolean( idnoBreak, false );                        var idClr = charIDToTypeID( "Clr " );                            var desc1976 = new ActionDescriptor();                            var idCyn = charIDToTypeID( "Cyn " );                            desc1976.putDouble( idCyn, 74.520000 );                            var idMgnt = charIDToTypeID( "Mgnt" );                            desc1976.putDouble( idMgnt, 67.780000 );                            var idYlw = charIDToTypeID( "Ylw " );                            desc1976.putDouble( idYlw, 67.130000 );                            var idBlck = charIDToTypeID( "Blck" );                            desc1976.putDouble( idBlck, 89.630000 );                        var idCMYC = charIDToTypeID( "CMYC" );                        desc1975.putObject( idClr, idCMYC, desc1976 );                        var idstrokeColor = stringIDToTypeID( "strokeColor" );                            var desc1977 = new ActionDescriptor();                            var idCyn = charIDToTypeID( "Cyn " );                            desc1977.putDouble( idCyn, 74.520000 );                            var idMgnt = charIDToTypeID( "Mgnt" );                            desc1977.putDouble( idMgnt, 67.780000 );                            var idYlw = charIDToTypeID( "Ylw " );                            desc1977.putDouble( idYlw, 67.130000 );                            var idBlck = charIDToTypeID( "Blck" );                            desc1977.putDouble( idBlck, 89.630000 );                        var idCMYC = charIDToTypeID( "CMYC" );                        desc1975.putObject( idstrokeColor, idCMYC, desc1977 );                        var idFl = charIDToTypeID( "Fl  " );                        desc1975.putBoolean( idFl, true );                        var idStrk = charIDToTypeID( "Strk" );                        desc1975.putBoolean( idStrk, false );                        var idfillFirst = stringIDToTypeID( "fillFirst" );                        desc1975.putBoolean( idfillFirst, true );                        var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );                        desc1975.putBoolean( idfillOverPrint, false );                        var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );                        desc1975.putBoolean( idstrokeOverPrint, false );                        var idlineCap = stringIDToTypeID( "lineCap" );                        var idlineCap = stringIDToTypeID( "lineCap" );                        var idbuttCap = stringIDToTypeID( "buttCap" );                        desc1975.putEnumerated( idlineCap, idlineCap, idbuttCap );                        var idlineJoin = stringIDToTypeID( "lineJoin" );                        var idlineJoin = stringIDToTypeID( "lineJoin" );                        var idmiterJoin = stringIDToTypeID( "miterJoin" );                        desc1975.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );                        var idlineWidth = stringIDToTypeID( "lineWidth" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1975.putUnitDouble( idlineWidth, idPnt, 0.240000 );                        var idmiterLimit = stringIDToTypeID( "miterLimit" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1975.putUnitDouble( idmiterLimit, idPnt, 0.960000 );                        var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );                        desc1975.putDouble( idlineDashoffset, 0.000000 );                    var idTxtS = charIDToTypeID( "TxtS" );                    desc1974.putObject( iddefaultStyle, idTxtS, desc1975 );                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );                desc1973.putObject( idparagraphStyle, idparagraphStyle, desc1974 );            var idparagraphStyleRange = stringIDToTypeID( "paragraphStyleRange" );            list105.putObject( idparagraphStyleRange, desc1973 );                var desc1978 = new ActionDescriptor();                var idFrom = charIDToTypeID( "From" );                desc1978.putInteger( idFrom, 3074 );                var idT = charIDToTypeID( "T   " );                desc1978.putInteger( idT, 3075 );                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );                    var desc1979 = new ActionDescriptor();                    var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );                    desc1979.putBoolean( idstyleSheetHasParent, true );                    var idAlgn = charIDToTypeID( "Algn" );                    var idAlg = charIDToTypeID( "Alg " );                    var idjustifyLeft = stringIDToTypeID( "justifyLeft" );                    desc1979.putEnumerated( idAlgn, idAlg, idjustifyLeft );                    var idfirstLineIndent = stringIDToTypeID( "firstLineIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1979.putUnitDouble( idfirstLineIndent, idPnt, 23.828448 );                    var idstartIndent = stringIDToTypeID( "startIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1979.putUnitDouble( idstartIndent, idPnt, 0.000000 );                    var idendIndent = stringIDToTypeID( "endIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1979.putUnitDouble( idendIndent, idPnt, 0.000000 );                    var idspaceBefore = stringIDToTypeID( "spaceBefore" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1979.putUnitDouble( idspaceBefore, idPnt, 0.150494 );                    var idspaceAfter = stringIDToTypeID( "spaceAfter" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1979.putUnitDouble( idspaceAfter, idPnt, 0.000000 );                    var iddropCapMultiplier = stringIDToTypeID( "dropCapMultiplier" );                    desc1979.putInteger( iddropCapMultiplier, 1 );                    var idautoLeadingPercentage = stringIDToTypeID( "autoLeadingPercentage" );                    desc1979.putDouble( idautoLeadingPercentage, 1.750000 );                    var idleadingType = stringIDToTypeID( "leadingType" );                    var idleadingType = stringIDToTypeID( "leadingType" );                    var idleadingAbove = stringIDToTypeID( "leadingAbove" );                    desc1979.putEnumerated( idleadingType, idleadingType, idleadingAbove );                    var idhyphenate = stringIDToTypeID( "hyphenate" );                    desc1979.putBoolean( idhyphenate, true );                    var idhyphenateWordSize = stringIDToTypeID( "hyphenateWordSize" );                    desc1979.putInteger( idhyphenateWordSize, 6 );                    var idhyphenatePreLength = stringIDToTypeID( "hyphenatePreLength" );                    desc1979.putInteger( idhyphenatePreLength, 2 );                    var idhyphenatePostLength = stringIDToTypeID( "hyphenatePostLength" );                    desc1979.putInteger( idhyphenatePostLength, 2 );                    var idhyphenateLimit = stringIDToTypeID( "hyphenateLimit" );                    desc1979.putInteger( idhyphenateLimit, 0 );                    var idhyphenationZone = stringIDToTypeID( "hyphenationZone" );                    desc1979.putDouble( idhyphenationZone, 36.000000 );                    var idhyphenateCapitalized = stringIDToTypeID( "hyphenateCapitalized" );                    desc1979.putBoolean( idhyphenateCapitalized, true );                    var idhyphenationPreference = stringIDToTypeID( "hyphenationPreference" );                    desc1979.putDouble( idhyphenationPreference, 0.500000 );                    var idjustificationWordMinimum = stringIDToTypeID( "justificationWordMinimum" );                    desc1979.putDouble( idjustificationWordMinimum, 0.800000 );                    var idjustificationWordDesired = stringIDToTypeID( "justificationWordDesired" );                    desc1979.putDouble( idjustificationWordDesired, 1.000000 );                    var idjustificationWordMaximum = stringIDToTypeID( "justificationWordMaximum" );                    desc1979.putDouble( idjustificationWordMaximum, 1.330000 );                    var idjustificationLetterMinimum = stringIDToTypeID( "justificationLetterMinimum" );                    desc1979.putDouble( idjustificationLetterMinimum, 0.000000 );                    var idjustificationLetterDesired = stringIDToTypeID( "justificationLetterDesired" );                    desc1979.putDouble( idjustificationLetterDesired, 0.000000 );                    var idjustificationLetterMaximum = stringIDToTypeID( "justificationLetterMaximum" );                    desc1979.putDouble( idjustificationLetterMaximum, 0.000000 );                    var idjustificationGlyphMinimum = stringIDToTypeID( "justificationGlyphMinimum" );                    desc1979.putDouble( idjustificationGlyphMinimum, 1.000000 );                    var idjustificationGlyphDesired = stringIDToTypeID( "justificationGlyphDesired" );                    desc1979.putDouble( idjustificationGlyphDesired, 1.000000 );                    var idjustificationGlyphMaximum = stringIDToTypeID( "justificationGlyphMaximum" );                    desc1979.putDouble( idjustificationGlyphMaximum, 1.000000 );                    var idsingleWordJustification = stringIDToTypeID( "singleWordJustification" );                    var idAlg = charIDToTypeID( "Alg " );                    var idJstA = charIDToTypeID( "JstA" );                    desc1979.putEnumerated( idsingleWordJustification, idAlg, idJstA );                    var idhangingRoman = stringIDToTypeID( "hangingRoman" );                    desc1979.putBoolean( idhangingRoman, false );                    var idautoTCY = stringIDToTypeID( "autoTCY" );                    desc1979.putInteger( idautoTCY, 1 );                    var idkeepTogether = stringIDToTypeID( "keepTogether" );                    desc1979.putBoolean( idkeepTogether, true );                    var idburasagari = stringIDToTypeID( "burasagari" );                    var idburasagari = stringIDToTypeID( "burasagari" );                    var idburasagariNone = stringIDToTypeID( "burasagariNone" );                    desc1979.putEnumerated( idburasagari, idburasagari, idburasagariNone );                    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );                    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );                    var idpushIn = stringIDToTypeID( "pushIn" );                    desc1979.putEnumerated( idpreferredKinsokuOrder, idpreferredKinsokuOrder, idpushIn );                    var idkurikaeshiMojiShori = stringIDToTypeID( "kurikaeshiMojiShori" );                    desc1979.putBoolean( idkurikaeshiMojiShori, false );                    var idkinsokuSetName = stringIDToTypeID( "kinsokuSetName" );                    var idkinsokuSetName = stringIDToTypeID( "kinsokuSetName" );                    var idSoft = stringIDToTypeID( "Soft" );                    desc1979.putEnumerated( idkinsokuSetName, idkinsokuSetName, idSoft );                    var idmojiKumiName = stringIDToTypeID( "mojiKumiName" );                    var idmojiKumiName = stringIDToTypeID( "mojiKumiName" );                    var idPhotoshopsixMojiKumiSetone = stringIDToTypeID( "Photoshop6MojiKumiSet1" );                    desc1979.putEnumerated( idmojiKumiName, idmojiKumiName, idPhotoshopsixMojiKumiSetone );                    var idtextEveryLineComposer = stringIDToTypeID( "textEveryLineComposer" );                    desc1979.putBoolean( idtextEveryLineComposer, false );                    var iddefaultTabWidth = stringIDToTypeID( "defaultTabWidth" );                    desc1979.putDouble( iddefaultTabWidth, 36.000000 );                    var iddefaultStyle = stringIDToTypeID( "defaultStyle" );                        var desc1980 = new ActionDescriptor();                        var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );                        desc1980.putString( idfontPostScriptName, """FZBWKSJW--GB1-0""" );                        var idFntN = charIDToTypeID( "FntN" );                        desc1980.putString( idFntN, """FZBWKSJW""" );                        var idFntS = charIDToTypeID( "FntS" );                        desc1980.putString( idFntS, """-GB1-0""" );                        var idScrp = charIDToTypeID( "Scrp" );                        desc1980.putInteger( idScrp, 25 );                        var idFntT = charIDToTypeID( "FntT" );                        desc1980.putInteger( idFntT, 2 );                        var idSz = charIDToTypeID( "Sz  " );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1980.putUnitDouble( idSz, idPnt, 2.880000 );                        var idHrzS = charIDToTypeID( "HrzS" );                        desc1980.putDouble( idHrzS, 100.000000 );                        var idVrtS = charIDToTypeID( "VrtS" );                        desc1980.putDouble( idVrtS, 100.000000 );                        var idsyntheticBold = stringIDToTypeID( "syntheticBold" );                        desc1980.putBoolean( idsyntheticBold, false );                        var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );                        desc1980.putBoolean( idsyntheticItalic, false );                        var idautoLeading = stringIDToTypeID( "autoLeading" );                        desc1980.putBoolean( idautoLeading, true );                        var idTrck = charIDToTypeID( "Trck" );                        desc1980.putInteger( idTrck, 0 );                        var idBsln = charIDToTypeID( "Bsln" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1980.putUnitDouble( idBsln, idPnt, 0.000000 );                        var idcharacterRotation = stringIDToTypeID( "characterRotation" );                        desc1980.putDouble( idcharacterRotation, 0.000000 );                        var idfontCaps = stringIDToTypeID( "fontCaps" );                        var idfontCaps = stringIDToTypeID( "fontCaps" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1980.putEnumerated( idfontCaps, idfontCaps, idNrml );                        var idbaseline = stringIDToTypeID( "baseline" );                        var idbaseline = stringIDToTypeID( "baseline" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1980.putEnumerated( idbaseline, idbaseline, idNrml );                        var idotbaseline = stringIDToTypeID( "otbaseline" );                        var idotbaseline = stringIDToTypeID( "otbaseline" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1980.putEnumerated( idotbaseline, idotbaseline, idNrml );                        var idstrikethrough = stringIDToTypeID( "strikethrough" );                        var idstrikethrough = stringIDToTypeID( "strikethrough" );                        var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );                        desc1980.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );                        var idUndl = charIDToTypeID( "Undl" );                        var idUndl = charIDToTypeID( "Undl" );                        var idunderlineOff = stringIDToTypeID( "underlineOff" );                        desc1980.putEnumerated( idUndl, idUndl, idunderlineOff );                        var idunderlineOffset = stringIDToTypeID( "underlineOffset" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1980.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );                        var idligature = stringIDToTypeID( "ligature" );                        desc1980.putBoolean( idligature, true );                        var idaltligature = stringIDToTypeID( "altligature" );                        desc1980.putBoolean( idaltligature, false );                        var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );                        desc1980.putBoolean( idcontextualLigatures, false );                        var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );                        desc1980.putBoolean( idalternateLigatures, false );                        var idoldStyle = stringIDToTypeID( "oldStyle" );                        desc1980.putBoolean( idoldStyle, false );                        var idfractions = stringIDToTypeID( "fractions" );                        desc1980.putBoolean( idfractions, false );                        var idordinals = stringIDToTypeID( "ordinals" );                        desc1980.putBoolean( idordinals, false );                        var idswash = stringIDToTypeID( "swash" );                        desc1980.putBoolean( idswash, false );                        var idtitling = stringIDToTypeID( "titling" );                        desc1980.putBoolean( idtitling, false );                        var idconnectionForms = stringIDToTypeID( "connectionForms" );                        desc1980.putBoolean( idconnectionForms, false );                        var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );                        desc1980.putBoolean( idstylisticAlternates, false );                        var idornaments = stringIDToTypeID( "ornaments" );                        desc1980.putBoolean( idornaments, false );                        var idfigureStyle = stringIDToTypeID( "figureStyle" );                        var idfigureStyle = stringIDToTypeID( "figureStyle" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1980.putEnumerated( idfigureStyle, idfigureStyle, idNrml );                        var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );                        desc1980.putBoolean( idproportionalMetrics, false );                        var idkana = stringIDToTypeID( "kana" );                        desc1980.putBoolean( idkana, false );                        var iditalics = stringIDToTypeID( "italics" );                        desc1980.putBoolean( iditalics, false );                        var idruby = stringIDToTypeID( "ruby" );                        desc1980.putBoolean( idruby, false );                        var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                        var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                        var idrotated = stringIDToTypeID( "rotated" );                        desc1980.putEnumerated( idbaselineDirection, idbaselineDirection, idrotated );                        var idtextLanguage = stringIDToTypeID( "textLanguage" );                        var idtextLanguage = stringIDToTypeID( "textLanguage" );                        var idenglishLanguage = stringIDToTypeID( "englishLanguage" );                        desc1980.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );                        var idmojiZume = stringIDToTypeID( "mojiZume" );                        desc1980.putDouble( idmojiZume, 0.000000 );                        var idgridAlignment = stringIDToTypeID( "gridAlignment" );                        var idgridAlignment = stringIDToTypeID( "gridAlignment" );                        var idroman = stringIDToTypeID( "roman" );                        desc1980.putEnumerated( idgridAlignment, idgridAlignment, idroman );                        var idenableWariChu = stringIDToTypeID( "enableWariChu" );                        desc1980.putBoolean( idenableWariChu, false );                        var idwariChuCount = stringIDToTypeID( "wariChuCount" );                        desc1980.putInteger( idwariChuCount, 2 );                        var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );                        desc1980.putInteger( idwariChuLineGap, 0 );                        var idwariChuScale = stringIDToTypeID( "wariChuScale" );                        desc1980.putDouble( idwariChuScale, 0.500000 );                        var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );                        desc1980.putInteger( idwariChuWidow, 2 );                        var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );                        desc1980.putInteger( idwariChuOrphan, 2 );                        var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                        var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                        var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );                        desc1980.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );                        var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );                        desc1980.putInteger( idtcyUpDown, 0 );                        var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );                        desc1980.putInteger( idtcyLeftRight, 0 );                        var idleftAki = stringIDToTypeID( "leftAki" );                        desc1980.putDouble( idleftAki, -1.000000 );                        var idrightAki = stringIDToTypeID( "rightAki" );                        desc1980.putDouble( idrightAki, -1.000000 );                        var idjiDori = stringIDToTypeID( "jiDori" );                        desc1980.putInteger( idjiDori, 0 );                        var idnoBreak = stringIDToTypeID( "noBreak" );                        desc1980.putBoolean( idnoBreak, false );                        var idClr = charIDToTypeID( "Clr " );                            var desc1981 = new ActionDescriptor();                            var idCyn = charIDToTypeID( "Cyn " );                            desc1981.putDouble( idCyn, 74.520000 );                            var idMgnt = charIDToTypeID( "Mgnt" );                            desc1981.putDouble( idMgnt, 67.780000 );                            var idYlw = charIDToTypeID( "Ylw " );                            desc1981.putDouble( idYlw, 67.130000 );                            var idBlck = charIDToTypeID( "Blck" );                            desc1981.putDouble( idBlck, 89.630000 );                        var idCMYC = charIDToTypeID( "CMYC" );                        desc1980.putObject( idClr, idCMYC, desc1981 );                        var idstrokeColor = stringIDToTypeID( "strokeColor" );                            var desc1982 = new ActionDescriptor();                            var idCyn = charIDToTypeID( "Cyn " );                            desc1982.putDouble( idCyn, 74.520000 );                            var idMgnt = charIDToTypeID( "Mgnt" );                            desc1982.putDouble( idMgnt, 67.780000 );                            var idYlw = charIDToTypeID( "Ylw " );                            desc1982.putDouble( idYlw, 67.130000 );                            var idBlck = charIDToTypeID( "Blck" );                            desc1982.putDouble( idBlck, 89.630000 );                        var idCMYC = charIDToTypeID( "CMYC" );                        desc1980.putObject( idstrokeColor, idCMYC, desc1982 );                        var idFl = charIDToTypeID( "Fl  " );                        desc1980.putBoolean( idFl, true );                        var idStrk = charIDToTypeID( "Strk" );                        desc1980.putBoolean( idStrk, false );                        var idfillFirst = stringIDToTypeID( "fillFirst" );                        desc1980.putBoolean( idfillFirst, true );                        var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );                        desc1980.putBoolean( idfillOverPrint, false );                        var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );                        desc1980.putBoolean( idstrokeOverPrint, false );                        var idlineCap = stringIDToTypeID( "lineCap" );                        var idlineCap = stringIDToTypeID( "lineCap" );                        var idbuttCap = stringIDToTypeID( "buttCap" );                        desc1980.putEnumerated( idlineCap, idlineCap, idbuttCap );                        var idlineJoin = stringIDToTypeID( "lineJoin" );                        var idlineJoin = stringIDToTypeID( "lineJoin" );                        var idmiterJoin = stringIDToTypeID( "miterJoin" );                        desc1980.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );                        var idlineWidth = stringIDToTypeID( "lineWidth" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1980.putUnitDouble( idlineWidth, idPnt, 0.240000 );                        var idmiterLimit = stringIDToTypeID( "miterLimit" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1980.putUnitDouble( idmiterLimit, idPnt, 0.960000 );                        var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );                        desc1980.putDouble( idlineDashoffset, 0.000000 );                    var idTxtS = charIDToTypeID( "TxtS" );                    desc1979.putObject( iddefaultStyle, idTxtS, desc1980 );                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );                desc1978.putObject( idparagraphStyle, idparagraphStyle, desc1979 );            var idparagraphStyleRange = stringIDToTypeID( "paragraphStyleRange" );            list105.putObject( idparagraphStyleRange, desc1978 );                var desc1983 = new ActionDescriptor();                var idFrom = charIDToTypeID( "From" );                desc1983.putInteger( idFrom, 3075 );                var idT = charIDToTypeID( "T   " );                desc1983.putInteger( idT, 3331 );                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );                    var desc1984 = new ActionDescriptor();                    var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );                    desc1984.putBoolean( idstyleSheetHasParent, true );                    var idAlgn = charIDToTypeID( "Algn" );                    var idAlg = charIDToTypeID( "Alg " );                    var idjustifyLeft = stringIDToTypeID( "justifyLeft" );                    desc1984.putEnumerated( idAlgn, idAlg, idjustifyLeft );                    var idfirstLineIndent = stringIDToTypeID( "firstLineIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1984.putUnitDouble( idfirstLineIndent, idPnt, 23.828448 );                    var idstartIndent = stringIDToTypeID( "startIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1984.putUnitDouble( idstartIndent, idPnt, 0.000000 );                    var idendIndent = stringIDToTypeID( "endIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1984.putUnitDouble( idendIndent, idPnt, 0.000000 );                    var idspaceBefore = stringIDToTypeID( "spaceBefore" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1984.putUnitDouble( idspaceBefore, idPnt, 0.150494 );                    var idspaceAfter = stringIDToTypeID( "spaceAfter" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1984.putUnitDouble( idspaceAfter, idPnt, 0.000000 );                    var iddropCapMultiplier = stringIDToTypeID( "dropCapMultiplier" );                    desc1984.putInteger( iddropCapMultiplier, 1 );                    var idautoLeadingPercentage = stringIDToTypeID( "autoLeadingPercentage" );                    desc1984.putDouble( idautoLeadingPercentage, 1.750000 );                    var idleadingType = stringIDToTypeID( "leadingType" );                    var idleadingType = stringIDToTypeID( "leadingType" );                    var idleadingAbove = stringIDToTypeID( "leadingAbove" );                    desc1984.putEnumerated( idleadingType, idleadingType, idleadingAbove );                    var idhyphenate = stringIDToTypeID( "hyphenate" );                    desc1984.putBoolean( idhyphenate, true );                    var idhyphenateWordSize = stringIDToTypeID( "hyphenateWordSize" );                    desc1984.putInteger( idhyphenateWordSize, 6 );                    var idhyphenatePreLength = stringIDToTypeID( "hyphenatePreLength" );                    desc1984.putInteger( idhyphenatePreLength, 2 );                    var idhyphenatePostLength = stringIDToTypeID( "hyphenatePostLength" );                    desc1984.putInteger( idhyphenatePostLength, 2 );                    var idhyphenateLimit = stringIDToTypeID( "hyphenateLimit" );                    desc1984.putInteger( idhyphenateLimit, 0 );                    var idhyphenationZone = stringIDToTypeID( "hyphenationZone" );                    desc1984.putDouble( idhyphenationZone, 36.000000 );                    var idhyphenateCapitalized = stringIDToTypeID( "hyphenateCapitalized" );                    desc1984.putBoolean( idhyphenateCapitalized, true );                    var idhyphenationPreference = stringIDToTypeID( "hyphenationPreference" );                    desc1984.putDouble( idhyphenationPreference, 0.500000 );                    var idjustificationWordMinimum = stringIDToTypeID( "justificationWordMinimum" );                    desc1984.putDouble( idjustificationWordMinimum, 0.800000 );                    var idjustificationWordDesired = stringIDToTypeID( "justificationWordDesired" );                    desc1984.putDouble( idjustificationWordDesired, 1.000000 );                    var idjustificationWordMaximum = stringIDToTypeID( "justificationWordMaximum" );                    desc1984.putDouble( idjustificationWordMaximum, 1.330000 );                    var idjustificationLetterMinimum = stringIDToTypeID( "justificationLetterMinimum" );                    desc1984.putDouble( idjustificationLetterMinimum, 0.000000 );                    var idjustificationLetterDesired = stringIDToTypeID( "justificationLetterDesired" );                    desc1984.putDouble( idjustificationLetterDesired, 0.000000 );                    var idjustificationLetterMaximum = stringIDToTypeID( "justificationLetterMaximum" );                    desc1984.putDouble( idjustificationLetterMaximum, 0.000000 );                    var idjustificationGlyphMinimum = stringIDToTypeID( "justificationGlyphMinimum" );                    desc1984.putDouble( idjustificationGlyphMinimum, 1.000000 );                    var idjustificationGlyphDesired = stringIDToTypeID( "justificationGlyphDesired" );                    desc1984.putDouble( idjustificationGlyphDesired, 1.000000 );                    var idjustificationGlyphMaximum = stringIDToTypeID( "justificationGlyphMaximum" );                    desc1984.putDouble( idjustificationGlyphMaximum, 1.000000 );                    var idsingleWordJustification = stringIDToTypeID( "singleWordJustification" );                    var idAlg = charIDToTypeID( "Alg " );                    var idJstA = charIDToTypeID( "JstA" );                    desc1984.putEnumerated( idsingleWordJustification, idAlg, idJstA );                    var idhangingRoman = stringIDToTypeID( "hangingRoman" );                    desc1984.putBoolean( idhangingRoman, false );                    var idautoTCY = stringIDToTypeID( "autoTCY" );                    desc1984.putInteger( idautoTCY, 1 );                    var idkeepTogether = stringIDToTypeID( "keepTogether" );                    desc1984.putBoolean( idkeepTogether, true );                    var idburasagari = stringIDToTypeID( "burasagari" );                    var idburasagari = stringIDToTypeID( "burasagari" );                    var idburasagariNone = stringIDToTypeID( "burasagariNone" );                    desc1984.putEnumerated( idburasagari, idburasagari, idburasagariNone );                    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );                    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );                    var idpushIn = stringIDToTypeID( "pushIn" );                    desc1984.putEnumerated( idpreferredKinsokuOrder, idpreferredKinsokuOrder, idpushIn );                    var idkurikaeshiMojiShori = stringIDToTypeID( "kurikaeshiMojiShori" );                    desc1984.putBoolean( idkurikaeshiMojiShori, false );                    var idkinsokuSetName = stringIDToTypeID( "kinsokuSetName" );                    var idkinsokuSetName = stringIDToTypeID( "kinsokuSetName" );                    var idSoft = stringIDToTypeID( "Soft" );                    desc1984.putEnumerated( idkinsokuSetName, idkinsokuSetName, idSoft );                    var idmojiKumiName = stringIDToTypeID( "mojiKumiName" );                    var idmojiKumiName = stringIDToTypeID( "mojiKumiName" );                    var idPhotoshopsixMojiKumiSetone = stringIDToTypeID( "Photoshop6MojiKumiSet1" );                    desc1984.putEnumerated( idmojiKumiName, idmojiKumiName, idPhotoshopsixMojiKumiSetone );                    var idtextEveryLineComposer = stringIDToTypeID( "textEveryLineComposer" );                    desc1984.putBoolean( idtextEveryLineComposer, false );                    var iddefaultTabWidth = stringIDToTypeID( "defaultTabWidth" );                    desc1984.putDouble( iddefaultTabWidth, 36.000000 );                    var iddefaultStyle = stringIDToTypeID( "defaultStyle" );                        var desc1985 = new ActionDescriptor();                        var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );                        desc1985.putString( idfontPostScriptName, """FZBWKSJW--GB1-0""" );                        var idFntN = charIDToTypeID( "FntN" );                        desc1985.putString( idFntN, """FZBWKSJW""" );                        var idFntS = charIDToTypeID( "FntS" );                        desc1985.putString( idFntS, """-GB1-0""" );                        var idScrp = charIDToTypeID( "Scrp" );                        desc1985.putInteger( idScrp, 25 );                        var idFntT = charIDToTypeID( "FntT" );                        desc1985.putInteger( idFntT, 2 );                        var idSz = charIDToTypeID( "Sz  " );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1985.putUnitDouble( idSz, idPnt, 2.880000 );                        var idHrzS = charIDToTypeID( "HrzS" );                        desc1985.putDouble( idHrzS, 100.000000 );                        var idVrtS = charIDToTypeID( "VrtS" );                        desc1985.putDouble( idVrtS, 100.000000 );                        var idsyntheticBold = stringIDToTypeID( "syntheticBold" );                        desc1985.putBoolean( idsyntheticBold, false );                        var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );                        desc1985.putBoolean( idsyntheticItalic, false );                        var idautoLeading = stringIDToTypeID( "autoLeading" );                        desc1985.putBoolean( idautoLeading, true );                        var idTrck = charIDToTypeID( "Trck" );                        desc1985.putInteger( idTrck, 0 );                        var idBsln = charIDToTypeID( "Bsln" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1985.putUnitDouble( idBsln, idPnt, 0.000000 );                        var idcharacterRotation = stringIDToTypeID( "characterRotation" );                        desc1985.putDouble( idcharacterRotation, 0.000000 );                        var idfontCaps = stringIDToTypeID( "fontCaps" );                        var idfontCaps = stringIDToTypeID( "fontCaps" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1985.putEnumerated( idfontCaps, idfontCaps, idNrml );                        var idbaseline = stringIDToTypeID( "baseline" );                        var idbaseline = stringIDToTypeID( "baseline" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1985.putEnumerated( idbaseline, idbaseline, idNrml );                        var idotbaseline = stringIDToTypeID( "otbaseline" );                        var idotbaseline = stringIDToTypeID( "otbaseline" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1985.putEnumerated( idotbaseline, idotbaseline, idNrml );                        var idstrikethrough = stringIDToTypeID( "strikethrough" );                        var idstrikethrough = stringIDToTypeID( "strikethrough" );                        var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );                        desc1985.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );                        var idUndl = charIDToTypeID( "Undl" );                        var idUndl = charIDToTypeID( "Undl" );                        var idunderlineOff = stringIDToTypeID( "underlineOff" );                        desc1985.putEnumerated( idUndl, idUndl, idunderlineOff );                        var idunderlineOffset = stringIDToTypeID( "underlineOffset" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1985.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );                        var idligature = stringIDToTypeID( "ligature" );                        desc1985.putBoolean( idligature, true );                        var idaltligature = stringIDToTypeID( "altligature" );                        desc1985.putBoolean( idaltligature, false );                        var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );                        desc1985.putBoolean( idcontextualLigatures, false );                        var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );                        desc1985.putBoolean( idalternateLigatures, false );                        var idoldStyle = stringIDToTypeID( "oldStyle" );                        desc1985.putBoolean( idoldStyle, false );                        var idfractions = stringIDToTypeID( "fractions" );                        desc1985.putBoolean( idfractions, false );                        var idordinals = stringIDToTypeID( "ordinals" );                        desc1985.putBoolean( idordinals, false );                        var idswash = stringIDToTypeID( "swash" );                        desc1985.putBoolean( idswash, false );                        var idtitling = stringIDToTypeID( "titling" );                        desc1985.putBoolean( idtitling, false );                        var idconnectionForms = stringIDToTypeID( "connectionForms" );                        desc1985.putBoolean( idconnectionForms, false );                        var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );                        desc1985.putBoolean( idstylisticAlternates, false );                        var idornaments = stringIDToTypeID( "ornaments" );                        desc1985.putBoolean( idornaments, false );                        var idfigureStyle = stringIDToTypeID( "figureStyle" );                        var idfigureStyle = stringIDToTypeID( "figureStyle" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1985.putEnumerated( idfigureStyle, idfigureStyle, idNrml );                        var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );                        desc1985.putBoolean( idproportionalMetrics, false );                        var idkana = stringIDToTypeID( "kana" );                        desc1985.putBoolean( idkana, false );                        var iditalics = stringIDToTypeID( "italics" );                        desc1985.putBoolean( iditalics, false );                        var idruby = stringIDToTypeID( "ruby" );                        desc1985.putBoolean( idruby, false );                        var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                        var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                        var idrotated = stringIDToTypeID( "rotated" );                        desc1985.putEnumerated( idbaselineDirection, idbaselineDirection, idrotated );                        var idtextLanguage = stringIDToTypeID( "textLanguage" );                        var idtextLanguage = stringIDToTypeID( "textLanguage" );                        var idenglishLanguage = stringIDToTypeID( "englishLanguage" );                        desc1985.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );                        var idmojiZume = stringIDToTypeID( "mojiZume" );                        desc1985.putDouble( idmojiZume, 0.000000 );                        var idgridAlignment = stringIDToTypeID( "gridAlignment" );                        var idgridAlignment = stringIDToTypeID( "gridAlignment" );                        var idroman = stringIDToTypeID( "roman" );                        desc1985.putEnumerated( idgridAlignment, idgridAlignment, idroman );                        var idenableWariChu = stringIDToTypeID( "enableWariChu" );                        desc1985.putBoolean( idenableWariChu, false );                        var idwariChuCount = stringIDToTypeID( "wariChuCount" );                        desc1985.putInteger( idwariChuCount, 2 );                        var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );                        desc1985.putInteger( idwariChuLineGap, 0 );                        var idwariChuScale = stringIDToTypeID( "wariChuScale" );                        desc1985.putDouble( idwariChuScale, 0.500000 );                        var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );                        desc1985.putInteger( idwariChuWidow, 2 );                        var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );                        desc1985.putInteger( idwariChuOrphan, 2 );                        var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                        var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                        var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );                        desc1985.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );                        var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );                        desc1985.putInteger( idtcyUpDown, 0 );                        var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );                        desc1985.putInteger( idtcyLeftRight, 0 );                        var idleftAki = stringIDToTypeID( "leftAki" );                        desc1985.putDouble( idleftAki, -1.000000 );                        var idrightAki = stringIDToTypeID( "rightAki" );                        desc1985.putDouble( idrightAki, -1.000000 );                        var idjiDori = stringIDToTypeID( "jiDori" );                        desc1985.putInteger( idjiDori, 0 );                        var idnoBreak = stringIDToTypeID( "noBreak" );                        desc1985.putBoolean( idnoBreak, false );                        var idClr = charIDToTypeID( "Clr " );                            var desc1986 = new ActionDescriptor();                            var idCyn = charIDToTypeID( "Cyn " );                            desc1986.putDouble( idCyn, 74.520000 );                            var idMgnt = charIDToTypeID( "Mgnt" );                            desc1986.putDouble( idMgnt, 67.780000 );                            var idYlw = charIDToTypeID( "Ylw " );                            desc1986.putDouble( idYlw, 67.130000 );                            var idBlck = charIDToTypeID( "Blck" );                            desc1986.putDouble( idBlck, 89.630000 );                        var idCMYC = charIDToTypeID( "CMYC" );                        desc1985.putObject( idClr, idCMYC, desc1986 );                        var idstrokeColor = stringIDToTypeID( "strokeColor" );                            var desc1987 = new ActionDescriptor();                            var idCyn = charIDToTypeID( "Cyn " );                            desc1987.putDouble( idCyn, 74.520000 );                            var idMgnt = charIDToTypeID( "Mgnt" );                            desc1987.putDouble( idMgnt, 67.780000 );                            var idYlw = charIDToTypeID( "Ylw " );                            desc1987.putDouble( idYlw, 67.130000 );                            var idBlck = charIDToTypeID( "Blck" );                            desc1987.putDouble( idBlck, 89.630000 );                        var idCMYC = charIDToTypeID( "CMYC" );                        desc1985.putObject( idstrokeColor, idCMYC, desc1987 );                        var idFl = charIDToTypeID( "Fl  " );                        desc1985.putBoolean( idFl, true );                        var idStrk = charIDToTypeID( "Strk" );                        desc1985.putBoolean( idStrk, false );                        var idfillFirst = stringIDToTypeID( "fillFirst" );                        desc1985.putBoolean( idfillFirst, true );                        var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );                        desc1985.putBoolean( idfillOverPrint, false );                        var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );                        desc1985.putBoolean( idstrokeOverPrint, false );                        var idlineCap = stringIDToTypeID( "lineCap" );                        var idlineCap = stringIDToTypeID( "lineCap" );                        var idbuttCap = stringIDToTypeID( "buttCap" );                        desc1985.putEnumerated( idlineCap, idlineCap, idbuttCap );                        var idlineJoin = stringIDToTypeID( "lineJoin" );                        var idlineJoin = stringIDToTypeID( "lineJoin" );                        var idmiterJoin = stringIDToTypeID( "miterJoin" );                        desc1985.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );                        var idlineWidth = stringIDToTypeID( "lineWidth" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1985.putUnitDouble( idlineWidth, idPnt, 0.240000 );                        var idmiterLimit = stringIDToTypeID( "miterLimit" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1985.putUnitDouble( idmiterLimit, idPnt, 0.960000 );                        var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );                        desc1985.putDouble( idlineDashoffset, 0.000000 );                    var idTxtS = charIDToTypeID( "TxtS" );                    desc1984.putObject( iddefaultStyle, idTxtS, desc1985 );                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );                desc1983.putObject( idparagraphStyle, idparagraphStyle, desc1984 );            var idparagraphStyleRange = stringIDToTypeID( "paragraphStyleRange" );            list105.putObject( idparagraphStyleRange, desc1983 );                var desc1988 = new ActionDescriptor();                var idFrom = charIDToTypeID( "From" );                desc1988.putInteger( idFrom, 3331 );                var idT = charIDToTypeID( "T   " );                desc1988.putInteger( idT, 3587 );                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );                    var desc1989 = new ActionDescriptor();                    var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );                    desc1989.putBoolean( idstyleSheetHasParent, true );                    var idAlgn = charIDToTypeID( "Algn" );                    var idAlg = charIDToTypeID( "Alg " );                    var idjustifyLeft = stringIDToTypeID( "justifyLeft" );                    desc1989.putEnumerated( idAlgn, idAlg, idjustifyLeft );                    var idfirstLineIndent = stringIDToTypeID( "firstLineIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1989.putUnitDouble( idfirstLineIndent, idPnt, 23.828448 );                    var idstartIndent = stringIDToTypeID( "startIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1989.putUnitDouble( idstartIndent, idPnt, 0.000000 );                    var idendIndent = stringIDToTypeID( "endIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1989.putUnitDouble( idendIndent, idPnt, 0.000000 );                    var idspaceBefore = stringIDToTypeID( "spaceBefore" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1989.putUnitDouble( idspaceBefore, idPnt, 0.150494 );                    var idspaceAfter = stringIDToTypeID( "spaceAfter" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1989.putUnitDouble( idspaceAfter, idPnt, 0.000000 );                    var iddropCapMultiplier = stringIDToTypeID( "dropCapMultiplier" );                    desc1989.putInteger( iddropCapMultiplier, 1 );                    var idautoLeadingPercentage = stringIDToTypeID( "autoLeadingPercentage" );                    desc1989.putDouble( idautoLeadingPercentage, 1.750000 );                    var idleadingType = stringIDToTypeID( "leadingType" );                    var idleadingType = stringIDToTypeID( "leadingType" );                    var idleadingAbove = stringIDToTypeID( "leadingAbove" );                    desc1989.putEnumerated( idleadingType, idleadingType, idleadingAbove );                    var idhyphenate = stringIDToTypeID( "hyphenate" );                    desc1989.putBoolean( idhyphenate, true );                    var idhyphenateWordSize = stringIDToTypeID( "hyphenateWordSize" );                    desc1989.putInteger( idhyphenateWordSize, 6 );                    var idhyphenatePreLength = stringIDToTypeID( "hyphenatePreLength" );                    desc1989.putInteger( idhyphenatePreLength, 2 );                    var idhyphenatePostLength = stringIDToTypeID( "hyphenatePostLength" );                    desc1989.putInteger( idhyphenatePostLength, 2 );                    var idhyphenateLimit = stringIDToTypeID( "hyphenateLimit" );                    desc1989.putInteger( idhyphenateLimit, 0 );                    var idhyphenationZone = stringIDToTypeID( "hyphenationZone" );                    desc1989.putDouble( idhyphenationZone, 36.000000 );                    var idhyphenateCapitalized = stringIDToTypeID( "hyphenateCapitalized" );                    desc1989.putBoolean( idhyphenateCapitalized, true );                    var idhyphenationPreference = stringIDToTypeID( "hyphenationPreference" );                    desc1989.putDouble( idhyphenationPreference, 0.500000 );                    var idjustificationWordMinimum = stringIDToTypeID( "justificationWordMinimum" );                    desc1989.putDouble( idjustificationWordMinimum, 0.800000 );                    var idjustificationWordDesired = stringIDToTypeID( "justificationWordDesired" );                    desc1989.putDouble( idjustificationWordDesired, 1.000000 );                    var idjustificationWordMaximum = stringIDToTypeID( "justificationWordMaximum" );                    desc1989.putDouble( idjustificationWordMaximum, 1.330000 );                    var idjustificationLetterMinimum = stringIDToTypeID( "justificationLetterMinimum" );                    desc1989.putDouble( idjustificationLetterMinimum, 0.000000 );                    var idjustificationLetterDesired = stringIDToTypeID( "justificationLetterDesired" );                    desc1989.putDouble( idjustificationLetterDesired, 0.000000 );                    var idjustificationLetterMaximum = stringIDToTypeID( "justificationLetterMaximum" );                    desc1989.putDouble( idjustificationLetterMaximum, 0.000000 );                    var idjustificationGlyphMinimum = stringIDToTypeID( "justificationGlyphMinimum" );                    desc1989.putDouble( idjustificationGlyphMinimum, 1.000000 );                    var idjustificationGlyphDesired = stringIDToTypeID( "justificationGlyphDesired" );                    desc1989.putDouble( idjustificationGlyphDesired, 1.000000 );                    var idjustificationGlyphMaximum = stringIDToTypeID( "justificationGlyphMaximum" );                    desc1989.putDouble( idjustificationGlyphMaximum, 1.000000 );                    var idsingleWordJustification = stringIDToTypeID( "singleWordJustification" );                    var idAlg = charIDToTypeID( "Alg " );                    var idJstA = charIDToTypeID( "JstA" );                    desc1989.putEnumerated( idsingleWordJustification, idAlg, idJstA );                    var idhangingRoman = stringIDToTypeID( "hangingRoman" );                    desc1989.putBoolean( idhangingRoman, false );                    var idautoTCY = stringIDToTypeID( "autoTCY" );                    desc1989.putInteger( idautoTCY, 1 );                    var idkeepTogether = stringIDToTypeID( "keepTogether" );                    desc1989.putBoolean( idkeepTogether, true );                    var idburasagari = stringIDToTypeID( "burasagari" );                    var idburasagari = stringIDToTypeID( "burasagari" );                    var idburasagariNone = stringIDToTypeID( "burasagariNone" );                    desc1989.putEnumerated( idburasagari, idburasagari, idburasagariNone );                    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );                    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );                    var idpushIn = stringIDToTypeID( "pushIn" );                    desc1989.putEnumerated( idpreferredKinsokuOrder, idpreferredKinsokuOrder, idpushIn );                    var idkurikaeshiMojiShori = stringIDToTypeID( "kurikaeshiMojiShori" );                    desc1989.putBoolean( idkurikaeshiMojiShori, false );                    var idkinsokuSetName = stringIDToTypeID( "kinsokuSetName" );                    var idkinsokuSetName = stringIDToTypeID( "kinsokuSetName" );                    var idSoft = stringIDToTypeID( "Soft" );                    desc1989.putEnumerated( idkinsokuSetName, idkinsokuSetName, idSoft );                    var idmojiKumiName = stringIDToTypeID( "mojiKumiName" );                    var idmojiKumiName = stringIDToTypeID( "mojiKumiName" );                    var idPhotoshopsixMojiKumiSetone = stringIDToTypeID( "Photoshop6MojiKumiSet1" );                    desc1989.putEnumerated( idmojiKumiName, idmojiKumiName, idPhotoshopsixMojiKumiSetone );                    var idtextEveryLineComposer = stringIDToTypeID( "textEveryLineComposer" );                    desc1989.putBoolean( idtextEveryLineComposer, false );                    var iddefaultTabWidth = stringIDToTypeID( "defaultTabWidth" );                    desc1989.putDouble( iddefaultTabWidth, 36.000000 );                    var iddefaultStyle = stringIDToTypeID( "defaultStyle" );                        var desc1990 = new ActionDescriptor();                        var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );                        desc1990.putString( idfontPostScriptName, """FZBWKSJW--GB1-0""" );                        var idFntN = charIDToTypeID( "FntN" );                        desc1990.putString( idFntN, """FZBWKSJW""" );                        var idFntS = charIDToTypeID( "FntS" );                        desc1990.putString( idFntS, """-GB1-0""" );                        var idScrp = charIDToTypeID( "Scrp" );                        desc1990.putInteger( idScrp, 25 );                        var idFntT = charIDToTypeID( "FntT" );                        desc1990.putInteger( idFntT, 2 );                        var idSz = charIDToTypeID( "Sz  " );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1990.putUnitDouble( idSz, idPnt, 2.880000 );                        var idHrzS = charIDToTypeID( "HrzS" );                        desc1990.putDouble( idHrzS, 100.000000 );                        var idVrtS = charIDToTypeID( "VrtS" );                        desc1990.putDouble( idVrtS, 100.000000 );                        var idsyntheticBold = stringIDToTypeID( "syntheticBold" );                        desc1990.putBoolean( idsyntheticBold, false );                        var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );                        desc1990.putBoolean( idsyntheticItalic, false );                        var idautoLeading = stringIDToTypeID( "autoLeading" );                        desc1990.putBoolean( idautoLeading, true );                        var idTrck = charIDToTypeID( "Trck" );                        desc1990.putInteger( idTrck, 0 );                        var idBsln = charIDToTypeID( "Bsln" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1990.putUnitDouble( idBsln, idPnt, 0.000000 );                        var idcharacterRotation = stringIDToTypeID( "characterRotation" );                        desc1990.putDouble( idcharacterRotation, 0.000000 );                        var idfontCaps = stringIDToTypeID( "fontCaps" );                        var idfontCaps = stringIDToTypeID( "fontCaps" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1990.putEnumerated( idfontCaps, idfontCaps, idNrml );                        var idbaseline = stringIDToTypeID( "baseline" );                        var idbaseline = stringIDToTypeID( "baseline" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1990.putEnumerated( idbaseline, idbaseline, idNrml );                        var idotbaseline = stringIDToTypeID( "otbaseline" );                        var idotbaseline = stringIDToTypeID( "otbaseline" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1990.putEnumerated( idotbaseline, idotbaseline, idNrml );                        var idstrikethrough = stringIDToTypeID( "strikethrough" );                        var idstrikethrough = stringIDToTypeID( "strikethrough" );                        var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );                        desc1990.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );                        var idUndl = charIDToTypeID( "Undl" );                        var idUndl = charIDToTypeID( "Undl" );                        var idunderlineOff = stringIDToTypeID( "underlineOff" );                        desc1990.putEnumerated( idUndl, idUndl, idunderlineOff );                        var idunderlineOffset = stringIDToTypeID( "underlineOffset" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1990.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );                        var idligature = stringIDToTypeID( "ligature" );                        desc1990.putBoolean( idligature, true );                        var idaltligature = stringIDToTypeID( "altligature" );                        desc1990.putBoolean( idaltligature, false );                        var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );                        desc1990.putBoolean( idcontextualLigatures, false );                        var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );                        desc1990.putBoolean( idalternateLigatures, false );                        var idoldStyle = stringIDToTypeID( "oldStyle" );                        desc1990.putBoolean( idoldStyle, false );                        var idfractions = stringIDToTypeID( "fractions" );                        desc1990.putBoolean( idfractions, false );                        var idordinals = stringIDToTypeID( "ordinals" );                        desc1990.putBoolean( idordinals, false );                        var idswash = stringIDToTypeID( "swash" );                        desc1990.putBoolean( idswash, false );                        var idtitling = stringIDToTypeID( "titling" );                        desc1990.putBoolean( idtitling, false );                        var idconnectionForms = stringIDToTypeID( "connectionForms" );                        desc1990.putBoolean( idconnectionForms, false );                        var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );                        desc1990.putBoolean( idstylisticAlternates, false );                        var idornaments = stringIDToTypeID( "ornaments" );                        desc1990.putBoolean( idornaments, false );                        var idfigureStyle = stringIDToTypeID( "figureStyle" );                        var idfigureStyle = stringIDToTypeID( "figureStyle" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1990.putEnumerated( idfigureStyle, idfigureStyle, idNrml );                        var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );                        desc1990.putBoolean( idproportionalMetrics, false );                        var idkana = stringIDToTypeID( "kana" );                        desc1990.putBoolean( idkana, false );                        var iditalics = stringIDToTypeID( "italics" );                        desc1990.putBoolean( iditalics, false );                        var idruby = stringIDToTypeID( "ruby" );                        desc1990.putBoolean( idruby, false );                        var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                        var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                        var idrotated = stringIDToTypeID( "rotated" );                        desc1990.putEnumerated( idbaselineDirection, idbaselineDirection, idrotated );                        var idtextLanguage = stringIDToTypeID( "textLanguage" );                        var idtextLanguage = stringIDToTypeID( "textLanguage" );                        var idenglishLanguage = stringIDToTypeID( "englishLanguage" );                        desc1990.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );                        var idmojiZume = stringIDToTypeID( "mojiZume" );                        desc1990.putDouble( idmojiZume, 0.000000 );                        var idgridAlignment = stringIDToTypeID( "gridAlignment" );                        var idgridAlignment = stringIDToTypeID( "gridAlignment" );                        var idroman = stringIDToTypeID( "roman" );                        desc1990.putEnumerated( idgridAlignment, idgridAlignment, idroman );                        var idenableWariChu = stringIDToTypeID( "enableWariChu" );                        desc1990.putBoolean( idenableWariChu, false );                        var idwariChuCount = stringIDToTypeID( "wariChuCount" );                        desc1990.putInteger( idwariChuCount, 2 );                        var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );                        desc1990.putInteger( idwariChuLineGap, 0 );                        var idwariChuScale = stringIDToTypeID( "wariChuScale" );                        desc1990.putDouble( idwariChuScale, 0.500000 );                        var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );                        desc1990.putInteger( idwariChuWidow, 2 );                        var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );                        desc1990.putInteger( idwariChuOrphan, 2 );                        var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                        var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                        var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );                        desc1990.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );                        var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );                        desc1990.putInteger( idtcyUpDown, 0 );                        var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );                        desc1990.putInteger( idtcyLeftRight, 0 );                        var idleftAki = stringIDToTypeID( "leftAki" );                        desc1990.putDouble( idleftAki, -1.000000 );                        var idrightAki = stringIDToTypeID( "rightAki" );                        desc1990.putDouble( idrightAki, -1.000000 );                        var idjiDori = stringIDToTypeID( "jiDori" );                        desc1990.putInteger( idjiDori, 0 );                        var idnoBreak = stringIDToTypeID( "noBreak" );                        desc1990.putBoolean( idnoBreak, false );                        var idClr = charIDToTypeID( "Clr " );                            var desc1991 = new ActionDescriptor();                            var idCyn = charIDToTypeID( "Cyn " );                            desc1991.putDouble( idCyn, 74.520000 );                            var idMgnt = charIDToTypeID( "Mgnt" );                            desc1991.putDouble( idMgnt, 67.780000 );                            var idYlw = charIDToTypeID( "Ylw " );                            desc1991.putDouble( idYlw, 67.130000 );                            var idBlck = charIDToTypeID( "Blck" );                            desc1991.putDouble( idBlck, 89.630000 );                        var idCMYC = charIDToTypeID( "CMYC" );                        desc1990.putObject( idClr, idCMYC, desc1991 );                        var idstrokeColor = stringIDToTypeID( "strokeColor" );                            var desc1992 = new ActionDescriptor();                            var idCyn = charIDToTypeID( "Cyn " );                            desc1992.putDouble( idCyn, 74.520000 );                            var idMgnt = charIDToTypeID( "Mgnt" );                            desc1992.putDouble( idMgnt, 67.780000 );                            var idYlw = charIDToTypeID( "Ylw " );                            desc1992.putDouble( idYlw, 67.130000 );                            var idBlck = charIDToTypeID( "Blck" );                            desc1992.putDouble( idBlck, 89.630000 );                        var idCMYC = charIDToTypeID( "CMYC" );                        desc1990.putObject( idstrokeColor, idCMYC, desc1992 );                        var idFl = charIDToTypeID( "Fl  " );                        desc1990.putBoolean( idFl, true );                        var idStrk = charIDToTypeID( "Strk" );                        desc1990.putBoolean( idStrk, false );                        var idfillFirst = stringIDToTypeID( "fillFirst" );                        desc1990.putBoolean( idfillFirst, true );                        var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );                        desc1990.putBoolean( idfillOverPrint, false );                        var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );                        desc1990.putBoolean( idstrokeOverPrint, false );                        var idlineCap = stringIDToTypeID( "lineCap" );                        var idlineCap = stringIDToTypeID( "lineCap" );                        var idbuttCap = stringIDToTypeID( "buttCap" );                        desc1990.putEnumerated( idlineCap, idlineCap, idbuttCap );                        var idlineJoin = stringIDToTypeID( "lineJoin" );                        var idlineJoin = stringIDToTypeID( "lineJoin" );                        var idmiterJoin = stringIDToTypeID( "miterJoin" );                        desc1990.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );                        var idlineWidth = stringIDToTypeID( "lineWidth" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1990.putUnitDouble( idlineWidth, idPnt, 0.240000 );                        var idmiterLimit = stringIDToTypeID( "miterLimit" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1990.putUnitDouble( idmiterLimit, idPnt, 0.960000 );                        var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );                        desc1990.putDouble( idlineDashoffset, 0.000000 );                    var idTxtS = charIDToTypeID( "TxtS" );                    desc1989.putObject( iddefaultStyle, idTxtS, desc1990 );                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );                desc1988.putObject( idparagraphStyle, idparagraphStyle, desc1989 );            var idparagraphStyleRange = stringIDToTypeID( "paragraphStyleRange" );            list105.putObject( idparagraphStyleRange, desc1988 );                var desc1993 = new ActionDescriptor();                var idFrom = charIDToTypeID( "From" );                desc1993.putInteger( idFrom, 3587 );                var idT = charIDToTypeID( "T   " );                desc1993.putInteger( idT, 3843 );                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );                    var desc1994 = new ActionDescriptor();                    var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );                    desc1994.putBoolean( idstyleSheetHasParent, true );                    var idAlgn = charIDToTypeID( "Algn" );                    var idAlg = charIDToTypeID( "Alg " );                    var idjustifyLeft = stringIDToTypeID( "justifyLeft" );                    desc1994.putEnumerated( idAlgn, idAlg, idjustifyLeft );                    var idfirstLineIndent = stringIDToTypeID( "firstLineIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1994.putUnitDouble( idfirstLineIndent, idPnt, 23.828448 );                    var idstartIndent = stringIDToTypeID( "startIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1994.putUnitDouble( idstartIndent, idPnt, 0.000000 );                    var idendIndent = stringIDToTypeID( "endIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1994.putUnitDouble( idendIndent, idPnt, 0.000000 );                    var idspaceBefore = stringIDToTypeID( "spaceBefore" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1994.putUnitDouble( idspaceBefore, idPnt, 0.150494 );                    var idspaceAfter = stringIDToTypeID( "spaceAfter" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1994.putUnitDouble( idspaceAfter, idPnt, 0.000000 );                    var iddropCapMultiplier = stringIDToTypeID( "dropCapMultiplier" );                    desc1994.putInteger( iddropCapMultiplier, 1 );                    var idautoLeadingPercentage = stringIDToTypeID( "autoLeadingPercentage" );                    desc1994.putDouble( idautoLeadingPercentage, 1.750000 );                    var idleadingType = stringIDToTypeID( "leadingType" );                    var idleadingType = stringIDToTypeID( "leadingType" );                    var idleadingAbove = stringIDToTypeID( "leadingAbove" );                    desc1994.putEnumerated( idleadingType, idleadingType, idleadingAbove );                    var idhyphenate = stringIDToTypeID( "hyphenate" );                    desc1994.putBoolean( idhyphenate, true );                    var idhyphenateWordSize = stringIDToTypeID( "hyphenateWordSize" );                    desc1994.putInteger( idhyphenateWordSize, 6 );                    var idhyphenatePreLength = stringIDToTypeID( "hyphenatePreLength" );                    desc1994.putInteger( idhyphenatePreLength, 2 );                    var idhyphenatePostLength = stringIDToTypeID( "hyphenatePostLength" );                    desc1994.putInteger( idhyphenatePostLength, 2 );                    var idhyphenateLimit = stringIDToTypeID( "hyphenateLimit" );                    desc1994.putInteger( idhyphenateLimit, 0 );                    var idhyphenationZone = stringIDToTypeID( "hyphenationZone" );                    desc1994.putDouble( idhyphenationZone, 36.000000 );                    var idhyphenateCapitalized = stringIDToTypeID( "hyphenateCapitalized" );                    desc1994.putBoolean( idhyphenateCapitalized, true );                    var idhyphenationPreference = stringIDToTypeID( "hyphenationPreference" );                    desc1994.putDouble( idhyphenationPreference, 0.500000 );                    var idjustificationWordMinimum = stringIDToTypeID( "justificationWordMinimum" );                    desc1994.putDouble( idjustificationWordMinimum, 0.800000 );                    var idjustificationWordDesired = stringIDToTypeID( "justificationWordDesired" );                    desc1994.putDouble( idjustificationWordDesired, 1.000000 );                    var idjustificationWordMaximum = stringIDToTypeID( "justificationWordMaximum" );                    desc1994.putDouble( idjustificationWordMaximum, 1.330000 );                    var idjustificationLetterMinimum = stringIDToTypeID( "justificationLetterMinimum" );                    desc1994.putDouble( idjustificationLetterMinimum, 0.000000 );                    var idjustificationLetterDesired = stringIDToTypeID( "justificationLetterDesired" );                    desc1994.putDouble( idjustificationLetterDesired, 0.000000 );                    var idjustificationLetterMaximum = stringIDToTypeID( "justificationLetterMaximum" );                    desc1994.putDouble( idjustificationLetterMaximum, 0.000000 );                    var idjustificationGlyphMinimum = stringIDToTypeID( "justificationGlyphMinimum" );                    desc1994.putDouble( idjustificationGlyphMinimum, 1.000000 );                    var idjustificationGlyphDesired = stringIDToTypeID( "justificationGlyphDesired" );                    desc1994.putDouble( idjustificationGlyphDesired, 1.000000 );                    var idjustificationGlyphMaximum = stringIDToTypeID( "justificationGlyphMaximum" );                    desc1994.putDouble( idjustificationGlyphMaximum, 1.000000 );                    var idsingleWordJustification = stringIDToTypeID( "singleWordJustification" );                    var idAlg = charIDToTypeID( "Alg " );                    var idJstA = charIDToTypeID( "JstA" );                    desc1994.putEnumerated( idsingleWordJustification, idAlg, idJstA );                    var idhangingRoman = stringIDToTypeID( "hangingRoman" );                    desc1994.putBoolean( idhangingRoman, false );                    var idautoTCY = stringIDToTypeID( "autoTCY" );                    desc1994.putInteger( idautoTCY, 1 );                    var idkeepTogether = stringIDToTypeID( "keepTogether" );                    desc1994.putBoolean( idkeepTogether, true );                    var idburasagari = stringIDToTypeID( "burasagari" );                    var idburasagari = stringIDToTypeID( "burasagari" );                    var idburasagariNone = stringIDToTypeID( "burasagariNone" );                    desc1994.putEnumerated( idburasagari, idburasagari, idburasagariNone );                    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );                    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );                    var idpushIn = stringIDToTypeID( "pushIn" );                    desc1994.putEnumerated( idpreferredKinsokuOrder, idpreferredKinsokuOrder, idpushIn );                    var idkurikaeshiMojiShori = stringIDToTypeID( "kurikaeshiMojiShori" );                    desc1994.putBoolean( idkurikaeshiMojiShori, false );                    var idkinsokuSetName = stringIDToTypeID( "kinsokuSetName" );                    var idkinsokuSetName = stringIDToTypeID( "kinsokuSetName" );                    var idSoft = stringIDToTypeID( "Soft" );                    desc1994.putEnumerated( idkinsokuSetName, idkinsokuSetName, idSoft );                    var idmojiKumiName = stringIDToTypeID( "mojiKumiName" );                    var idmojiKumiName = stringIDToTypeID( "mojiKumiName" );                    var idPhotoshopsixMojiKumiSetone = stringIDToTypeID( "Photoshop6MojiKumiSet1" );                    desc1994.putEnumerated( idmojiKumiName, idmojiKumiName, idPhotoshopsixMojiKumiSetone );                    var idtextEveryLineComposer = stringIDToTypeID( "textEveryLineComposer" );                    desc1994.putBoolean( idtextEveryLineComposer, false );                    var iddefaultTabWidth = stringIDToTypeID( "defaultTabWidth" );                    desc1994.putDouble( iddefaultTabWidth, 36.000000 );                    var iddefaultStyle = stringIDToTypeID( "defaultStyle" );                        var desc1995 = new ActionDescriptor();                        var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );                        desc1995.putString( idfontPostScriptName, """FZBWKSJW--GB1-0""" );                        var idFntN = charIDToTypeID( "FntN" );                        desc1995.putString( idFntN, """FZBWKSJW""" );                        var idFntS = charIDToTypeID( "FntS" );                        desc1995.putString( idFntS, """-GB1-0""" );                        var idScrp = charIDToTypeID( "Scrp" );                        desc1995.putInteger( idScrp, 25 );                        var idFntT = charIDToTypeID( "FntT" );                        desc1995.putInteger( idFntT, 2 );                        var idSz = charIDToTypeID( "Sz  " );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1995.putUnitDouble( idSz, idPnt, 2.880000 );                        var idHrzS = charIDToTypeID( "HrzS" );                        desc1995.putDouble( idHrzS, 100.000000 );                        var idVrtS = charIDToTypeID( "VrtS" );                        desc1995.putDouble( idVrtS, 100.000000 );                        var idsyntheticBold = stringIDToTypeID( "syntheticBold" );                        desc1995.putBoolean( idsyntheticBold, false );                        var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );                        desc1995.putBoolean( idsyntheticItalic, false );                        var idautoLeading = stringIDToTypeID( "autoLeading" );                        desc1995.putBoolean( idautoLeading, true );                        var idTrck = charIDToTypeID( "Trck" );                        desc1995.putInteger( idTrck, 0 );                        var idBsln = charIDToTypeID( "Bsln" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1995.putUnitDouble( idBsln, idPnt, 0.000000 );                        var idcharacterRotation = stringIDToTypeID( "characterRotation" );                        desc1995.putDouble( idcharacterRotation, 0.000000 );                        var idfontCaps = stringIDToTypeID( "fontCaps" );                        var idfontCaps = stringIDToTypeID( "fontCaps" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1995.putEnumerated( idfontCaps, idfontCaps, idNrml );                        var idbaseline = stringIDToTypeID( "baseline" );                        var idbaseline = stringIDToTypeID( "baseline" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1995.putEnumerated( idbaseline, idbaseline, idNrml );                        var idotbaseline = stringIDToTypeID( "otbaseline" );                        var idotbaseline = stringIDToTypeID( "otbaseline" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1995.putEnumerated( idotbaseline, idotbaseline, idNrml );                        var idstrikethrough = stringIDToTypeID( "strikethrough" );                        var idstrikethrough = stringIDToTypeID( "strikethrough" );                        var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );                        desc1995.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );                        var idUndl = charIDToTypeID( "Undl" );                        var idUndl = charIDToTypeID( "Undl" );                        var idunderlineOff = stringIDToTypeID( "underlineOff" );                        desc1995.putEnumerated( idUndl, idUndl, idunderlineOff );                        var idunderlineOffset = stringIDToTypeID( "underlineOffset" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1995.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );                        var idligature = stringIDToTypeID( "ligature" );                        desc1995.putBoolean( idligature, true );                        var idaltligature = stringIDToTypeID( "altligature" );                        desc1995.putBoolean( idaltligature, false );                        var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );                        desc1995.putBoolean( idcontextualLigatures, false );                        var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );                        desc1995.putBoolean( idalternateLigatures, false );                        var idoldStyle = stringIDToTypeID( "oldStyle" );                        desc1995.putBoolean( idoldStyle, false );                        var idfractions = stringIDToTypeID( "fractions" );                        desc1995.putBoolean( idfractions, false );                        var idordinals = stringIDToTypeID( "ordinals" );                        desc1995.putBoolean( idordinals, false );                        var idswash = stringIDToTypeID( "swash" );                        desc1995.putBoolean( idswash, false );                        var idtitling = stringIDToTypeID( "titling" );                        desc1995.putBoolean( idtitling, false );                        var idconnectionForms = stringIDToTypeID( "connectionForms" );                        desc1995.putBoolean( idconnectionForms, false );                        var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );                        desc1995.putBoolean( idstylisticAlternates, false );                        var idornaments = stringIDToTypeID( "ornaments" );                        desc1995.putBoolean( idornaments, false );                        var idfigureStyle = stringIDToTypeID( "figureStyle" );                        var idfigureStyle = stringIDToTypeID( "figureStyle" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc1995.putEnumerated( idfigureStyle, idfigureStyle, idNrml );                        var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );                        desc1995.putBoolean( idproportionalMetrics, false );                        var idkana = stringIDToTypeID( "kana" );                        desc1995.putBoolean( idkana, false );                        var iditalics = stringIDToTypeID( "italics" );                        desc1995.putBoolean( iditalics, false );                        var idruby = stringIDToTypeID( "ruby" );                        desc1995.putBoolean( idruby, false );                        var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                        var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                        var idrotated = stringIDToTypeID( "rotated" );                        desc1995.putEnumerated( idbaselineDirection, idbaselineDirection, idrotated );                        var idtextLanguage = stringIDToTypeID( "textLanguage" );                        var idtextLanguage = stringIDToTypeID( "textLanguage" );                        var idenglishLanguage = stringIDToTypeID( "englishLanguage" );                        desc1995.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );                        var idmojiZume = stringIDToTypeID( "mojiZume" );                        desc1995.putDouble( idmojiZume, 0.000000 );                        var idgridAlignment = stringIDToTypeID( "gridAlignment" );                        var idgridAlignment = stringIDToTypeID( "gridAlignment" );                        var idroman = stringIDToTypeID( "roman" );                        desc1995.putEnumerated( idgridAlignment, idgridAlignment, idroman );                        var idenableWariChu = stringIDToTypeID( "enableWariChu" );                        desc1995.putBoolean( idenableWariChu, false );                        var idwariChuCount = stringIDToTypeID( "wariChuCount" );                        desc1995.putInteger( idwariChuCount, 2 );                        var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );                        desc1995.putInteger( idwariChuLineGap, 0 );                        var idwariChuScale = stringIDToTypeID( "wariChuScale" );                        desc1995.putDouble( idwariChuScale, 0.500000 );                        var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );                        desc1995.putInteger( idwariChuWidow, 2 );                        var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );                        desc1995.putInteger( idwariChuOrphan, 2 );                        var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                        var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                        var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );                        desc1995.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );                        var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );                        desc1995.putInteger( idtcyUpDown, 0 );                        var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );                        desc1995.putInteger( idtcyLeftRight, 0 );                        var idleftAki = stringIDToTypeID( "leftAki" );                        desc1995.putDouble( idleftAki, -1.000000 );                        var idrightAki = stringIDToTypeID( "rightAki" );                        desc1995.putDouble( idrightAki, -1.000000 );                        var idjiDori = stringIDToTypeID( "jiDori" );                        desc1995.putInteger( idjiDori, 0 );                        var idnoBreak = stringIDToTypeID( "noBreak" );                        desc1995.putBoolean( idnoBreak, false );                        var idClr = charIDToTypeID( "Clr " );                            var desc1996 = new ActionDescriptor();                            var idCyn = charIDToTypeID( "Cyn " );                            desc1996.putDouble( idCyn, 74.520000 );                            var idMgnt = charIDToTypeID( "Mgnt" );                            desc1996.putDouble( idMgnt, 67.780000 );                            var idYlw = charIDToTypeID( "Ylw " );                            desc1996.putDouble( idYlw, 67.130000 );                            var idBlck = charIDToTypeID( "Blck" );                            desc1996.putDouble( idBlck, 89.630000 );                        var idCMYC = charIDToTypeID( "CMYC" );                        desc1995.putObject( idClr, idCMYC, desc1996 );                        var idstrokeColor = stringIDToTypeID( "strokeColor" );                            var desc1997 = new ActionDescriptor();                            var idCyn = charIDToTypeID( "Cyn " );                            desc1997.putDouble( idCyn, 74.520000 );                            var idMgnt = charIDToTypeID( "Mgnt" );                            desc1997.putDouble( idMgnt, 67.780000 );                            var idYlw = charIDToTypeID( "Ylw " );                            desc1997.putDouble( idYlw, 67.130000 );                            var idBlck = charIDToTypeID( "Blck" );                            desc1997.putDouble( idBlck, 89.630000 );                        var idCMYC = charIDToTypeID( "CMYC" );                        desc1995.putObject( idstrokeColor, idCMYC, desc1997 );                        var idFl = charIDToTypeID( "Fl  " );                        desc1995.putBoolean( idFl, true );                        var idStrk = charIDToTypeID( "Strk" );                        desc1995.putBoolean( idStrk, false );                        var idfillFirst = stringIDToTypeID( "fillFirst" );                        desc1995.putBoolean( idfillFirst, true );                        var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );                        desc1995.putBoolean( idfillOverPrint, false );                        var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );                        desc1995.putBoolean( idstrokeOverPrint, false );                        var idlineCap = stringIDToTypeID( "lineCap" );                        var idlineCap = stringIDToTypeID( "lineCap" );                        var idbuttCap = stringIDToTypeID( "buttCap" );                        desc1995.putEnumerated( idlineCap, idlineCap, idbuttCap );                        var idlineJoin = stringIDToTypeID( "lineJoin" );                        var idlineJoin = stringIDToTypeID( "lineJoin" );                        var idmiterJoin = stringIDToTypeID( "miterJoin" );                        desc1995.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );                        var idlineWidth = stringIDToTypeID( "lineWidth" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1995.putUnitDouble( idlineWidth, idPnt, 0.240000 );                        var idmiterLimit = stringIDToTypeID( "miterLimit" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc1995.putUnitDouble( idmiterLimit, idPnt, 0.960000 );                        var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );                        desc1995.putDouble( idlineDashoffset, 0.000000 );                    var idTxtS = charIDToTypeID( "TxtS" );                    desc1994.putObject( iddefaultStyle, idTxtS, desc1995 );                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );                desc1993.putObject( idparagraphStyle, idparagraphStyle, desc1994 );            var idparagraphStyleRange = stringIDToTypeID( "paragraphStyleRange" );            list105.putObject( idparagraphStyleRange, desc1993 );                var desc1998 = new ActionDescriptor();                var idFrom = charIDToTypeID( "From" );                desc1998.putInteger( idFrom, 3843 );                var idT = charIDToTypeID( "T   " );                desc1998.putInteger( idT, 3844 );                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );                    var desc1999 = new ActionDescriptor();                    var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );                    desc1999.putBoolean( idstyleSheetHasParent, true );                    var idAlgn = charIDToTypeID( "Algn" );                    var idAlg = charIDToTypeID( "Alg " );                    var idjustifyLeft = stringIDToTypeID( "justifyLeft" );                    desc1999.putEnumerated( idAlgn, idAlg, idjustifyLeft );                    var idfirstLineIndent = stringIDToTypeID( "firstLineIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1999.putUnitDouble( idfirstLineIndent, idPnt, 23.828448 );                    var idstartIndent = stringIDToTypeID( "startIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1999.putUnitDouble( idstartIndent, idPnt, 0.000000 );                    var idendIndent = stringIDToTypeID( "endIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1999.putUnitDouble( idendIndent, idPnt, 0.000000 );                    var idspaceBefore = stringIDToTypeID( "spaceBefore" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1999.putUnitDouble( idspaceBefore, idPnt, 0.150494 );                    var idspaceAfter = stringIDToTypeID( "spaceAfter" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc1999.putUnitDouble( idspaceAfter, idPnt, 0.000000 );                    var iddropCapMultiplier = stringIDToTypeID( "dropCapMultiplier" );                    desc1999.putInteger( iddropCapMultiplier, 1 );                    var idautoLeadingPercentage = stringIDToTypeID( "autoLeadingPercentage" );                    desc1999.putDouble( idautoLeadingPercentage, 1.750000 );                    var idleadingType = stringIDToTypeID( "leadingType" );                    var idleadingType = stringIDToTypeID( "leadingType" );                    var idleadingAbove = stringIDToTypeID( "leadingAbove" );                    desc1999.putEnumerated( idleadingType, idleadingType, idleadingAbove );                    var idhyphenate = stringIDToTypeID( "hyphenate" );                    desc1999.putBoolean( idhyphenate, true );                    var idhyphenateWordSize = stringIDToTypeID( "hyphenateWordSize" );                    desc1999.putInteger( idhyphenateWordSize, 6 );                    var idhyphenatePreLength = stringIDToTypeID( "hyphenatePreLength" );                    desc1999.putInteger( idhyphenatePreLength, 2 );                    var idhyphenatePostLength = stringIDToTypeID( "hyphenatePostLength" );                    desc1999.putInteger( idhyphenatePostLength, 2 );                    var idhyphenateLimit = stringIDToTypeID( "hyphenateLimit" );                    desc1999.putInteger( idhyphenateLimit, 0 );                    var idhyphenationZone = stringIDToTypeID( "hyphenationZone" );                    desc1999.putDouble( idhyphenationZone, 36.000000 );                    var idhyphenateCapitalized = stringIDToTypeID( "hyphenateCapitalized" );                    desc1999.putBoolean( idhyphenateCapitalized, true );                    var idhyphenationPreference = stringIDToTypeID( "hyphenationPreference" );                    desc1999.putDouble( idhyphenationPreference, 0.500000 );                    var idjustificationWordMinimum = stringIDToTypeID( "justificationWordMinimum" );                    desc1999.putDouble( idjustificationWordMinimum, 0.800000 );                    var idjustificationWordDesired = stringIDToTypeID( "justificationWordDesired" );                    desc1999.putDouble( idjustificationWordDesired, 1.000000 );                    var idjustificationWordMaximum = stringIDToTypeID( "justificationWordMaximum" );                    desc1999.putDouble( idjustificationWordMaximum, 1.330000 );                    var idjustificationLetterMinimum = stringIDToTypeID( "justificationLetterMinimum" );                    desc1999.putDouble( idjustificationLetterMinimum, 0.000000 );                    var idjustificationLetterDesired = stringIDToTypeID( "justificationLetterDesired" );                    desc1999.putDouble( idjustificationLetterDesired, 0.000000 );                    var idjustificationLetterMaximum = stringIDToTypeID( "justificationLetterMaximum" );                    desc1999.putDouble( idjustificationLetterMaximum, 0.000000 );                    var idjustificationGlyphMinimum = stringIDToTypeID( "justificationGlyphMinimum" );                    desc1999.putDouble( idjustificationGlyphMinimum, 1.000000 );                    var idjustificationGlyphDesired = stringIDToTypeID( "justificationGlyphDesired" );                    desc1999.putDouble( idjustificationGlyphDesired, 1.000000 );                    var idjustificationGlyphMaximum = stringIDToTypeID( "justificationGlyphMaximum" );                    desc1999.putDouble( idjustificationGlyphMaximum, 1.000000 );                    var idsingleWordJustification = stringIDToTypeID( "singleWordJustification" );                    var idAlg = charIDToTypeID( "Alg " );                    var idJstA = charIDToTypeID( "JstA" );                    desc1999.putEnumerated( idsingleWordJustification, idAlg, idJstA );                    var idhangingRoman = stringIDToTypeID( "hangingRoman" );                    desc1999.putBoolean( idhangingRoman, false );                    var idautoTCY = stringIDToTypeID( "autoTCY" );                    desc1999.putInteger( idautoTCY, 1 );                    var idkeepTogether = stringIDToTypeID( "keepTogether" );                    desc1999.putBoolean( idkeepTogether, true );                    var idburasagari = stringIDToTypeID( "burasagari" );                    var idburasagari = stringIDToTypeID( "burasagari" );                    var idburasagariNone = stringIDToTypeID( "burasagariNone" );                    desc1999.putEnumerated( idburasagari, idburasagari, idburasagariNone );                    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );                    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );                    var idpushIn = stringIDToTypeID( "pushIn" );                    desc1999.putEnumerated( idpreferredKinsokuOrder, idpreferredKinsokuOrder, idpushIn );                    var idkurikaeshiMojiShori = stringIDToTypeID( "kurikaeshiMojiShori" );                    desc1999.putBoolean( idkurikaeshiMojiShori, false );                    var idkinsokuSetName = stringIDToTypeID( "kinsokuSetName" );                    var idkinsokuSetName = stringIDToTypeID( "kinsokuSetName" );                    var idSoft = stringIDToTypeID( "Soft" );                    desc1999.putEnumerated( idkinsokuSetName, idkinsokuSetName, idSoft );                    var idmojiKumiName = stringIDToTypeID( "mojiKumiName" );                    var idmojiKumiName = stringIDToTypeID( "mojiKumiName" );                    var idPhotoshopsixMojiKumiSetone = stringIDToTypeID( "Photoshop6MojiKumiSet1" );                    desc1999.putEnumerated( idmojiKumiName, idmojiKumiName, idPhotoshopsixMojiKumiSetone );                    var idtextEveryLineComposer = stringIDToTypeID( "textEveryLineComposer" );                    desc1999.putBoolean( idtextEveryLineComposer, false );                    var iddefaultTabWidth = stringIDToTypeID( "defaultTabWidth" );                    desc1999.putDouble( iddefaultTabWidth, 36.000000 );                    var iddefaultStyle = stringIDToTypeID( "defaultStyle" );                        var desc2000 = new ActionDescriptor();                        var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );                        desc2000.putString( idfontPostScriptName, """FZBWKSJW--GB1-0""" );                        var idFntN = charIDToTypeID( "FntN" );                        desc2000.putString( idFntN, """FZBWKSJW""" );                        var idFntS = charIDToTypeID( "FntS" );                        desc2000.putString( idFntS, """-GB1-0""" );                        var idScrp = charIDToTypeID( "Scrp" );                        desc2000.putInteger( idScrp, 25 );                        var idFntT = charIDToTypeID( "FntT" );                        desc2000.putInteger( idFntT, 2 );                        var idSz = charIDToTypeID( "Sz  " );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc2000.putUnitDouble( idSz, idPnt, 2.880000 );                        var idHrzS = charIDToTypeID( "HrzS" );                        desc2000.putDouble( idHrzS, 100.000000 );                        var idVrtS = charIDToTypeID( "VrtS" );                        desc2000.putDouble( idVrtS, 100.000000 );                        var idsyntheticBold = stringIDToTypeID( "syntheticBold" );                        desc2000.putBoolean( idsyntheticBold, false );                        var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );                        desc2000.putBoolean( idsyntheticItalic, false );                        var idautoLeading = stringIDToTypeID( "autoLeading" );                        desc2000.putBoolean( idautoLeading, true );                        var idTrck = charIDToTypeID( "Trck" );                        desc2000.putInteger( idTrck, 0 );                        var idBsln = charIDToTypeID( "Bsln" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc2000.putUnitDouble( idBsln, idPnt, 0.000000 );                        var idcharacterRotation = stringIDToTypeID( "characterRotation" );                        desc2000.putDouble( idcharacterRotation, 0.000000 );                        var idfontCaps = stringIDToTypeID( "fontCaps" );                        var idfontCaps = stringIDToTypeID( "fontCaps" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc2000.putEnumerated( idfontCaps, idfontCaps, idNrml );                        var idbaseline = stringIDToTypeID( "baseline" );                        var idbaseline = stringIDToTypeID( "baseline" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc2000.putEnumerated( idbaseline, idbaseline, idNrml );                        var idotbaseline = stringIDToTypeID( "otbaseline" );                        var idotbaseline = stringIDToTypeID( "otbaseline" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc2000.putEnumerated( idotbaseline, idotbaseline, idNrml );                        var idstrikethrough = stringIDToTypeID( "strikethrough" );                        var idstrikethrough = stringIDToTypeID( "strikethrough" );                        var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );                        desc2000.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );                        var idUndl = charIDToTypeID( "Undl" );                        var idUndl = charIDToTypeID( "Undl" );                        var idunderlineOff = stringIDToTypeID( "underlineOff" );                        desc2000.putEnumerated( idUndl, idUndl, idunderlineOff );                        var idunderlineOffset = stringIDToTypeID( "underlineOffset" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc2000.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );                        var idligature = stringIDToTypeID( "ligature" );                        desc2000.putBoolean( idligature, true );                        var idaltligature = stringIDToTypeID( "altligature" );                        desc2000.putBoolean( idaltligature, false );                        var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );                        desc2000.putBoolean( idcontextualLigatures, false );                        var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );                        desc2000.putBoolean( idalternateLigatures, false );                        var idoldStyle = stringIDToTypeID( "oldStyle" );                        desc2000.putBoolean( idoldStyle, false );                        var idfractions = stringIDToTypeID( "fractions" );                        desc2000.putBoolean( idfractions, false );                        var idordinals = stringIDToTypeID( "ordinals" );                        desc2000.putBoolean( idordinals, false );                        var idswash = stringIDToTypeID( "swash" );                        desc2000.putBoolean( idswash, false );                        var idtitling = stringIDToTypeID( "titling" );                        desc2000.putBoolean( idtitling, false );                        var idconnectionForms = stringIDToTypeID( "connectionForms" );                        desc2000.putBoolean( idconnectionForms, false );                        var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );                        desc2000.putBoolean( idstylisticAlternates, false );                        var idornaments = stringIDToTypeID( "ornaments" );                        desc2000.putBoolean( idornaments, false );                        var idfigureStyle = stringIDToTypeID( "figureStyle" );                        var idfigureStyle = stringIDToTypeID( "figureStyle" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc2000.putEnumerated( idfigureStyle, idfigureStyle, idNrml );                        var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );                        desc2000.putBoolean( idproportionalMetrics, false );                        var idkana = stringIDToTypeID( "kana" );                        desc2000.putBoolean( idkana, false );                        var iditalics = stringIDToTypeID( "italics" );                        desc2000.putBoolean( iditalics, false );                        var idruby = stringIDToTypeID( "ruby" );                        desc2000.putBoolean( idruby, false );                        var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                        var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                        var idrotated = stringIDToTypeID( "rotated" );                        desc2000.putEnumerated( idbaselineDirection, idbaselineDirection, idrotated );                        var idtextLanguage = stringIDToTypeID( "textLanguage" );                        var idtextLanguage = stringIDToTypeID( "textLanguage" );                        var idenglishLanguage = stringIDToTypeID( "englishLanguage" );                        desc2000.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );                        var idmojiZume = stringIDToTypeID( "mojiZume" );                        desc2000.putDouble( idmojiZume, 0.000000 );                        var idgridAlignment = stringIDToTypeID( "gridAlignment" );                        var idgridAlignment = stringIDToTypeID( "gridAlignment" );                        var idroman = stringIDToTypeID( "roman" );                        desc2000.putEnumerated( idgridAlignment, idgridAlignment, idroman );                        var idenableWariChu = stringIDToTypeID( "enableWariChu" );                        desc2000.putBoolean( idenableWariChu, false );                        var idwariChuCount = stringIDToTypeID( "wariChuCount" );                        desc2000.putInteger( idwariChuCount, 2 );                        var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );                        desc2000.putInteger( idwariChuLineGap, 0 );                        var idwariChuScale = stringIDToTypeID( "wariChuScale" );                        desc2000.putDouble( idwariChuScale, 0.500000 );                        var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );                        desc2000.putInteger( idwariChuWidow, 2 );                        var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );                        desc2000.putInteger( idwariChuOrphan, 2 );                        var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                        var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                        var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );                        desc2000.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );                        var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );                        desc2000.putInteger( idtcyUpDown, 0 );                        var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );                        desc2000.putInteger( idtcyLeftRight, 0 );                        var idleftAki = stringIDToTypeID( "leftAki" );                        desc2000.putDouble( idleftAki, -1.000000 );                        var idrightAki = stringIDToTypeID( "rightAki" );                        desc2000.putDouble( idrightAki, -1.000000 );                        var idjiDori = stringIDToTypeID( "jiDori" );                        desc2000.putInteger( idjiDori, 0 );                        var idnoBreak = stringIDToTypeID( "noBreak" );                        desc2000.putBoolean( idnoBreak, false );                        var idClr = charIDToTypeID( "Clr " );                            var desc2001 = new ActionDescriptor();                            var idCyn = charIDToTypeID( "Cyn " );                            desc2001.putDouble( idCyn, 74.520000 );                            var idMgnt = charIDToTypeID( "Mgnt" );                            desc2001.putDouble( idMgnt, 67.780000 );                            var idYlw = charIDToTypeID( "Ylw " );                            desc2001.putDouble( idYlw, 67.130000 );                            var idBlck = charIDToTypeID( "Blck" );                            desc2001.putDouble( idBlck, 89.630000 );                        var idCMYC = charIDToTypeID( "CMYC" );                        desc2000.putObject( idClr, idCMYC, desc2001 );                        var idstrokeColor = stringIDToTypeID( "strokeColor" );                            var desc2002 = new ActionDescriptor();                            var idCyn = charIDToTypeID( "Cyn " );                            desc2002.putDouble( idCyn, 74.520000 );                            var idMgnt = charIDToTypeID( "Mgnt" );                            desc2002.putDouble( idMgnt, 67.780000 );                            var idYlw = charIDToTypeID( "Ylw " );                            desc2002.putDouble( idYlw, 67.130000 );                            var idBlck = charIDToTypeID( "Blck" );                            desc2002.putDouble( idBlck, 89.630000 );                        var idCMYC = charIDToTypeID( "CMYC" );                        desc2000.putObject( idstrokeColor, idCMYC, desc2002 );                        var idFl = charIDToTypeID( "Fl  " );                        desc2000.putBoolean( idFl, true );                        var idStrk = charIDToTypeID( "Strk" );                        desc2000.putBoolean( idStrk, false );                        var idfillFirst = stringIDToTypeID( "fillFirst" );                        desc2000.putBoolean( idfillFirst, true );                        var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );                        desc2000.putBoolean( idfillOverPrint, false );                        var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );                        desc2000.putBoolean( idstrokeOverPrint, false );                        var idlineCap = stringIDToTypeID( "lineCap" );                        var idlineCap = stringIDToTypeID( "lineCap" );                        var idbuttCap = stringIDToTypeID( "buttCap" );                        desc2000.putEnumerated( idlineCap, idlineCap, idbuttCap );                        var idlineJoin = stringIDToTypeID( "lineJoin" );                        var idlineJoin = stringIDToTypeID( "lineJoin" );                        var idmiterJoin = stringIDToTypeID( "miterJoin" );                        desc2000.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );                        var idlineWidth = stringIDToTypeID( "lineWidth" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc2000.putUnitDouble( idlineWidth, idPnt, 0.240000 );                        var idmiterLimit = stringIDToTypeID( "miterLimit" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc2000.putUnitDouble( idmiterLimit, idPnt, 0.960000 );                        var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );                        desc2000.putDouble( idlineDashoffset, 0.000000 );                    var idTxtS = charIDToTypeID( "TxtS" );                    desc1999.putObject( iddefaultStyle, idTxtS, desc2000 );                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );                desc1998.putObject( idparagraphStyle, idparagraphStyle, desc1999 );            var idparagraphStyleRange = stringIDToTypeID( "paragraphStyleRange" );            list105.putObject( idparagraphStyleRange, desc1998 );                var desc2003 = new ActionDescriptor();                var idFrom = charIDToTypeID( "From" );                desc2003.putInteger( idFrom, 3844 );                var idT = charIDToTypeID( "T   " );                desc2003.putInteger( idT, 4100 );                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );                    var desc2004 = new ActionDescriptor();                    var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );                    desc2004.putBoolean( idstyleSheetHasParent, true );                    var idAlgn = charIDToTypeID( "Algn" );                    var idAlg = charIDToTypeID( "Alg " );                    var idjustifyLeft = stringIDToTypeID( "justifyLeft" );                    desc2004.putEnumerated( idAlgn, idAlg, idjustifyLeft );                    var idfirstLineIndent = stringIDToTypeID( "firstLineIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc2004.putUnitDouble( idfirstLineIndent, idPnt, 23.828448 );                    var idstartIndent = stringIDToTypeID( "startIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc2004.putUnitDouble( idstartIndent, idPnt, 0.000000 );                    var idendIndent = stringIDToTypeID( "endIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc2004.putUnitDouble( idendIndent, idPnt, 0.000000 );                    var idspaceBefore = stringIDToTypeID( "spaceBefore" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc2004.putUnitDouble( idspaceBefore, idPnt, 0.150494 );                    var idspaceAfter = stringIDToTypeID( "spaceAfter" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc2004.putUnitDouble( idspaceAfter, idPnt, 0.000000 );                    var iddropCapMultiplier = stringIDToTypeID( "dropCapMultiplier" );                    desc2004.putInteger( iddropCapMultiplier, 1 );                    var idautoLeadingPercentage = stringIDToTypeID( "autoLeadingPercentage" );                    desc2004.putDouble( idautoLeadingPercentage, 1.750000 );                    var idleadingType = stringIDToTypeID( "leadingType" );                    var idleadingType = stringIDToTypeID( "leadingType" );                    var idleadingAbove = stringIDToTypeID( "leadingAbove" );                    desc2004.putEnumerated( idleadingType, idleadingType, idleadingAbove );                    var idhyphenate = stringIDToTypeID( "hyphenate" );                    desc2004.putBoolean( idhyphenate, true );                    var idhyphenateWordSize = stringIDToTypeID( "hyphenateWordSize" );                    desc2004.putInteger( idhyphenateWordSize, 6 );                    var idhyphenatePreLength = stringIDToTypeID( "hyphenatePreLength" );                    desc2004.putInteger( idhyphenatePreLength, 2 );                    var idhyphenatePostLength = stringIDToTypeID( "hyphenatePostLength" );                    desc2004.putInteger( idhyphenatePostLength, 2 );                    var idhyphenateLimit = stringIDToTypeID( "hyphenateLimit" );                    desc2004.putInteger( idhyphenateLimit, 0 );                    var idhyphenationZone = stringIDToTypeID( "hyphenationZone" );                    desc2004.putDouble( idhyphenationZone, 36.000000 );                    var idhyphenateCapitalized = stringIDToTypeID( "hyphenateCapitalized" );                    desc2004.putBoolean( idhyphenateCapitalized, true );                    var idhyphenationPreference = stringIDToTypeID( "hyphenationPreference" );                    desc2004.putDouble( idhyphenationPreference, 0.500000 );                    var idjustificationWordMinimum = stringIDToTypeID( "justificationWordMinimum" );                    desc2004.putDouble( idjustificationWordMinimum, 0.800000 );                    var idjustificationWordDesired = stringIDToTypeID( "justificationWordDesired" );                    desc2004.putDouble( idjustificationWordDesired, 1.000000 );                    var idjustificationWordMaximum = stringIDToTypeID( "justificationWordMaximum" );                    desc2004.putDouble( idjustificationWordMaximum, 1.330000 );                    var idjustificationLetterMinimum = stringIDToTypeID( "justificationLetterMinimum" );                    desc2004.putDouble( idjustificationLetterMinimum, 0.000000 );                    var idjustificationLetterDesired = stringIDToTypeID( "justificationLetterDesired" );                    desc2004.putDouble( idjustificationLetterDesired, 0.000000 );                    var idjustificationLetterMaximum = stringIDToTypeID( "justificationLetterMaximum" );                    desc2004.putDouble( idjustificationLetterMaximum, 0.000000 );                    var idjustificationGlyphMinimum = stringIDToTypeID( "justificationGlyphMinimum" );                    desc2004.putDouble( idjustificationGlyphMinimum, 1.000000 );                    var idjustificationGlyphDesired = stringIDToTypeID( "justificationGlyphDesired" );                    desc2004.putDouble( idjustificationGlyphDesired, 1.000000 );                    var idjustificationGlyphMaximum = stringIDToTypeID( "justificationGlyphMaximum" );                    desc2004.putDouble( idjustificationGlyphMaximum, 1.000000 );                    var idsingleWordJustification = stringIDToTypeID( "singleWordJustification" );                    var idAlg = charIDToTypeID( "Alg " );                    var idJstA = charIDToTypeID( "JstA" );                    desc2004.putEnumerated( idsingleWordJustification, idAlg, idJstA );                    var idhangingRoman = stringIDToTypeID( "hangingRoman" );                    desc2004.putBoolean( idhangingRoman, false );                    var idautoTCY = stringIDToTypeID( "autoTCY" );                    desc2004.putInteger( idautoTCY, 1 );                    var idkeepTogether = stringIDToTypeID( "keepTogether" );                    desc2004.putBoolean( idkeepTogether, true );                    var idburasagari = stringIDToTypeID( "burasagari" );                    var idburasagari = stringIDToTypeID( "burasagari" );                    var idburasagariNone = stringIDToTypeID( "burasagariNone" );                    desc2004.putEnumerated( idburasagari, idburasagari, idburasagariNone );                    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );                    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );                    var idpushIn = stringIDToTypeID( "pushIn" );                    desc2004.putEnumerated( idpreferredKinsokuOrder, idpreferredKinsokuOrder, idpushIn );                    var idkurikaeshiMojiShori = stringIDToTypeID( "kurikaeshiMojiShori" );                    desc2004.putBoolean( idkurikaeshiMojiShori, false );                    var idkinsokuSetName = stringIDToTypeID( "kinsokuSetName" );                    var idkinsokuSetName = stringIDToTypeID( "kinsokuSetName" );                    var idSoft = stringIDToTypeID( "Soft" );                    desc2004.putEnumerated( idkinsokuSetName, idkinsokuSetName, idSoft );                    var idmojiKumiName = stringIDToTypeID( "mojiKumiName" );                    var idmojiKumiName = stringIDToTypeID( "mojiKumiName" );                    var idPhotoshopsixMojiKumiSetone = stringIDToTypeID( "Photoshop6MojiKumiSet1" );                    desc2004.putEnumerated( idmojiKumiName, idmojiKumiName, idPhotoshopsixMojiKumiSetone );                    var idtextEveryLineComposer = stringIDToTypeID( "textEveryLineComposer" );                    desc2004.putBoolean( idtextEveryLineComposer, false );                    var iddefaultTabWidth = stringIDToTypeID( "defaultTabWidth" );                    desc2004.putDouble( iddefaultTabWidth, 36.000000 );                    var iddefaultStyle = stringIDToTypeID( "defaultStyle" );                        var desc2005 = new ActionDescriptor();                        var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );                        desc2005.putString( idfontPostScriptName, """FZBWKSJW--GB1-0""" );                        var idFntN = charIDToTypeID( "FntN" );                        desc2005.putString( idFntN, """FZBWKSJW""" );                        var idFntS = charIDToTypeID( "FntS" );                        desc2005.putString( idFntS, """-GB1-0""" );                        var idScrp = charIDToTypeID( "Scrp" );                        desc2005.putInteger( idScrp, 25 );                        var idFntT = charIDToTypeID( "FntT" );                        desc2005.putInteger( idFntT, 2 );                        var idSz = charIDToTypeID( "Sz  " );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc2005.putUnitDouble( idSz, idPnt, 2.880000 );                        var idHrzS = charIDToTypeID( "HrzS" );                        desc2005.putDouble( idHrzS, 100.000000 );                        var idVrtS = charIDToTypeID( "VrtS" );                        desc2005.putDouble( idVrtS, 100.000000 );                        var idsyntheticBold = stringIDToTypeID( "syntheticBold" );                        desc2005.putBoolean( idsyntheticBold, false );                        var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );                        desc2005.putBoolean( idsyntheticItalic, false );                        var idautoLeading = stringIDToTypeID( "autoLeading" );                        desc2005.putBoolean( idautoLeading, true );                        var idTrck = charIDToTypeID( "Trck" );                        desc2005.putInteger( idTrck, 0 );                        var idBsln = charIDToTypeID( "Bsln" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc2005.putUnitDouble( idBsln, idPnt, 0.000000 );                        var idcharacterRotation = stringIDToTypeID( "characterRotation" );                        desc2005.putDouble( idcharacterRotation, 0.000000 );                        var idfontCaps = stringIDToTypeID( "fontCaps" );                        var idfontCaps = stringIDToTypeID( "fontCaps" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc2005.putEnumerated( idfontCaps, idfontCaps, idNrml );                        var idbaseline = stringIDToTypeID( "baseline" );                        var idbaseline = stringIDToTypeID( "baseline" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc2005.putEnumerated( idbaseline, idbaseline, idNrml );                        var idotbaseline = stringIDToTypeID( "otbaseline" );                        var idotbaseline = stringIDToTypeID( "otbaseline" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc2005.putEnumerated( idotbaseline, idotbaseline, idNrml );                        var idstrikethrough = stringIDToTypeID( "strikethrough" );                        var idstrikethrough = stringIDToTypeID( "strikethrough" );                        var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );                        desc2005.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );                        var idUndl = charIDToTypeID( "Undl" );                        var idUndl = charIDToTypeID( "Undl" );                        var idunderlineOff = stringIDToTypeID( "underlineOff" );                        desc2005.putEnumerated( idUndl, idUndl, idunderlineOff );                        var idunderlineOffset = stringIDToTypeID( "underlineOffset" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc2005.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );                        var idligature = stringIDToTypeID( "ligature" );                        desc2005.putBoolean( idligature, true );                        var idaltligature = stringIDToTypeID( "altligature" );                        desc2005.putBoolean( idaltligature, false );                        var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );                        desc2005.putBoolean( idcontextualLigatures, false );                        var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );                        desc2005.putBoolean( idalternateLigatures, false );                        var idoldStyle = stringIDToTypeID( "oldStyle" );                        desc2005.putBoolean( idoldStyle, false );                        var idfractions = stringIDToTypeID( "fractions" );                        desc2005.putBoolean( idfractions, false );                        var idordinals = stringIDToTypeID( "ordinals" );                        desc2005.putBoolean( idordinals, false );                        var idswash = stringIDToTypeID( "swash" );                        desc2005.putBoolean( idswash, false );                        var idtitling = stringIDToTypeID( "titling" );                        desc2005.putBoolean( idtitling, false );                        var idconnectionForms = stringIDToTypeID( "connectionForms" );                        desc2005.putBoolean( idconnectionForms, false );                        var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );                        desc2005.putBoolean( idstylisticAlternates, false );                        var idornaments = stringIDToTypeID( "ornaments" );                        desc2005.putBoolean( idornaments, false );                        var idfigureStyle = stringIDToTypeID( "figureStyle" );                        var idfigureStyle = stringIDToTypeID( "figureStyle" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc2005.putEnumerated( idfigureStyle, idfigureStyle, idNrml );                        var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );                        desc2005.putBoolean( idproportionalMetrics, false );                        var idkana = stringIDToTypeID( "kana" );                        desc2005.putBoolean( idkana, false );                        var iditalics = stringIDToTypeID( "italics" );                        desc2005.putBoolean( iditalics, false );                        var idruby = stringIDToTypeID( "ruby" );                        desc2005.putBoolean( idruby, false );                        var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                        var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                        var idrotated = stringIDToTypeID( "rotated" );                        desc2005.putEnumerated( idbaselineDirection, idbaselineDirection, idrotated );                        var idtextLanguage = stringIDToTypeID( "textLanguage" );                        var idtextLanguage = stringIDToTypeID( "textLanguage" );                        var idenglishLanguage = stringIDToTypeID( "englishLanguage" );                        desc2005.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );                        var idmojiZume = stringIDToTypeID( "mojiZume" );                        desc2005.putDouble( idmojiZume, 0.000000 );                        var idgridAlignment = stringIDToTypeID( "gridAlignment" );                        var idgridAlignment = stringIDToTypeID( "gridAlignment" );                        var idroman = stringIDToTypeID( "roman" );                        desc2005.putEnumerated( idgridAlignment, idgridAlignment, idroman );                        var idenableWariChu = stringIDToTypeID( "enableWariChu" );                        desc2005.putBoolean( idenableWariChu, false );                        var idwariChuCount = stringIDToTypeID( "wariChuCount" );                        desc2005.putInteger( idwariChuCount, 2 );                        var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );                        desc2005.putInteger( idwariChuLineGap, 0 );                        var idwariChuScale = stringIDToTypeID( "wariChuScale" );                        desc2005.putDouble( idwariChuScale, 0.500000 );                        var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );                        desc2005.putInteger( idwariChuWidow, 2 );                        var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );                        desc2005.putInteger( idwariChuOrphan, 2 );                        var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                        var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                        var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );                        desc2005.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );                        var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );                        desc2005.putInteger( idtcyUpDown, 0 );                        var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );                        desc2005.putInteger( idtcyLeftRight, 0 );                        var idleftAki = stringIDToTypeID( "leftAki" );                        desc2005.putDouble( idleftAki, -1.000000 );                        var idrightAki = stringIDToTypeID( "rightAki" );                        desc2005.putDouble( idrightAki, -1.000000 );                        var idjiDori = stringIDToTypeID( "jiDori" );                        desc2005.putInteger( idjiDori, 0 );                        var idnoBreak = stringIDToTypeID( "noBreak" );                        desc2005.putBoolean( idnoBreak, false );                        var idClr = charIDToTypeID( "Clr " );                            var desc2006 = new ActionDescriptor();                            var idCyn = charIDToTypeID( "Cyn " );                            desc2006.putDouble( idCyn, 74.520000 );                            var idMgnt = charIDToTypeID( "Mgnt" );                            desc2006.putDouble( idMgnt, 67.780000 );                            var idYlw = charIDToTypeID( "Ylw " );                            desc2006.putDouble( idYlw, 67.130000 );                            var idBlck = charIDToTypeID( "Blck" );                            desc2006.putDouble( idBlck, 89.630000 );                        var idCMYC = charIDToTypeID( "CMYC" );                        desc2005.putObject( idClr, idCMYC, desc2006 );                        var idstrokeColor = stringIDToTypeID( "strokeColor" );                            var desc2007 = new ActionDescriptor();                            var idCyn = charIDToTypeID( "Cyn " );                            desc2007.putDouble( idCyn, 74.520000 );                            var idMgnt = charIDToTypeID( "Mgnt" );                            desc2007.putDouble( idMgnt, 67.780000 );                            var idYlw = charIDToTypeID( "Ylw " );                            desc2007.putDouble( idYlw, 67.130000 );                            var idBlck = charIDToTypeID( "Blck" );                            desc2007.putDouble( idBlck, 89.630000 );                        var idCMYC = charIDToTypeID( "CMYC" );                        desc2005.putObject( idstrokeColor, idCMYC, desc2007 );                        var idFl = charIDToTypeID( "Fl  " );                        desc2005.putBoolean( idFl, true );                        var idStrk = charIDToTypeID( "Strk" );                        desc2005.putBoolean( idStrk, false );                        var idfillFirst = stringIDToTypeID( "fillFirst" );                        desc2005.putBoolean( idfillFirst, true );                        var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );                        desc2005.putBoolean( idfillOverPrint, false );                        var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );                        desc2005.putBoolean( idstrokeOverPrint, false );                        var idlineCap = stringIDToTypeID( "lineCap" );                        var idlineCap = stringIDToTypeID( "lineCap" );                        var idbuttCap = stringIDToTypeID( "buttCap" );                        desc2005.putEnumerated( idlineCap, idlineCap, idbuttCap );                        var idlineJoin = stringIDToTypeID( "lineJoin" );                        var idlineJoin = stringIDToTypeID( "lineJoin" );                        var idmiterJoin = stringIDToTypeID( "miterJoin" );                        desc2005.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );                        var idlineWidth = stringIDToTypeID( "lineWidth" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc2005.putUnitDouble( idlineWidth, idPnt, 0.240000 );                        var idmiterLimit = stringIDToTypeID( "miterLimit" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc2005.putUnitDouble( idmiterLimit, idPnt, 0.960000 );                        var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );                        desc2005.putDouble( idlineDashoffset, 0.000000 );                    var idTxtS = charIDToTypeID( "TxtS" );                    desc2004.putObject( iddefaultStyle, idTxtS, desc2005 );                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );                desc2003.putObject( idparagraphStyle, idparagraphStyle, desc2004 );            var idparagraphStyleRange = stringIDToTypeID( "paragraphStyleRange" );            list105.putObject( idparagraphStyleRange, desc2003 );                var desc2008 = new ActionDescriptor();                var idFrom = charIDToTypeID( "From" );                desc2008.putInteger( idFrom, 4100 );                var idT = charIDToTypeID( "T   " );                desc2008.putInteger( idT, 4356 );                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );                    var desc2009 = new ActionDescriptor();                    var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );                    desc2009.putBoolean( idstyleSheetHasParent, true );                    var idAlgn = charIDToTypeID( "Algn" );                    var idAlg = charIDToTypeID( "Alg " );                    var idjustifyLeft = stringIDToTypeID( "justifyLeft" );                    desc2009.putEnumerated( idAlgn, idAlg, idjustifyLeft );                    var idfirstLineIndent = stringIDToTypeID( "firstLineIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc2009.putUnitDouble( idfirstLineIndent, idPnt, 23.828448 );                    var idstartIndent = stringIDToTypeID( "startIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc2009.putUnitDouble( idstartIndent, idPnt, 0.000000 );                    var idendIndent = stringIDToTypeID( "endIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc2009.putUnitDouble( idendIndent, idPnt, 0.000000 );                    var idspaceBefore = stringIDToTypeID( "spaceBefore" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc2009.putUnitDouble( idspaceBefore, idPnt, 0.150494 );                    var idspaceAfter = stringIDToTypeID( "spaceAfter" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc2009.putUnitDouble( idspaceAfter, idPnt, 0.000000 );                    var iddropCapMultiplier = stringIDToTypeID( "dropCapMultiplier" );                    desc2009.putInteger( iddropCapMultiplier, 1 );                    var idautoLeadingPercentage = stringIDToTypeID( "autoLeadingPercentage" );                    desc2009.putDouble( idautoLeadingPercentage, 1.750000 );                    var idleadingType = stringIDToTypeID( "leadingType" );                    var idleadingType = stringIDToTypeID( "leadingType" );                    var idleadingAbove = stringIDToTypeID( "leadingAbove" );                    desc2009.putEnumerated( idleadingType, idleadingType, idleadingAbove );                    var idhyphenate = stringIDToTypeID( "hyphenate" );                    desc2009.putBoolean( idhyphenate, true );                    var idhyphenateWordSize = stringIDToTypeID( "hyphenateWordSize" );                    desc2009.putInteger( idhyphenateWordSize, 6 );                    var idhyphenatePreLength = stringIDToTypeID( "hyphenatePreLength" );                    desc2009.putInteger( idhyphenatePreLength, 2 );                    var idhyphenatePostLength = stringIDToTypeID( "hyphenatePostLength" );                    desc2009.putInteger( idhyphenatePostLength, 2 );                    var idhyphenateLimit = stringIDToTypeID( "hyphenateLimit" );                    desc2009.putInteger( idhyphenateLimit, 0 );                    var idhyphenationZone = stringIDToTypeID( "hyphenationZone" );                    desc2009.putDouble( idhyphenationZone, 36.000000 );                    var idhyphenateCapitalized = stringIDToTypeID( "hyphenateCapitalized" );                    desc2009.putBoolean( idhyphenateCapitalized, true );                    var idhyphenationPreference = stringIDToTypeID( "hyphenationPreference" );                    desc2009.putDouble( idhyphenationPreference, 0.500000 );                    var idjustificationWordMinimum = stringIDToTypeID( "justificationWordMinimum" );                    desc2009.putDouble( idjustificationWordMinimum, 0.800000 );                    var idjustificationWordDesired = stringIDToTypeID( "justificationWordDesired" );                    desc2009.putDouble( idjustificationWordDesired, 1.000000 );                    var idjustificationWordMaximum = stringIDToTypeID( "justificationWordMaximum" );                    desc2009.putDouble( idjustificationWordMaximum, 1.330000 );                    var idjustificationLetterMinimum = stringIDToTypeID( "justificationLetterMinimum" );                    desc2009.putDouble( idjustificationLetterMinimum, 0.000000 );                    var idjustificationLetterDesired = stringIDToTypeID( "justificationLetterDesired" );                    desc2009.putDouble( idjustificationLetterDesired, 0.000000 );                    var idjustificationLetterMaximum = stringIDToTypeID( "justificationLetterMaximum" );                    desc2009.putDouble( idjustificationLetterMaximum, 0.000000 );                    var idjustificationGlyphMinimum = stringIDToTypeID( "justificationGlyphMinimum" );                    desc2009.putDouble( idjustificationGlyphMinimum, 1.000000 );                    var idjustificationGlyphDesired = stringIDToTypeID( "justificationGlyphDesired" );                    desc2009.putDouble( idjustificationGlyphDesired, 1.000000 );                    var idjustificationGlyphMaximum = stringIDToTypeID( "justificationGlyphMaximum" );                    desc2009.putDouble( idjustificationGlyphMaximum, 1.000000 );                    var idsingleWordJustification = stringIDToTypeID( "singleWordJustification" );                    var idAlg = charIDToTypeID( "Alg " );                    var idJstA = charIDToTypeID( "JstA" );                    desc2009.putEnumerated( idsingleWordJustification, idAlg, idJstA );                    var idhangingRoman = stringIDToTypeID( "hangingRoman" );                    desc2009.putBoolean( idhangingRoman, false );                    var idautoTCY = stringIDToTypeID( "autoTCY" );                    desc2009.putInteger( idautoTCY, 1 );                    var idkeepTogether = stringIDToTypeID( "keepTogether" );                    desc2009.putBoolean( idkeepTogether, true );                    var idburasagari = stringIDToTypeID( "burasagari" );                    var idburasagari = stringIDToTypeID( "burasagari" );                    var idburasagariNone = stringIDToTypeID( "burasagariNone" );                    desc2009.putEnumerated( idburasagari, idburasagari, idburasagariNone );                    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );                    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );                    var idpushIn = stringIDToTypeID( "pushIn" );                    desc2009.putEnumerated( idpreferredKinsokuOrder, idpreferredKinsokuOrder, idpushIn );                    var idkurikaeshiMojiShori = stringIDToTypeID( "kurikaeshiMojiShori" );                    desc2009.putBoolean( idkurikaeshiMojiShori, false );                    var idkinsokuSetName = stringIDToTypeID( "kinsokuSetName" );                    var idkinsokuSetName = stringIDToTypeID( "kinsokuSetName" );                    var idSoft = stringIDToTypeID( "Soft" );                    desc2009.putEnumerated( idkinsokuSetName, idkinsokuSetName, idSoft );                    var idmojiKumiName = stringIDToTypeID( "mojiKumiName" );                    var idmojiKumiName = stringIDToTypeID( "mojiKumiName" );                    var idPhotoshopsixMojiKumiSetone = stringIDToTypeID( "Photoshop6MojiKumiSet1" );                    desc2009.putEnumerated( idmojiKumiName, idmojiKumiName, idPhotoshopsixMojiKumiSetone );                    var idtextEveryLineComposer = stringIDToTypeID( "textEveryLineComposer" );                    desc2009.putBoolean( idtextEveryLineComposer, false );                    var iddefaultTabWidth = stringIDToTypeID( "defaultTabWidth" );                    desc2009.putDouble( iddefaultTabWidth, 36.000000 );                    var iddefaultStyle = stringIDToTypeID( "defaultStyle" );                        var desc2010 = new ActionDescriptor();                        var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );                        desc2010.putString( idfontPostScriptName, """FZBWKSJW--GB1-0""" );                        var idFntN = charIDToTypeID( "FntN" );                        desc2010.putString( idFntN, """FZBWKSJW""" );                        var idFntS = charIDToTypeID( "FntS" );                        desc2010.putString( idFntS, """-GB1-0""" );                        var idScrp = charIDToTypeID( "Scrp" );                        desc2010.putInteger( idScrp, 25 );                        var idFntT = charIDToTypeID( "FntT" );                        desc2010.putInteger( idFntT, 2 );                        var idSz = charIDToTypeID( "Sz  " );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc2010.putUnitDouble( idSz, idPnt, 2.880000 );                        var idHrzS = charIDToTypeID( "HrzS" );                        desc2010.putDouble( idHrzS, 100.000000 );                        var idVrtS = charIDToTypeID( "VrtS" );                        desc2010.putDouble( idVrtS, 100.000000 );                        var idsyntheticBold = stringIDToTypeID( "syntheticBold" );                        desc2010.putBoolean( idsyntheticBold, false );                        var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );                        desc2010.putBoolean( idsyntheticItalic, false );                        var idautoLeading = stringIDToTypeID( "autoLeading" );                        desc2010.putBoolean( idautoLeading, true );                        var idTrck = charIDToTypeID( "Trck" );                        desc2010.putInteger( idTrck, 0 );                        var idBsln = charIDToTypeID( "Bsln" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc2010.putUnitDouble( idBsln, idPnt, 0.000000 );                        var idcharacterRotation = stringIDToTypeID( "characterRotation" );                        desc2010.putDouble( idcharacterRotation, 0.000000 );                        var idfontCaps = stringIDToTypeID( "fontCaps" );                        var idfontCaps = stringIDToTypeID( "fontCaps" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc2010.putEnumerated( idfontCaps, idfontCaps, idNrml );                        var idbaseline = stringIDToTypeID( "baseline" );                        var idbaseline = stringIDToTypeID( "baseline" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc2010.putEnumerated( idbaseline, idbaseline, idNrml );                        var idotbaseline = stringIDToTypeID( "otbaseline" );                        var idotbaseline = stringIDToTypeID( "otbaseline" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc2010.putEnumerated( idotbaseline, idotbaseline, idNrml );                        var idstrikethrough = stringIDToTypeID( "strikethrough" );                        var idstrikethrough = stringIDToTypeID( "strikethrough" );                        var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );                        desc2010.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );                        var idUndl = charIDToTypeID( "Undl" );                        var idUndl = charIDToTypeID( "Undl" );                        var idunderlineOff = stringIDToTypeID( "underlineOff" );                        desc2010.putEnumerated( idUndl, idUndl, idunderlineOff );                        var idunderlineOffset = stringIDToTypeID( "underlineOffset" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc2010.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );                        var idligature = stringIDToTypeID( "ligature" );                        desc2010.putBoolean( idligature, true );                        var idaltligature = stringIDToTypeID( "altligature" );                        desc2010.putBoolean( idaltligature, false );                        var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );                        desc2010.putBoolean( idcontextualLigatures, false );                        var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );                        desc2010.putBoolean( idalternateLigatures, false );                        var idoldStyle = stringIDToTypeID( "oldStyle" );                        desc2010.putBoolean( idoldStyle, false );                        var idfractions = stringIDToTypeID( "fractions" );                        desc2010.putBoolean( idfractions, false );                        var idordinals = stringIDToTypeID( "ordinals" );                        desc2010.putBoolean( idordinals, false );                        var idswash = stringIDToTypeID( "swash" );                        desc2010.putBoolean( idswash, false );                        var idtitling = stringIDToTypeID( "titling" );                        desc2010.putBoolean( idtitling, false );                        var idconnectionForms = stringIDToTypeID( "connectionForms" );                        desc2010.putBoolean( idconnectionForms, false );                        var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );                        desc2010.putBoolean( idstylisticAlternates, false );                        var idornaments = stringIDToTypeID( "ornaments" );                        desc2010.putBoolean( idornaments, false );                        var idfigureStyle = stringIDToTypeID( "figureStyle" );                        var idfigureStyle = stringIDToTypeID( "figureStyle" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc2010.putEnumerated( idfigureStyle, idfigureStyle, idNrml );                        var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );                        desc2010.putBoolean( idproportionalMetrics, false );                        var idkana = stringIDToTypeID( "kana" );                        desc2010.putBoolean( idkana, false );                        var iditalics = stringIDToTypeID( "italics" );                        desc2010.putBoolean( iditalics, false );                        var idruby = stringIDToTypeID( "ruby" );                        desc2010.putBoolean( idruby, false );                        var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                        var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                        var idrotated = stringIDToTypeID( "rotated" );                        desc2010.putEnumerated( idbaselineDirection, idbaselineDirection, idrotated );                        var idtextLanguage = stringIDToTypeID( "textLanguage" );                        var idtextLanguage = stringIDToTypeID( "textLanguage" );                        var idenglishLanguage = stringIDToTypeID( "englishLanguage" );                        desc2010.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );                        var idmojiZume = stringIDToTypeID( "mojiZume" );                        desc2010.putDouble( idmojiZume, 0.000000 );                        var idgridAlignment = stringIDToTypeID( "gridAlignment" );                        var idgridAlignment = stringIDToTypeID( "gridAlignment" );                        var idroman = stringIDToTypeID( "roman" );                        desc2010.putEnumerated( idgridAlignment, idgridAlignment, idroman );                        var idenableWariChu = stringIDToTypeID( "enableWariChu" );                        desc2010.putBoolean( idenableWariChu, false );                        var idwariChuCount = stringIDToTypeID( "wariChuCount" );                        desc2010.putInteger( idwariChuCount, 2 );                        var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );                        desc2010.putInteger( idwariChuLineGap, 0 );                        var idwariChuScale = stringIDToTypeID( "wariChuScale" );                        desc2010.putDouble( idwariChuScale, 0.500000 );                        var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );                        desc2010.putInteger( idwariChuWidow, 2 );                        var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );                        desc2010.putInteger( idwariChuOrphan, 2 );                        var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                        var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                        var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );                        desc2010.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );                        var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );                        desc2010.putInteger( idtcyUpDown, 0 );                        var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );                        desc2010.putInteger( idtcyLeftRight, 0 );                        var idleftAki = stringIDToTypeID( "leftAki" );                        desc2010.putDouble( idleftAki, -1.000000 );                        var idrightAki = stringIDToTypeID( "rightAki" );                        desc2010.putDouble( idrightAki, -1.000000 );                        var idjiDori = stringIDToTypeID( "jiDori" );                        desc2010.putInteger( idjiDori, 0 );                        var idnoBreak = stringIDToTypeID( "noBreak" );                        desc2010.putBoolean( idnoBreak, false );                        var idClr = charIDToTypeID( "Clr " );                            var desc2011 = new ActionDescriptor();                            var idCyn = charIDToTypeID( "Cyn " );                            desc2011.putDouble( idCyn, 74.520000 );                            var idMgnt = charIDToTypeID( "Mgnt" );                            desc2011.putDouble( idMgnt, 67.780000 );                            var idYlw = charIDToTypeID( "Ylw " );                            desc2011.putDouble( idYlw, 67.130000 );                            var idBlck = charIDToTypeID( "Blck" );                            desc2011.putDouble( idBlck, 89.630000 );                        var idCMYC = charIDToTypeID( "CMYC" );                        desc2010.putObject( idClr, idCMYC, desc2011 );                        var idstrokeColor = stringIDToTypeID( "strokeColor" );                            var desc2012 = new ActionDescriptor();                            var idCyn = charIDToTypeID( "Cyn " );                            desc2012.putDouble( idCyn, 74.520000 );                            var idMgnt = charIDToTypeID( "Mgnt" );                            desc2012.putDouble( idMgnt, 67.780000 );                            var idYlw = charIDToTypeID( "Ylw " );                            desc2012.putDouble( idYlw, 67.130000 );                            var idBlck = charIDToTypeID( "Blck" );                            desc2012.putDouble( idBlck, 89.630000 );                        var idCMYC = charIDToTypeID( "CMYC" );                        desc2010.putObject( idstrokeColor, idCMYC, desc2012 );                        var idFl = charIDToTypeID( "Fl  " );                        desc2010.putBoolean( idFl, true );                        var idStrk = charIDToTypeID( "Strk" );                        desc2010.putBoolean( idStrk, false );                        var idfillFirst = stringIDToTypeID( "fillFirst" );                        desc2010.putBoolean( idfillFirst, true );                        var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );                        desc2010.putBoolean( idfillOverPrint, false );                        var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );                        desc2010.putBoolean( idstrokeOverPrint, false );                        var idlineCap = stringIDToTypeID( "lineCap" );                        var idlineCap = stringIDToTypeID( "lineCap" );                        var idbuttCap = stringIDToTypeID( "buttCap" );                        desc2010.putEnumerated( idlineCap, idlineCap, idbuttCap );                        var idlineJoin = stringIDToTypeID( "lineJoin" );                        var idlineJoin = stringIDToTypeID( "lineJoin" );                        var idmiterJoin = stringIDToTypeID( "miterJoin" );                        desc2010.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );                        var idlineWidth = stringIDToTypeID( "lineWidth" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc2010.putUnitDouble( idlineWidth, idPnt, 0.240000 );                        var idmiterLimit = stringIDToTypeID( "miterLimit" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc2010.putUnitDouble( idmiterLimit, idPnt, 0.960000 );                        var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );                        desc2010.putDouble( idlineDashoffset, 0.000000 );                    var idTxtS = charIDToTypeID( "TxtS" );                    desc2009.putObject( iddefaultStyle, idTxtS, desc2010 );                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );                desc2008.putObject( idparagraphStyle, idparagraphStyle, desc2009 );            var idparagraphStyleRange = stringIDToTypeID( "paragraphStyleRange" );            list105.putObject( idparagraphStyleRange, desc2008 );                var desc2013 = new ActionDescriptor();                var idFrom = charIDToTypeID( "From" );                desc2013.putInteger( idFrom, 4356 );                var idT = charIDToTypeID( "T   " );                desc2013.putInteger( idT, 4612 );                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );                    var desc2014 = new ActionDescriptor();                    var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );                    desc2014.putBoolean( idstyleSheetHasParent, true );                    var idAlgn = charIDToTypeID( "Algn" );                    var idAlg = charIDToTypeID( "Alg " );                    var idjustifyLeft = stringIDToTypeID( "justifyLeft" );                    desc2014.putEnumerated( idAlgn, idAlg, idjustifyLeft );                    var idfirstLineIndent = stringIDToTypeID( "firstLineIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc2014.putUnitDouble( idfirstLineIndent, idPnt, 23.828448 );                    var idstartIndent = stringIDToTypeID( "startIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc2014.putUnitDouble( idstartIndent, idPnt, 0.000000 );                    var idendIndent = stringIDToTypeID( "endIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc2014.putUnitDouble( idendIndent, idPnt, 0.000000 );                    var idspaceBefore = stringIDToTypeID( "spaceBefore" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc2014.putUnitDouble( idspaceBefore, idPnt, 0.150494 );                    var idspaceAfter = stringIDToTypeID( "spaceAfter" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc2014.putUnitDouble( idspaceAfter, idPnt, 0.000000 );                    var iddropCapMultiplier = stringIDToTypeID( "dropCapMultiplier" );                    desc2014.putInteger( iddropCapMultiplier, 1 );                    var idautoLeadingPercentage = stringIDToTypeID( "autoLeadingPercentage" );                    desc2014.putDouble( idautoLeadingPercentage, 1.750000 );                    var idleadingType = stringIDToTypeID( "leadingType" );                    var idleadingType = stringIDToTypeID( "leadingType" );                    var idleadingAbove = stringIDToTypeID( "leadingAbove" );                    desc2014.putEnumerated( idleadingType, idleadingType, idleadingAbove );                    var idhyphenate = stringIDToTypeID( "hyphenate" );                    desc2014.putBoolean( idhyphenate, true );                    var idhyphenateWordSize = stringIDToTypeID( "hyphenateWordSize" );                    desc2014.putInteger( idhyphenateWordSize, 6 );                    var idhyphenatePreLength = stringIDToTypeID( "hyphenatePreLength" );                    desc2014.putInteger( idhyphenatePreLength, 2 );                    var idhyphenatePostLength = stringIDToTypeID( "hyphenatePostLength" );                    desc2014.putInteger( idhyphenatePostLength, 2 );                    var idhyphenateLimit = stringIDToTypeID( "hyphenateLimit" );                    desc2014.putInteger( idhyphenateLimit, 0 );                    var idhyphenationZone = stringIDToTypeID( "hyphenationZone" );                    desc2014.putDouble( idhyphenationZone, 36.000000 );                    var idhyphenateCapitalized = stringIDToTypeID( "hyphenateCapitalized" );                    desc2014.putBoolean( idhyphenateCapitalized, true );                    var idhyphenationPreference = stringIDToTypeID( "hyphenationPreference" );                    desc2014.putDouble( idhyphenationPreference, 0.500000 );                    var idjustificationWordMinimum = stringIDToTypeID( "justificationWordMinimum" );                    desc2014.putDouble( idjustificationWordMinimum, 0.800000 );                    var idjustificationWordDesired = stringIDToTypeID( "justificationWordDesired" );                    desc2014.putDouble( idjustificationWordDesired, 1.000000 );                    var idjustificationWordMaximum = stringIDToTypeID( "justificationWordMaximum" );                    desc2014.putDouble( idjustificationWordMaximum, 1.330000 );                    var idjustificationLetterMinimum = stringIDToTypeID( "justificationLetterMinimum" );                    desc2014.putDouble( idjustificationLetterMinimum, 0.000000 );                    var idjustificationLetterDesired = stringIDToTypeID( "justificationLetterDesired" );                    desc2014.putDouble( idjustificationLetterDesired, 0.000000 );                    var idjustificationLetterMaximum = stringIDToTypeID( "justificationLetterMaximum" );                    desc2014.putDouble( idjustificationLetterMaximum, 0.000000 );                    var idjustificationGlyphMinimum = stringIDToTypeID( "justificationGlyphMinimum" );                    desc2014.putDouble( idjustificationGlyphMinimum, 1.000000 );                    var idjustificationGlyphDesired = stringIDToTypeID( "justificationGlyphDesired" );                    desc2014.putDouble( idjustificationGlyphDesired, 1.000000 );                    var idjustificationGlyphMaximum = stringIDToTypeID( "justificationGlyphMaximum" );                    desc2014.putDouble( idjustificationGlyphMaximum, 1.000000 );                    var idsingleWordJustification = stringIDToTypeID( "singleWordJustification" );                    var idAlg = charIDToTypeID( "Alg " );                    var idJstA = charIDToTypeID( "JstA" );                    desc2014.putEnumerated( idsingleWordJustification, idAlg, idJstA );                    var idhangingRoman = stringIDToTypeID( "hangingRoman" );                    desc2014.putBoolean( idhangingRoman, false );                    var idautoTCY = stringIDToTypeID( "autoTCY" );                    desc2014.putInteger( idautoTCY, 1 );                    var idkeepTogether = stringIDToTypeID( "keepTogether" );                    desc2014.putBoolean( idkeepTogether, true );                    var idburasagari = stringIDToTypeID( "burasagari" );                    var idburasagari = stringIDToTypeID( "burasagari" );                    var idburasagariNone = stringIDToTypeID( "burasagariNone" );                    desc2014.putEnumerated( idburasagari, idburasagari, idburasagariNone );                    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );                    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );                    var idpushIn = stringIDToTypeID( "pushIn" );                    desc2014.putEnumerated( idpreferredKinsokuOrder, idpreferredKinsokuOrder, idpushIn );                    var idkurikaeshiMojiShori = stringIDToTypeID( "kurikaeshiMojiShori" );                    desc2014.putBoolean( idkurikaeshiMojiShori, false );                    var idkinsokuSetName = stringIDToTypeID( "kinsokuSetName" );                    var idkinsokuSetName = stringIDToTypeID( "kinsokuSetName" );                    var idSoft = stringIDToTypeID( "Soft" );                    desc2014.putEnumerated( idkinsokuSetName, idkinsokuSetName, idSoft );                    var idmojiKumiName = stringIDToTypeID( "mojiKumiName" );                    var idmojiKumiName = stringIDToTypeID( "mojiKumiName" );                    var idPhotoshopsixMojiKumiSetone = stringIDToTypeID( "Photoshop6MojiKumiSet1" );                    desc2014.putEnumerated( idmojiKumiName, idmojiKumiName, idPhotoshopsixMojiKumiSetone );                    var idtextEveryLineComposer = stringIDToTypeID( "textEveryLineComposer" );                    desc2014.putBoolean( idtextEveryLineComposer, false );                    var iddefaultTabWidth = stringIDToTypeID( "defaultTabWidth" );                    desc2014.putDouble( iddefaultTabWidth, 36.000000 );                    var iddefaultStyle = stringIDToTypeID( "defaultStyle" );                        var desc2015 = new ActionDescriptor();                        var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );                        desc2015.putString( idfontPostScriptName, """FZBWKSJW--GB1-0""" );                        var idFntN = charIDToTypeID( "FntN" );                        desc2015.putString( idFntN, """FZBWKSJW""" );                        var idFntS = charIDToTypeID( "FntS" );                        desc2015.putString( idFntS, """-GB1-0""" );                        var idScrp = charIDToTypeID( "Scrp" );                        desc2015.putInteger( idScrp, 25 );                        var idFntT = charIDToTypeID( "FntT" );                        desc2015.putInteger( idFntT, 2 );                        var idSz = charIDToTypeID( "Sz  " );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc2015.putUnitDouble( idSz, idPnt, 2.880000 );                        var idHrzS = charIDToTypeID( "HrzS" );                        desc2015.putDouble( idHrzS, 100.000000 );                        var idVrtS = charIDToTypeID( "VrtS" );                        desc2015.putDouble( idVrtS, 100.000000 );                        var idsyntheticBold = stringIDToTypeID( "syntheticBold" );                        desc2015.putBoolean( idsyntheticBold, false );                        var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );                        desc2015.putBoolean( idsyntheticItalic, false );                        var idautoLeading = stringIDToTypeID( "autoLeading" );                        desc2015.putBoolean( idautoLeading, true );                        var idTrck = charIDToTypeID( "Trck" );                        desc2015.putInteger( idTrck, 0 );                        var idBsln = charIDToTypeID( "Bsln" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc2015.putUnitDouble( idBsln, idPnt, 0.000000 );                        var idcharacterRotation = stringIDToTypeID( "characterRotation" );                        desc2015.putDouble( idcharacterRotation, 0.000000 );                        var idfontCaps = stringIDToTypeID( "fontCaps" );                        var idfontCaps = stringIDToTypeID( "fontCaps" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc2015.putEnumerated( idfontCaps, idfontCaps, idNrml );                        var idbaseline = stringIDToTypeID( "baseline" );                        var idbaseline = stringIDToTypeID( "baseline" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc2015.putEnumerated( idbaseline, idbaseline, idNrml );                        var idotbaseline = stringIDToTypeID( "otbaseline" );                        var idotbaseline = stringIDToTypeID( "otbaseline" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc2015.putEnumerated( idotbaseline, idotbaseline, idNrml );                        var idstrikethrough = stringIDToTypeID( "strikethrough" );                        var idstrikethrough = stringIDToTypeID( "strikethrough" );                        var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );                        desc2015.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );                        var idUndl = charIDToTypeID( "Undl" );                        var idUndl = charIDToTypeID( "Undl" );                        var idunderlineOff = stringIDToTypeID( "underlineOff" );                        desc2015.putEnumerated( idUndl, idUndl, idunderlineOff );                        var idunderlineOffset = stringIDToTypeID( "underlineOffset" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc2015.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );                        var idligature = stringIDToTypeID( "ligature" );                        desc2015.putBoolean( idligature, true );                        var idaltligature = stringIDToTypeID( "altligature" );                        desc2015.putBoolean( idaltligature, false );                        var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );                        desc2015.putBoolean( idcontextualLigatures, false );                        var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );                        desc2015.putBoolean( idalternateLigatures, false );                        var idoldStyle = stringIDToTypeID( "oldStyle" );                        desc2015.putBoolean( idoldStyle, false );                        var idfractions = stringIDToTypeID( "fractions" );                        desc2015.putBoolean( idfractions, false );                        var idordinals = stringIDToTypeID( "ordinals" );                        desc2015.putBoolean( idordinals, false );                        var idswash = stringIDToTypeID( "swash" );                        desc2015.putBoolean( idswash, false );                        var idtitling = stringIDToTypeID( "titling" );                        desc2015.putBoolean( idtitling, false );                        var idconnectionForms = stringIDToTypeID( "connectionForms" );                        desc2015.putBoolean( idconnectionForms, false );                        var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );                        desc2015.putBoolean( idstylisticAlternates, false );                        var idornaments = stringIDToTypeID( "ornaments" );                        desc2015.putBoolean( idornaments, false );                        var idfigureStyle = stringIDToTypeID( "figureStyle" );                        var idfigureStyle = stringIDToTypeID( "figureStyle" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc2015.putEnumerated( idfigureStyle, idfigureStyle, idNrml );                        var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );                        desc2015.putBoolean( idproportionalMetrics, false );                        var idkana = stringIDToTypeID( "kana" );                        desc2015.putBoolean( idkana, false );                        var iditalics = stringIDToTypeID( "italics" );                        desc2015.putBoolean( iditalics, false );                        var idruby = stringIDToTypeID( "ruby" );                        desc2015.putBoolean( idruby, false );                        var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                        var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                        var idrotated = stringIDToTypeID( "rotated" );                        desc2015.putEnumerated( idbaselineDirection, idbaselineDirection, idrotated );                        var idtextLanguage = stringIDToTypeID( "textLanguage" );                        var idtextLanguage = stringIDToTypeID( "textLanguage" );                        var idenglishLanguage = stringIDToTypeID( "englishLanguage" );                        desc2015.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );                        var idmojiZume = stringIDToTypeID( "mojiZume" );                        desc2015.putDouble( idmojiZume, 0.000000 );                        var idgridAlignment = stringIDToTypeID( "gridAlignment" );                        var idgridAlignment = stringIDToTypeID( "gridAlignment" );                        var idroman = stringIDToTypeID( "roman" );                        desc2015.putEnumerated( idgridAlignment, idgridAlignment, idroman );                        var idenableWariChu = stringIDToTypeID( "enableWariChu" );                        desc2015.putBoolean( idenableWariChu, false );                        var idwariChuCount = stringIDToTypeID( "wariChuCount" );                        desc2015.putInteger( idwariChuCount, 2 );                        var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );                        desc2015.putInteger( idwariChuLineGap, 0 );                        var idwariChuScale = stringIDToTypeID( "wariChuScale" );                        desc2015.putDouble( idwariChuScale, 0.500000 );                        var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );                        desc2015.putInteger( idwariChuWidow, 2 );                        var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );                        desc2015.putInteger( idwariChuOrphan, 2 );                        var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                        var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                        var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );                        desc2015.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );                        var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );                        desc2015.putInteger( idtcyUpDown, 0 );                        var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );                        desc2015.putInteger( idtcyLeftRight, 0 );                        var idleftAki = stringIDToTypeID( "leftAki" );                        desc2015.putDouble( idleftAki, -1.000000 );                        var idrightAki = stringIDToTypeID( "rightAki" );                        desc2015.putDouble( idrightAki, -1.000000 );                        var idjiDori = stringIDToTypeID( "jiDori" );                        desc2015.putInteger( idjiDori, 0 );                        var idnoBreak = stringIDToTypeID( "noBreak" );                        desc2015.putBoolean( idnoBreak, false );                        var idClr = charIDToTypeID( "Clr " );                            var desc2016 = new ActionDescriptor();                            var idCyn = charIDToTypeID( "Cyn " );                            desc2016.putDouble( idCyn, 74.520000 );                            var idMgnt = charIDToTypeID( "Mgnt" );                            desc2016.putDouble( idMgnt, 67.780000 );                            var idYlw = charIDToTypeID( "Ylw " );                            desc2016.putDouble( idYlw, 67.130000 );                            var idBlck = charIDToTypeID( "Blck" );                            desc2016.putDouble( idBlck, 89.630000 );                        var idCMYC = charIDToTypeID( "CMYC" );                        desc2015.putObject( idClr, idCMYC, desc2016 );                        var idstrokeColor = stringIDToTypeID( "strokeColor" );                            var desc2017 = new ActionDescriptor();                            var idCyn = charIDToTypeID( "Cyn " );                            desc2017.putDouble( idCyn, 74.520000 );                            var idMgnt = charIDToTypeID( "Mgnt" );                            desc2017.putDouble( idMgnt, 67.780000 );                            var idYlw = charIDToTypeID( "Ylw " );                            desc2017.putDouble( idYlw, 67.130000 );                            var idBlck = charIDToTypeID( "Blck" );                            desc2017.putDouble( idBlck, 89.630000 );                        var idCMYC = charIDToTypeID( "CMYC" );                        desc2015.putObject( idstrokeColor, idCMYC, desc2017 );                        var idFl = charIDToTypeID( "Fl  " );                        desc2015.putBoolean( idFl, true );                        var idStrk = charIDToTypeID( "Strk" );                        desc2015.putBoolean( idStrk, false );                        var idfillFirst = stringIDToTypeID( "fillFirst" );                        desc2015.putBoolean( idfillFirst, true );                        var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );                        desc2015.putBoolean( idfillOverPrint, false );                        var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );                        desc2015.putBoolean( idstrokeOverPrint, false );                        var idlineCap = stringIDToTypeID( "lineCap" );                        var idlineCap = stringIDToTypeID( "lineCap" );                        var idbuttCap = stringIDToTypeID( "buttCap" );                        desc2015.putEnumerated( idlineCap, idlineCap, idbuttCap );                        var idlineJoin = stringIDToTypeID( "lineJoin" );                        var idlineJoin = stringIDToTypeID( "lineJoin" );                        var idmiterJoin = stringIDToTypeID( "miterJoin" );                        desc2015.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );                        var idlineWidth = stringIDToTypeID( "lineWidth" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc2015.putUnitDouble( idlineWidth, idPnt, 0.240000 );                        var idmiterLimit = stringIDToTypeID( "miterLimit" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc2015.putUnitDouble( idmiterLimit, idPnt, 0.960000 );                        var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );                        desc2015.putDouble( idlineDashoffset, 0.000000 );                    var idTxtS = charIDToTypeID( "TxtS" );                    desc2014.putObject( iddefaultStyle, idTxtS, desc2015 );                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );                desc2013.putObject( idparagraphStyle, idparagraphStyle, desc2014 );            var idparagraphStyleRange = stringIDToTypeID( "paragraphStyleRange" );            list105.putObject( idparagraphStyleRange, desc2013 );                var desc2018 = new ActionDescriptor();                var idFrom = charIDToTypeID( "From" );                desc2018.putInteger( idFrom, 4612 );                var idT = charIDToTypeID( "T   " );                desc2018.putInteger( idT, 4613 );                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );                    var desc2019 = new ActionDescriptor();                    var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );                    desc2019.putBoolean( idstyleSheetHasParent, true );                    var idAlgn = charIDToTypeID( "Algn" );                    var idAlg = charIDToTypeID( "Alg " );                    var idjustifyLeft = stringIDToTypeID( "justifyLeft" );                    desc2019.putEnumerated( idAlgn, idAlg, idjustifyLeft );                    var idfirstLineIndent = stringIDToTypeID( "firstLineIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc2019.putUnitDouble( idfirstLineIndent, idPnt, 23.828448 );                    var idstartIndent = stringIDToTypeID( "startIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc2019.putUnitDouble( idstartIndent, idPnt, 0.000000 );                    var idendIndent = stringIDToTypeID( "endIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc2019.putUnitDouble( idendIndent, idPnt, 0.000000 );                    var idspaceBefore = stringIDToTypeID( "spaceBefore" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc2019.putUnitDouble( idspaceBefore, idPnt, 0.150494 );                    var idspaceAfter = stringIDToTypeID( "spaceAfter" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc2019.putUnitDouble( idspaceAfter, idPnt, 0.000000 );                    var iddropCapMultiplier = stringIDToTypeID( "dropCapMultiplier" );                    desc2019.putInteger( iddropCapMultiplier, 1 );                    var idautoLeadingPercentage = stringIDToTypeID( "autoLeadingPercentage" );                    desc2019.putDouble( idautoLeadingPercentage, 1.750000 );                    var idleadingType = stringIDToTypeID( "leadingType" );                    var idleadingType = stringIDToTypeID( "leadingType" );                    var idleadingAbove = stringIDToTypeID( "leadingAbove" );                    desc2019.putEnumerated( idleadingType, idleadingType, idleadingAbove );                    var idhyphenate = stringIDToTypeID( "hyphenate" );                    desc2019.putBoolean( idhyphenate, true );                    var idhyphenateWordSize = stringIDToTypeID( "hyphenateWordSize" );                    desc2019.putInteger( idhyphenateWordSize, 6 );                    var idhyphenatePreLength = stringIDToTypeID( "hyphenatePreLength" );                    desc2019.putInteger( idhyphenatePreLength, 2 );                    var idhyphenatePostLength = stringIDToTypeID( "hyphenatePostLength" );                    desc2019.putInteger( idhyphenatePostLength, 2 );                    var idhyphenateLimit = stringIDToTypeID( "hyphenateLimit" );                    desc2019.putInteger( idhyphenateLimit, 0 );                    var idhyphenationZone = stringIDToTypeID( "hyphenationZone" );                    desc2019.putDouble( idhyphenationZone, 36.000000 );                    var idhyphenateCapitalized = stringIDToTypeID( "hyphenateCapitalized" );                    desc2019.putBoolean( idhyphenateCapitalized, true );                    var idhyphenationPreference = stringIDToTypeID( "hyphenationPreference" );                    desc2019.putDouble( idhyphenationPreference, 0.500000 );                    var idjustificationWordMinimum = stringIDToTypeID( "justificationWordMinimum" );                    desc2019.putDouble( idjustificationWordMinimum, 0.800000 );                    var idjustificationWordDesired = stringIDToTypeID( "justificationWordDesired" );                    desc2019.putDouble( idjustificationWordDesired, 1.000000 );                    var idjustificationWordMaximum = stringIDToTypeID( "justificationWordMaximum" );                    desc2019.putDouble( idjustificationWordMaximum, 1.330000 );                    var idjustificationLetterMinimum = stringIDToTypeID( "justificationLetterMinimum" );                    desc2019.putDouble( idjustificationLetterMinimum, 0.000000 );                    var idjustificationLetterDesired = stringIDToTypeID( "justificationLetterDesired" );                    desc2019.putDouble( idjustificationLetterDesired, 0.000000 );                    var idjustificationLetterMaximum = stringIDToTypeID( "justificationLetterMaximum" );                    desc2019.putDouble( idjustificationLetterMaximum, 0.000000 );                    var idjustificationGlyphMinimum = stringIDToTypeID( "justificationGlyphMinimum" );                    desc2019.putDouble( idjustificationGlyphMinimum, 1.000000 );                    var idjustificationGlyphDesired = stringIDToTypeID( "justificationGlyphDesired" );                    desc2019.putDouble( idjustificationGlyphDesired, 1.000000 );                    var idjustificationGlyphMaximum = stringIDToTypeID( "justificationGlyphMaximum" );                    desc2019.putDouble( idjustificationGlyphMaximum, 1.000000 );                    var idsingleWordJustification = stringIDToTypeID( "singleWordJustification" );                    var idAlg = charIDToTypeID( "Alg " );                    var idJstA = charIDToTypeID( "JstA" );                    desc2019.putEnumerated( idsingleWordJustification, idAlg, idJstA );                    var idhangingRoman = stringIDToTypeID( "hangingRoman" );                    desc2019.putBoolean( idhangingRoman, false );                    var idautoTCY = stringIDToTypeID( "autoTCY" );                    desc2019.putInteger( idautoTCY, 1 );                    var idkeepTogether = stringIDToTypeID( "keepTogether" );                    desc2019.putBoolean( idkeepTogether, true );                    var idburasagari = stringIDToTypeID( "burasagari" );                    var idburasagari = stringIDToTypeID( "burasagari" );                    var idburasagariNone = stringIDToTypeID( "burasagariNone" );                    desc2019.putEnumerated( idburasagari, idburasagari, idburasagariNone );                    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );                    var idpreferredKinsokuOrder = stringIDToTypeID( "preferredKinsokuOrder" );                    var idpushIn = stringIDToTypeID( "pushIn" );                    desc2019.putEnumerated( idpreferredKinsokuOrder, idpreferredKinsokuOrder, idpushIn );                    var idkurikaeshiMojiShori = stringIDToTypeID( "kurikaeshiMojiShori" );                    desc2019.putBoolean( idkurikaeshiMojiShori, false );                    var idkinsokuSetName = stringIDToTypeID( "kinsokuSetName" );                    var idkinsokuSetName = stringIDToTypeID( "kinsokuSetName" );                    var idSoft = stringIDToTypeID( "Soft" );                    desc2019.putEnumerated( idkinsokuSetName, idkinsokuSetName, idSoft );                    var idmojiKumiName = stringIDToTypeID( "mojiKumiName" );                    var idmojiKumiName = stringIDToTypeID( "mojiKumiName" );                    var idPhotoshopsixMojiKumiSetone = stringIDToTypeID( "Photoshop6MojiKumiSet1" );                    desc2019.putEnumerated( idmojiKumiName, idmojiKumiName, idPhotoshopsixMojiKumiSetone );                    var idtextEveryLineComposer = stringIDToTypeID( "textEveryLineComposer" );                    desc2019.putBoolean( idtextEveryLineComposer, false );                    var iddefaultTabWidth = stringIDToTypeID( "defaultTabWidth" );                    desc2019.putDouble( iddefaultTabWidth, 36.000000 );                    var iddefaultStyle = stringIDToTypeID( "defaultStyle" );                        var desc2020 = new ActionDescriptor();                        var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );                        desc2020.putString( idfontPostScriptName, """FZBWKSJW--GB1-0""" );                        var idFntN = charIDToTypeID( "FntN" );                        desc2020.putString( idFntN, """FZBWKSJW""" );                        var idFntS = charIDToTypeID( "FntS" );                        desc2020.putString( idFntS, """-GB1-0""" );                        var idScrp = charIDToTypeID( "Scrp" );                        desc2020.putInteger( idScrp, 25 );                        var idFntT = charIDToTypeID( "FntT" );                        desc2020.putInteger( idFntT, 2 );                        var idSz = charIDToTypeID( "Sz  " );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc2020.putUnitDouble( idSz, idPnt, 2.880000 );                        var idHrzS = charIDToTypeID( "HrzS" );                        desc2020.putDouble( idHrzS, 100.000000 );                        var idVrtS = charIDToTypeID( "VrtS" );                        desc2020.putDouble( idVrtS, 100.000000 );                        var idsyntheticBold = stringIDToTypeID( "syntheticBold" );                        desc2020.putBoolean( idsyntheticBold, false );                        var idsyntheticItalic = stringIDToTypeID( "syntheticItalic" );                        desc2020.putBoolean( idsyntheticItalic, false );                        var idautoLeading = stringIDToTypeID( "autoLeading" );                        desc2020.putBoolean( idautoLeading, true );                        var idTrck = charIDToTypeID( "Trck" );                        desc2020.putInteger( idTrck, 0 );                        var idBsln = charIDToTypeID( "Bsln" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc2020.putUnitDouble( idBsln, idPnt, 0.000000 );                        var idcharacterRotation = stringIDToTypeID( "characterRotation" );                        desc2020.putDouble( idcharacterRotation, 0.000000 );                        var idfontCaps = stringIDToTypeID( "fontCaps" );                        var idfontCaps = stringIDToTypeID( "fontCaps" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc2020.putEnumerated( idfontCaps, idfontCaps, idNrml );                        var idbaseline = stringIDToTypeID( "baseline" );                        var idbaseline = stringIDToTypeID( "baseline" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc2020.putEnumerated( idbaseline, idbaseline, idNrml );                        var idotbaseline = stringIDToTypeID( "otbaseline" );                        var idotbaseline = stringIDToTypeID( "otbaseline" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc2020.putEnumerated( idotbaseline, idotbaseline, idNrml );                        var idstrikethrough = stringIDToTypeID( "strikethrough" );                        var idstrikethrough = stringIDToTypeID( "strikethrough" );                        var idstrikethroughOff = stringIDToTypeID( "strikethroughOff" );                        desc2020.putEnumerated( idstrikethrough, idstrikethrough, idstrikethroughOff );                        var idUndl = charIDToTypeID( "Undl" );                        var idUndl = charIDToTypeID( "Undl" );                        var idunderlineOff = stringIDToTypeID( "underlineOff" );                        desc2020.putEnumerated( idUndl, idUndl, idunderlineOff );                        var idunderlineOffset = stringIDToTypeID( "underlineOffset" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc2020.putUnitDouble( idunderlineOffset, idPnt, 0.000000 );                        var idligature = stringIDToTypeID( "ligature" );                        desc2020.putBoolean( idligature, true );                        var idaltligature = stringIDToTypeID( "altligature" );                        desc2020.putBoolean( idaltligature, false );                        var idcontextualLigatures = stringIDToTypeID( "contextualLigatures" );                        desc2020.putBoolean( idcontextualLigatures, false );                        var idalternateLigatures = stringIDToTypeID( "alternateLigatures" );                        desc2020.putBoolean( idalternateLigatures, false );                        var idoldStyle = stringIDToTypeID( "oldStyle" );                        desc2020.putBoolean( idoldStyle, false );                        var idfractions = stringIDToTypeID( "fractions" );                        desc2020.putBoolean( idfractions, false );                        var idordinals = stringIDToTypeID( "ordinals" );                        desc2020.putBoolean( idordinals, false );                        var idswash = stringIDToTypeID( "swash" );                        desc2020.putBoolean( idswash, false );                        var idtitling = stringIDToTypeID( "titling" );                        desc2020.putBoolean( idtitling, false );                        var idconnectionForms = stringIDToTypeID( "connectionForms" );                        desc2020.putBoolean( idconnectionForms, false );                        var idstylisticAlternates = stringIDToTypeID( "stylisticAlternates" );                        desc2020.putBoolean( idstylisticAlternates, false );                        var idornaments = stringIDToTypeID( "ornaments" );                        desc2020.putBoolean( idornaments, false );                        var idfigureStyle = stringIDToTypeID( "figureStyle" );                        var idfigureStyle = stringIDToTypeID( "figureStyle" );                        var idNrml = charIDToTypeID( "Nrml" );                        desc2020.putEnumerated( idfigureStyle, idfigureStyle, idNrml );                        var idproportionalMetrics = stringIDToTypeID( "proportionalMetrics" );                        desc2020.putBoolean( idproportionalMetrics, false );                        var idkana = stringIDToTypeID( "kana" );                        desc2020.putBoolean( idkana, false );                        var iditalics = stringIDToTypeID( "italics" );                        desc2020.putBoolean( iditalics, false );                        var idruby = stringIDToTypeID( "ruby" );                        desc2020.putBoolean( idruby, false );                        var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                        var idbaselineDirection = stringIDToTypeID( "baselineDirection" );                        var idrotated = stringIDToTypeID( "rotated" );                        desc2020.putEnumerated( idbaselineDirection, idbaselineDirection, idrotated );                        var idtextLanguage = stringIDToTypeID( "textLanguage" );                        var idtextLanguage = stringIDToTypeID( "textLanguage" );                        var idenglishLanguage = stringIDToTypeID( "englishLanguage" );                        desc2020.putEnumerated( idtextLanguage, idtextLanguage, idenglishLanguage );                        var idmojiZume = stringIDToTypeID( "mojiZume" );                        desc2020.putDouble( idmojiZume, 0.000000 );                        var idgridAlignment = stringIDToTypeID( "gridAlignment" );                        var idgridAlignment = stringIDToTypeID( "gridAlignment" );                        var idroman = stringIDToTypeID( "roman" );                        desc2020.putEnumerated( idgridAlignment, idgridAlignment, idroman );                        var idenableWariChu = stringIDToTypeID( "enableWariChu" );                        desc2020.putBoolean( idenableWariChu, false );                        var idwariChuCount = stringIDToTypeID( "wariChuCount" );                        desc2020.putInteger( idwariChuCount, 2 );                        var idwariChuLineGap = stringIDToTypeID( "wariChuLineGap" );                        desc2020.putInteger( idwariChuLineGap, 0 );                        var idwariChuScale = stringIDToTypeID( "wariChuScale" );                        desc2020.putDouble( idwariChuScale, 0.500000 );                        var idwariChuWidow = stringIDToTypeID( "wariChuWidow" );                        desc2020.putInteger( idwariChuWidow, 2 );                        var idwariChuOrphan = stringIDToTypeID( "wariChuOrphan" );                        desc2020.putInteger( idwariChuOrphan, 2 );                        var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                        var idwariChuJustification = stringIDToTypeID( "wariChuJustification" );                        var idwariChuAutoJustify = stringIDToTypeID( "wariChuAutoJustify" );                        desc2020.putEnumerated( idwariChuJustification, idwariChuJustification, idwariChuAutoJustify );                        var idtcyUpDown = stringIDToTypeID( "tcyUpDown" );                        desc2020.putInteger( idtcyUpDown, 0 );                        var idtcyLeftRight = stringIDToTypeID( "tcyLeftRight" );                        desc2020.putInteger( idtcyLeftRight, 0 );                        var idleftAki = stringIDToTypeID( "leftAki" );                        desc2020.putDouble( idleftAki, -1.000000 );                        var idrightAki = stringIDToTypeID( "rightAki" );                        desc2020.putDouble( idrightAki, -1.000000 );                        var idjiDori = stringIDToTypeID( "jiDori" );                        desc2020.putInteger( idjiDori, 0 );                        var idnoBreak = stringIDToTypeID( "noBreak" );                        desc2020.putBoolean( idnoBreak, false );                        var idClr = charIDToTypeID( "Clr " );                            var desc2021 = new ActionDescriptor();                            var idCyn = charIDToTypeID( "Cyn " );                            desc2021.putDouble( idCyn, 74.520000 );                            var idMgnt = charIDToTypeID( "Mgnt" );                            desc2021.putDouble( idMgnt, 67.780000 );                            var idYlw = charIDToTypeID( "Ylw " );                            desc2021.putDouble( idYlw, 67.130000 );                            var idBlck = charIDToTypeID( "Blck" );                            desc2021.putDouble( idBlck, 89.630000 );                        var idCMYC = charIDToTypeID( "CMYC" );                        desc2020.putObject( idClr, idCMYC, desc2021 );                        var idstrokeColor = stringIDToTypeID( "strokeColor" );                            var desc2022 = new ActionDescriptor();                            var idCyn = charIDToTypeID( "Cyn " );                            desc2022.putDouble( idCyn, 74.520000 );                            var idMgnt = charIDToTypeID( "Mgnt" );                            desc2022.putDouble( idMgnt, 67.780000 );                            var idYlw = charIDToTypeID( "Ylw " );                            desc2022.putDouble( idYlw, 67.130000 );                            var idBlck = charIDToTypeID( "Blck" );                            desc2022.putDouble( idBlck, 89.630000 );                        var idCMYC = charIDToTypeID( "CMYC" );                        desc2020.putObject( idstrokeColor, idCMYC, desc2022 );                        var idFl = charIDToTypeID( "Fl  " );                        desc2020.putBoolean( idFl, true );                        var idStrk = charIDToTypeID( "Strk" );                        desc2020.putBoolean( idStrk, false );                        var idfillFirst = stringIDToTypeID( "fillFirst" );                        desc2020.putBoolean( idfillFirst, true );                        var idfillOverPrint = stringIDToTypeID( "fillOverPrint" );                        desc2020.putBoolean( idfillOverPrint, false );                        var idstrokeOverPrint = stringIDToTypeID( "strokeOverPrint" );                        desc2020.putBoolean( idstrokeOverPrint, false );                        var idlineCap = stringIDToTypeID( "lineCap" );                        var idlineCap = stringIDToTypeID( "lineCap" );                        var idbuttCap = stringIDToTypeID( "buttCap" );                        desc2020.putEnumerated( idlineCap, idlineCap, idbuttCap );                        var idlineJoin = stringIDToTypeID( "lineJoin" );                        var idlineJoin = stringIDToTypeID( "lineJoin" );                        var idmiterJoin = stringIDToTypeID( "miterJoin" );                        desc2020.putEnumerated( idlineJoin, idlineJoin, idmiterJoin );                        var idlineWidth = stringIDToTypeID( "lineWidth" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc2020.putUnitDouble( idlineWidth, idPnt, 0.240000 );                        var idmiterLimit = stringIDToTypeID( "miterLimit" );                        var idPnt = charIDToTypeID( "#Pnt" );                        desc2020.putUnitDouble( idmiterLimit, idPnt, 0.960000 );                        var idlineDashoffset = stringIDToTypeID( "lineDashoffset" );                        desc2020.putDouble( idlineDashoffset, 0.000000 );                    var idTxtS = charIDToTypeID( "TxtS" );                    desc2019.putObject( iddefaultStyle, idTxtS, desc2020 );                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );                desc2018.putObject( idparagraphStyle, idparagraphStyle, desc2019 );            var idparagraphStyleRange = stringIDToTypeID( "paragraphStyleRange" );            list105.putObject( idparagraphStyleRange, desc2018 );                var desc2023 = new ActionDescriptor();                var idFrom = charIDToTypeID( "From" );                desc2023.putInteger( idFrom, 4613 );                var idT = charIDToTypeID( "T   " );                desc2023.putInteger( idT, 4614 );                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );                    var desc2024 = new ActionDescriptor();                    var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );                    desc2024.putBoolean( idstyleSheetHasParent, true );                    var idAlgn = charIDToTypeID( "Algn" );                    var idAlg = charIDToTypeID( "Alg " );                    var idjustifyLeft = stringIDToTypeID( "justifyLeft" );                    desc2024.putEnumerated( idAlgn, idAlg, idjustifyLeft );                    var idfirstLineIndent = stringIDToTypeID( "firstLineIndent" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc2024.putUnitDouble( idfirstLineIndent, idPnt, 23.828448 );                    var idspaceBefore = stringIDToTypeID( "spaceBefore" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc2024.putUnitDouble( idspaceBefore, idPnt, 0.150495 );                    var idautoLeadingPercentage = stringIDToTypeID( "autoLeadingPercentage" );                    desc2024.putDouble( idautoLeadingPercentage, 1.750000 );                    var idleadingType = stringIDToTypeID( "leadingType" );                    var idleadingType = stringIDToTypeID( "leadingType" );                    var idleadingAbove = stringIDToTypeID( "leadingAbove" );                    desc2024.putEnumerated( idleadingType, idleadingType, idleadingAbove );                    var idjustificationWordMinimum = stringIDToTypeID( "justificationWordMinimum" );                    desc2024.putDouble( idjustificationWordMinimum, 0.800000 );                    var idjustificationWordDesired = stringIDToTypeID( "justificationWordDesired" );                    desc2024.putDouble( idjustificationWordDesired, 1.000000 );                    var idjustificationWordMaximum = stringIDToTypeID( "justificationWordMaximum" );                    desc2024.putDouble( idjustificationWordMaximum, 1.330000 );                    var idjustificationLetterMinimum = stringIDToTypeID( "justificationLetterMinimum" );                    desc2024.putDouble( idjustificationLetterMinimum, 0.000000 );                    var idjustificationLetterDesired = stringIDToTypeID( "justificationLetterDesired" );                    desc2024.putDouble( idjustificationLetterDesired, 0.000000 );                    var idjustificationLetterMaximum = stringIDToTypeID( "justificationLetterMaximum" );                    desc2024.putDouble( idjustificationLetterMaximum, 0.000000 );                    var idjustificationGlyphMinimum = stringIDToTypeID( "justificationGlyphMinimum" );                    desc2024.putDouble( idjustificationGlyphMinimum, 1.000000 );                    var idjustificationGlyphDesired = stringIDToTypeID( "justificationGlyphDesired" );                    desc2024.putDouble( idjustificationGlyphDesired, 1.000000 );                    var idjustificationGlyphMaximum = stringIDToTypeID( "justificationGlyphMaximum" );                    desc2024.putDouble( idjustificationGlyphMaximum, 1.000000 );                    var idkinsokuSetName = stringIDToTypeID( "kinsokuSetName" );                    var idkinsokuSetName = stringIDToTypeID( "kinsokuSetName" );                    var idSoft = stringIDToTypeID( "Soft" );                    desc2024.putEnumerated( idkinsokuSetName, idkinsokuSetName, idSoft );                    var idmojiKumiName = stringIDToTypeID( "mojiKumiName" );                    var idmojiKumiName = stringIDToTypeID( "mojiKumiName" );                    var idPhotoshopsixMojiKumiSetone = stringIDToTypeID( "Photoshop6MojiKumiSet1" );                    desc2024.putEnumerated( idmojiKumiName, idmojiKumiName, idPhotoshopsixMojiKumiSetone );                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );                desc2023.putObject( idparagraphStyle, idparagraphStyle, desc2024 );            var idparagraphStyleRange = stringIDToTypeID( "paragraphStyleRange" );            list105.putObject( idparagraphStyleRange, desc2023 );        desc1795.putList( idparagraphStyleRange, list105 );        var idkerningRange = stringIDToTypeID( "kerningRange" );            var list106 = new ActionList();        desc1795.putList( idkerningRange, list106 );    var idTxLr = charIDToTypeID( "TxLr" );    desc1794.putObject( idUsng, idTxLr, desc1795 );executeAction( idMk, desc1794, DialogModes.NO );return app.activeDocument.activeLayer;}function emboss( content,x,y,width,height ,points){// =======================================================var idMk = charIDToTypeID( "Mk  " );    var desc531 = new ActionDescriptor();    var idnull = charIDToTypeID( "null" );        var ref98 = new ActionReference();        var idTxLr = charIDToTypeID( "TxLr" );        ref98.putClass( idTxLr );    desc531.putReference( idnull, ref98 );    var idUsng = charIDToTypeID( "Usng" );        var desc532 = new ActionDescriptor();        var idTxt = charIDToTypeID( "Txt " );        desc532.putString( idTxt, content );        var idwarp = stringIDToTypeID( "warp" );            var desc533 = new ActionDescriptor();            var idwarpStyle = stringIDToTypeID( "warpStyle" );            var idwarpStyle = stringIDToTypeID( "warpStyle" );            var idwarpNone = stringIDToTypeID( "warpNone" );            desc533.putEnumerated( idwarpStyle, idwarpStyle, idwarpNone );            var idwarpValue = stringIDToTypeID( "warpValue" );            desc533.putDouble( idwarpValue, 0.000000 );            var idwarpPerspective = stringIDToTypeID( "warpPerspective" );            desc533.putDouble( idwarpPerspective, 0.000000 );            var idwarpPerspectiveOther = stringIDToTypeID( "warpPerspectiveOther" );            desc533.putDouble( idwarpPerspectiveOther, 0.000000 );            var idwarpRotate = stringIDToTypeID( "warpRotate" );            var idOrnt = charIDToTypeID( "Ornt" );            var idHrzn = charIDToTypeID( "Hrzn" );            desc533.putEnumerated( idwarpRotate, idOrnt, idHrzn );        var idwarp = stringIDToTypeID( "warp" );        desc532.putObject( idwarp, idwarp, desc533 );        var idTxtC = charIDToTypeID( "TxtC" );            var desc534 = new ActionDescriptor();            var idHrzn = charIDToTypeID( "Hrzn" );            var idPrc = charIDToTypeID( "#Prc" );            desc534.putUnitDouble( idHrzn, idPrc, x * 100 / app.activeDocument.width);            var idVrtc = charIDToTypeID( "Vrtc" );            var idPrc = charIDToTypeID( "#Prc" );            desc534.putUnitDouble( idVrtc, idPrc, y * 100 / app.activeDocument.height);        var idPnt = charIDToTypeID( "Pnt " );        desc532.putObject( idTxtC, idPnt, desc534 );        var idtextGridding = stringIDToTypeID( "textGridding" );        var idtextGridding = stringIDToTypeID( "textGridding" );        var idNone = charIDToTypeID( "None" );        desc532.putEnumerated( idtextGridding, idtextGridding, idNone );        var idOrnt = charIDToTypeID( "Ornt" );        var idOrnt = charIDToTypeID( "Ornt" );        var idHrzn = charIDToTypeID( "Hrzn" );        desc532.putEnumerated( idOrnt, idOrnt, idHrzn );        var idAntA = charIDToTypeID( "AntA" );        var idAnnt = charIDToTypeID( "Annt" );        var idantiAliasSharp = stringIDToTypeID( "antiAliasSharp" );        desc532.putEnumerated( idAntA, idAnnt, idantiAliasSharp );        //>>shape        var idtextShape = stringIDToTypeID( "textShape" );            var list97 = new ActionList();                var desc535 = new ActionDescriptor();                                roundRect(desc535,points)                var idTEXT = charIDToTypeID( "TEXT" );                var idTEXT = charIDToTypeID( "TEXT" );                var idbox = stringIDToTypeID( "box" );                desc535.putEnumerated( idTEXT, idTEXT, idbox );                var idOrnt = charIDToTypeID( "Ornt" );                var idOrnt = charIDToTypeID( "Ornt" );                var idHrzn = charIDToTypeID( "Hrzn" );                desc535.putEnumerated( idOrnt, idOrnt, idHrzn );                var idTrnf = charIDToTypeID( "Trnf" );                    var desc536 = new ActionDescriptor();                    var idxx = stringIDToTypeID( "xx" );                    desc536.putDouble( idxx, 1.000000 );                    var idxy = stringIDToTypeID( "xy" );                    desc536.putDouble( idxy, 0.000000 );                    var idyx = stringIDToTypeID( "yx" );                    desc536.putDouble( idyx, 0.000000 );                    var idyy = stringIDToTypeID( "yy" );                    desc536.putDouble( idyy, 1.000000 );                    var idtx = stringIDToTypeID( "tx" );                    desc536.putDouble( idtx, 0.000000 );                    var idty = stringIDToTypeID( "ty" );                    desc536.putDouble( idty, 0.000000 );                var idTrnf = charIDToTypeID( "Trnf" );                desc535.putObject( idTrnf, idTrnf, desc536 );                var idrowCount = stringIDToTypeID( "rowCount" );                desc535.putInteger( idrowCount, 1 );                var idcolumnCount = stringIDToTypeID( "columnCount" );                desc535.putInteger( idcolumnCount, 1 );                var idrowMajorOrder = stringIDToTypeID( "rowMajorOrder" );                desc535.putBoolean( idrowMajorOrder, true );                var idrowGutter = stringIDToTypeID( "rowGutter" );                var idPnt = charIDToTypeID( "#Pnt" );                desc535.putUnitDouble( idrowGutter, idPnt, 0.000000 );                var idcolumnGutter = stringIDToTypeID( "columnGutter" );                var idPnt = charIDToTypeID( "#Pnt" );                desc535.putUnitDouble( idcolumnGutter, idPnt, 0.000000 );                var idSpcn = charIDToTypeID( "Spcn" );                var idPnt = charIDToTypeID( "#Pnt" );                desc535.putUnitDouble( idSpcn, idPnt, 0.000000 );                var idframeBaselineAlignment = stringIDToTypeID( "frameBaselineAlignment" );                var idframeBaselineAlignment = stringIDToTypeID( "frameBaselineAlignment" );                var idalignByAscent = stringIDToTypeID( "alignByAscent" );                desc535.putEnumerated( idframeBaselineAlignment, idframeBaselineAlignment, idalignByAscent );                var idfirstBaselineMinimum = stringIDToTypeID( "firstBaselineMinimum" );                var idPnt = charIDToTypeID( "#Pnt" );                desc535.putUnitDouble( idfirstBaselineMinimum, idPnt, 0.000000 );                var idbounds = stringIDToTypeID( "bounds" );                    var desc537 = new ActionDescriptor();                    var idTop = charIDToTypeID( "Top " );                    desc537.putDouble( idTop, 0.000000 );                    var idLeft = charIDToTypeID( "Left" );                    desc537.putDouble( idLeft, 0.000000 );                    var idBtom = charIDToTypeID( "Btom" );                    desc537.putDouble( idBtom, height );                    var idRght = charIDToTypeID( "Rght" );                    desc537.putDouble( idRght, width );                var idRctn = charIDToTypeID( "Rctn" );                desc535.putObject( idbounds, idRctn, desc537 );            var idtextShape = stringIDToTypeID( "textShape" );            list97.putObject( idtextShape, desc535 );            //<<<shape        desc532.putList( idtextShape, list97 );        var idTxtt = charIDToTypeID( "Txtt" );            var list98 = new ActionList();                var desc538 = new ActionDescriptor();                var idFrom = charIDToTypeID( "From" );                desc538.putInteger( idFrom, 0 );                var idT = charIDToTypeID( "T   " );                desc538.putInteger( idT, 40000);                var idTxtS = charIDToTypeID( "TxtS" );                    var desc539 = new ActionDescriptor();                    var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );                    desc539.putBoolean( idstyleSheetHasParent, true );                    var idfontPostScriptName = stringIDToTypeID( "fontPostScriptName" );                    desc539.putString( idfontPostScriptName, """SimSun""" );                    var idFntN = charIDToTypeID( "FntN" );                    desc539.putString( idFntN, """SimSun""" );                    var idFntS = charIDToTypeID( "FntS" );                    desc539.putString( idFntS, """Regular""" );                    var idScrp = charIDToTypeID( "Scrp" );                    desc539.putInteger( idScrp, 25 );                    var idFntT = charIDToTypeID( "FntT" );                    desc539.putInteger( idFntT, 1 );                                        var idSz = charIDToTypeID( "Sz  " );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc539.putUnitDouble( idSz, idPnt, 10.000000);                     var idautoLeading = stringIDToTypeID( "autoLeading" );                    desc539.putBoolean( idautoLeading, false );                    var idLdng = charIDToTypeID( "Ldng" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc539.putUnitDouble( idLdng, idPnt, 17.500000 );                     var iddigitSet = stringIDToTypeID( "digitSet" );                    var iddigitSet = stringIDToTypeID( "digitSet" );                    var iddefaultDigits = stringIDToTypeID( "defaultDigits" );                    desc539.putEnumerated( iddigitSet, iddigitSet, iddefaultDigits );                    var idmarkYDistFromBaseline = stringIDToTypeID( "markYDistFromBaseline" );                    var idPnt = charIDToTypeID( "#Pnt" );                    desc539.putUnitDouble( idmarkYDistFromBaseline, idPnt, 24.000000 );                    var idClr = charIDToTypeID( "Clr " );                        var desc540 = new ActionDescriptor();                        var idCyn = charIDToTypeID( "Cyn " );                        desc540.putDouble( idCyn, 92.620000 );                        var idMgnt = charIDToTypeID( "Mgnt" );                        desc540.putDouble( idMgnt, 87.630000 );                        var idYlw = charIDToTypeID( "Ylw " );                        desc540.putDouble( idYlw, 88.600000 );                        var idBlck = charIDToTypeID( "Blck" );                        desc540.putDouble( idBlck, 79.530000 );                    var idCMYC = charIDToTypeID( "CMYC" );                    desc539.putObject( idClr, idCMYC, desc540 );                var idTxtS = charIDToTypeID( "TxtS" );                desc538.putObject( idTxtS, idTxtS, desc539 );            var idTxtt = charIDToTypeID( "Txtt" );            list98.putObject( idTxtt, desc538 );        desc532.putList( idTxtt, list98 );        var idparagraphStyleRange = stringIDToTypeID( "paragraphStyleRange" );            var list99 = new ActionList();                var desc541 = new ActionDescriptor();                var idFrom = charIDToTypeID( "From" );                desc541.putInteger( idFrom, 0 );                var idT = charIDToTypeID( "T   " );                desc541.putInteger( idT, 40000 );                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );                    var desc542 = new ActionDescriptor();                    var idstyleSheetHasParent = stringIDToTypeID( "styleSheetHasParent" );                    desc542.putBoolean( idstyleSheetHasParent, true );                    var idAlgn = charIDToTypeID( "Algn" );                    var idAlg = charIDToTypeID( "Alg " );                    var idjustifyLeft = stringIDToTypeID( "justifyLeft" );                    desc542.putEnumerated( idAlgn, idAlg, idjustifyLeft );                var idparagraphStyle = stringIDToTypeID( "paragraphStyle" );                desc541.putObject( idparagraphStyle, idparagraphStyle, desc542 );            var idparagraphStyleRange = stringIDToTypeID( "paragraphStyleRange" );            list99.putObject( idparagraphStyleRange, desc541 );        desc532.putList( idparagraphStyleRange, list99 );        var idkerningRange = stringIDToTypeID( "kerningRange" );            var list100 = new ActionList();        desc532.putList( idkerningRange, list100 );    var idTxLr = charIDToTypeID( "TxLr" );    desc531.putObject( idUsng, idTxLr, desc532 );executeAction( idMk, desc531, DialogModes.NO );return app.activeDocument.activeLayer;}function roundRect(shapeObj,points){    var idPath = charIDToTypeID( "Path" );    var desc8112 = new ActionDescriptor();    var idpathComponents = stringIDToTypeID( "pathComponents" );    var list273 = new ActionList();                            var desc8113 = new ActionDescriptor();                            var idshapeOperation = stringIDToTypeID( "shapeOperation" );                            var idshapeOperation = stringIDToTypeID( "shapeOperation" );                            var idxor = stringIDToTypeID( "xor" );                            desc8113.putEnumerated( idshapeOperation, idshapeOperation, idxor );                            var idSbpL = charIDToTypeID( "SbpL" );                                var list274 = new ActionList();                                    var desc8114 = new ActionDescriptor();                                    var idClsp = charIDToTypeID( "Clsp" );                                    desc8114.putBoolean( idClsp, true );                                    var idPts = charIDToTypeID( "Pts " );                                    desc8114.putList( idPts, makePath(points) );                                var idSbpl = charIDToTypeID( "Sbpl" );                                list274.putObject( idSbpl, desc8114 );                            desc8113.putList( idSbpL, list274 );                        var idPaCm = charIDToTypeID( "PaCm" );                        list273.putObject( idPaCm, desc8113 );                    desc8112.putList( idpathComponents, list273 );                var idpathClass = stringIDToTypeID( "pathClass" );                shapeObj.putObject( idPath, idpathClass, desc8112 );}function makePath(points){var originalRulerUnits = preferences.rulerUnits;preferences.rulerUnits = Units.PIXELS;    var returnList = new ActionList();    for(var i = 0 ; i < points.length; i++){        var desc8115 = new ActionDescriptor();        var idAnch = charIDToTypeID( "Anch" );        var desc8116 = new ActionDescriptor();        var idHrzn = charIDToTypeID( "Hrzn" );        var idRlt = charIDToTypeID( "#Rlt" );        //var px = points[i][1].as("pt")        //points[i][1].convert("pt")        desc8116.putUnitDouble( idHrzn, idRlt, points[i] [0]);        var idVrtc = charIDToTypeID( "Vrtc" );        var idRlt = charIDToTypeID( "#Rlt" );        desc8116.putUnitDouble( idVrtc, idRlt, points[i][1] .as ("pt")) ;        var idPnt = charIDToTypeID( "Pnt " );        desc8115.putObject( idAnch, idPnt, desc8116 );           if(points[i].length > 2){        var idFwd = charIDToTypeID( "Fwd " );        var desc229 = new ActionDescriptor();        var idHrzn = charIDToTypeID( "Hrzn" );        var idRlt = charIDToTypeID( "#Rlt" );        desc229.putUnitDouble( idHrzn, idRlt, points[i] [4] );        var idVrtc = charIDToTypeID( "Vrtc" );        var idRlt = charIDToTypeID( "#Rlt" );        desc229.putUnitDouble( idVrtc, idRlt, points[i] [5] .as ("pt"));        var idPnt = charIDToTypeID( "Pnt " );        desc8115.putObject( idFwd, idPnt, desc229 );        var idBwd = charIDToTypeID( "Bwd " );        var desc230 = new ActionDescriptor();        var idHrzn = charIDToTypeID( "Hrzn" );        var idRlt = charIDToTypeID( "#Rlt" );        desc230.putUnitDouble( idHrzn, idRlt, points[i] [2] );        var idVrtc = charIDToTypeID( "Vrtc" );        var idRlt = charIDToTypeID( "#Rlt" );        desc230.putUnitDouble( idVrtc, idRlt, points[i] [3] .as ("pt" ));        var idPnt = charIDToTypeID( "Pnt " );        desc8115.putObject( idBwd, idPnt, desc230 );        }        var idSmoo = charIDToTypeID( "Smoo" );        desc8115.putBoolean( idSmoo, true );        var idPthp = charIDToTypeID( "Pthp" );        returnList.putObject( idPthp, desc8115 );    }preferences.rulerUnits = originalRulerUnits    return returnList}