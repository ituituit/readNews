Exec = function(app){    this.app = app;         // A File object to the application};    Exec.prototype.block = function(semaphore, timeout) {      if (timeout) {        var parts = 10;            // wait for 1/10 of the timeout in a loop        timeout = timeout / parts;        while (!semaphore.exists) {          //$.sleep(timeout);          //parts--;        }        if (!parts && !semaphore.exists) {          throw "Timeout exceeded for program " + this.app.name;        }      }    };    Exec.prototype.executeBlock = function(timeout) {      var semaphore = new File(this.app.fsName + ".sem")      this.app.execute()      try {        this.block(semaphore, timeout);      } finally {        semaphore.remove();      }    };﻿//collegeInfo("libXML.xml")function deleteLayer(name){    objIndex(name)var idDlt = charIDToTypeID( "Dlt " );    var desc4631 = new ActionDescriptor();    var idnull = charIDToTypeID( "null" );        var ref1599 = new ActionReference();        var idLyr = charIDToTypeID( "Lyr " );        var idOrdn = charIDToTypeID( "Ordn" );        var idTrgt = charIDToTypeID( "Trgt" );        ref1599.putEnumerated( idLyr, idOrdn, idTrgt );    desc4631.putReference( idnull, ref1599 );executeAction( idDlt, desc4631, DialogModes.NO );}function SelectArea(){}SelectArea.prototype.readAI = function(path){var originalRulerUnits = preferences.rulerUnits;preferences.rulerUnits = Units.POINTS;imageHeight= app.activeDocument.heightvar prefs = new File(path);prefs.open("r"); var strs = prefs.read()var begin = "%Adobe_Photoshop_Path_Begin:"var end = "%Adobe_Photoshop_Path_End"strs = strs.substring (strs.search (begin), strs.search (end));arrs = strs.split ("\n")var inds = new Array()for(var i = 0; i < arrs.length; i++){    if(arrs[i].search("1 XR") == 0){        for(var j =i; j < arrs.length; j++){            if(arrs[j].search("""n""") == 0){                inds.push([i+1,j])                i = j+1                break;            }        }    }}var points = new Array()for(var i = 0; i < inds.length; i+=1){for(var j = inds[i][0]; j < inds[i][1]; j++){            newArr = arrs[j].split(" ")            nexArr = arrs[inds[i][0]].split(" ")            if(j+1 < inds[i][1]){                nexArr = arrs[j+1].split(" ")            }            var last = newArr.length - 1            curx = newArr[last - 2]            cury = imageHeight - newArr[last - 1]            bakx =newArr[last - 4]            baky = imageHeight - newArr[last - 3]            forwx = nexArr[0]            forwy = imageHeight - nexArr[1]            if(last != 2 && newArr[last].search("c") == 0){                points.push([curx,cury,bakx,baky, forwx,forwy])             }else{                points.push([curx,cury])             }}}preferences.rulerUnits = originalRulerUnitsreturn points}SelectArea.prototype.outputPath = function(path){    // =======================================================var idExpr = charIDToTypeID( "Expr" );    var desc7 = new ActionDescriptor();    var idUsng = charIDToTypeID( "Usng" );        var desc8 = new ActionDescriptor();        var idIn = charIDToTypeID( "In  " );        desc8.putPath( idIn, new File( path) );        var idPthS = charIDToTypeID( "PthS" );        var idPtSl = charIDToTypeID( "PtSl" );        var idAllP = charIDToTypeID( "AllP" );        desc8.putEnumerated( idPthS, idPtSl, idAllP );    var idIllustratorExportThisstringmakesmeunique= stringIDToTypeID( "Illustrator Export.  This string makes me unique!" );    desc7.putObject( idUsng, idIllustratorExportThisstringmakesmeunique, desc8 );executeAction( idExpr, desc7, DialogModes.NO );}SelectArea.prototype.applyPath = function(objNames,contentBound){    for(var i = 0; i < objNames.length; i++){        objIndex(objNames[i]);        this.load()        this.expand()        this.makePath(objNames[i])    }    selectBound(contentBound)    this.makePath("newTempPath")    this.buildArea(objNames,"newTempPath")    for(var i =0; i < objNames.length; i++){        //this.deletePath(objNames[i]);//buildArea invoked eraseAndDeletePath for cc only    }    this.deletePath("newTempPath")    this.load()      deleteLayer("newTempLayer")    this.makePath("newTempPath")    this.buildArea("","newTempPath")    deleteLayer("newTempLayer")    this.selectPath("newTempPath")}SelectArea.prototype.buildArea = function(objNames,contentName){    newLayer = this.fillPath(contentName)    for(var i = 0; i < objNames.length; i++){        this.eraseAndDeletePath(objNames[i],newLayer)    }}SelectArea.prototype.expand = function(){    // =======================================================var idExpn = charIDToTypeID( "Expn" );    var desc4255 = new ActionDescriptor();    var idBy = charIDToTypeID( "By  " );    var idPxl = charIDToTypeID( "#Pxl" );    desc4255.putUnitDouble( idBy, idPxl, 33.000000 );executeAction( idExpn, desc4255, DialogModes.NO );}SelectArea.prototype.load = function(){    // =======================================================var idsetd = charIDToTypeID( "setd" );    var desc4248 = new ActionDescriptor();    var idnull = charIDToTypeID( "null" );        var ref1327 = new ActionReference();        var idChnl = charIDToTypeID( "Chnl" );        var idfsel = charIDToTypeID( "fsel" );        ref1327.putProperty( idChnl, idfsel );    desc4248.putReference( idnull, ref1327 );    var idT = charIDToTypeID( "T   " );        var ref1328 = new ActionReference();        var idChnl = charIDToTypeID( "Chnl" );        var idChnl = charIDToTypeID( "Chnl" );        var idTrsp = charIDToTypeID( "Trsp" );        ref1328.putEnumerated( idChnl, idChnl, idTrsp );    desc4248.putReference( idT, ref1328 );executeAction( idsetd, desc4248, DialogModes.NO );}SelectArea.prototype.selectPath = function(name){        // =======================================================var idslct = charIDToTypeID( "slct" );    var desc4261 = new ActionDescriptor();    var idnull = charIDToTypeID( "null" );        var ref1342 = new ActionReference();        var idPath = charIDToTypeID( "Path" );        ref1342.putName( idPath, name );    desc4261.putReference( idnull, ref1342 );executeAction( idslct, desc4261, DialogModes.NO );}SelectArea.prototype.deletePath = function(name){this.selectPath(name)    // =======================================================var idDlt = charIDToTypeID( "Dlt " );    var desc4260 = new ActionDescriptor();    var idnull = charIDToTypeID( "null" );        var ref1341 = new ActionReference();        var idPath = charIDToTypeID( "Path" );        var idOrdn = charIDToTypeID( "Ordn" );        var idTrgt = charIDToTypeID( "Trgt" );        ref1341.putEnumerated( idPath, idOrdn, idTrgt );    desc4260.putReference( idnull, ref1341 );executeAction( idDlt, desc4260, DialogModes.NO );}SelectArea.prototype.makePath = function(name){var idMk = charIDToTypeID( "Mk  " );    var desc4256 = new ActionDescriptor();    var idnull = charIDToTypeID( "null" );        var ref1335 = new ActionReference();        var idPath = charIDToTypeID( "Path" );        ref1335.putClass( idPath );    desc4256.putReference( idnull, ref1335 );    var idFrom = charIDToTypeID( "From" );        var ref1336 = new ActionReference();        var idcsel = charIDToTypeID( "csel" );        var idfsel = charIDToTypeID( "fsel" );        ref1336.putProperty( idcsel, idfsel );    desc4256.putReference( idFrom, ref1336 );    var idTlrn = charIDToTypeID( "Tlrn" );    var idPxl = charIDToTypeID( "#Pxl" );    desc4256.putUnitDouble( idTlrn, idPxl, 2.000000 );executeAction( idMk, desc4256, DialogModes.NO );// =======================================================var idMk = charIDToTypeID( "Mk  " );    var desc4257 = new ActionDescriptor();    var idnull = charIDToTypeID( "null" );        var ref1337 = new ActionReference();        var idPath = charIDToTypeID( "Path" );        ref1337.putClass( idPath );    desc4257.putReference( idnull, ref1337 );    var idFrom = charIDToTypeID( "From" );        var ref1338 = new ActionReference();        var idPath = charIDToTypeID( "Path" );        var idWrPt = charIDToTypeID( "WrPt" );        ref1338.putProperty( idPath, idWrPt );    desc4257.putReference( idFrom, ref1338 );executeAction( idMk, desc4257, DialogModes.NO );// =======================================================var idRnm = charIDToTypeID( "Rnm " );    var desc4259 = new ActionDescriptor();    var idnull = charIDToTypeID( "null" );        var ref1340 = new ActionReference();        var idPath = charIDToTypeID( "Path" );        var idOrdn = charIDToTypeID( "Ordn" );        var idTrgt = charIDToTypeID( "Trgt" );        ref1340.putEnumerated( idPath, idOrdn, idTrgt );    desc4259.putReference( idnull, ref1340 );    var idT = charIDToTypeID( "T   " );    desc4259.putString( idT, name );executeAction( idRnm, desc4259, DialogModes.NO );}SelectArea.prototype.newEmptyLayer = function(name){// =======================================================var idMk = charIDToTypeID( "Mk  " );    var desc4361 = new ActionDescriptor();    var idnull = charIDToTypeID( "null" );        var ref1443 = new ActionReference();        var idLyr = charIDToTypeID( "Lyr " );        ref1443.putClass( idLyr );    desc4361.putReference( idnull, ref1443 );executeAction( idMk, desc4361, DialogModes.NO );// =======================================================var idsetd = charIDToTypeID( "setd" );    var desc4367 = new ActionDescriptor();    var idnull = charIDToTypeID( "null" );        var ref1449 = new ActionReference();        var idLyr = charIDToTypeID( "Lyr " );        var idOrdn = charIDToTypeID( "Ordn" );        var idTrgt = charIDToTypeID( "Trgt" );        ref1449.putEnumerated( idLyr, idOrdn, idTrgt );    desc4367.putReference( idnull, ref1449 );    var idT = charIDToTypeID( "T   " );        var desc4368 = new ActionDescriptor();        var idNm = charIDToTypeID( "Nm  " );        desc4368.putString( idNm, name );    var idLyr = charIDToTypeID( "Lyr " );    desc4367.putObject( idT, idLyr, desc4368 );executeAction( idsetd, desc4367, DialogModes.NO );return app.activeDocument.activeLayer}    SelectArea.prototype.fillPath =  function(pathName){    var newObj = this.newEmptyLayer("newTempLayer")    this.selectPath(pathName)// =======================================================var idFl = charIDToTypeID( "Fl  " );    var desc4277 = new ActionDescriptor();    var idnull = charIDToTypeID( "null" );        var ref1357 = new ActionReference();        var idPath = charIDToTypeID( "Path" );        var idOrdn = charIDToTypeID( "Ordn" );        var idTrgt = charIDToTypeID( "Trgt" );        ref1357.putEnumerated( idPath, idOrdn, idTrgt );    desc4277.putReference( idnull, ref1357 );    var idWhPt = charIDToTypeID( "WhPt" );    desc4277.putBoolean( idWhPt, true );executeAction( idFl, desc4277, DialogModes.NO );return newObj}SelectArea.prototype.selectPathArea = function(pathName){this.selectPath(pathName)// =======================================================var idsetd = charIDToTypeID( "setd" );    var desc4391 = new ActionDescriptor();    var idnull = charIDToTypeID( "null" );        var ref1478 = new ActionReference();        var idChnl = charIDToTypeID( "Chnl" );        var idfsel = charIDToTypeID( "fsel" );        ref1478.putProperty( idChnl, idfsel );    desc4391.putReference( idnull, ref1478 );    var idT = charIDToTypeID( "T   " );        var ref1479 = new ActionReference();        var idPath = charIDToTypeID( "Path" );        var idOrdn = charIDToTypeID( "Ordn" );        var idTrgt = charIDToTypeID( "Trgt" );        ref1479.putEnumerated( idPath, idOrdn, idTrgt );    desc4391.putReference( idT, ref1479 );    var idVrsn = charIDToTypeID( "Vrsn" );    desc4391.putInteger( idVrsn, 1 );    var idvectorMaskParams = stringIDToTypeID( "vectorMaskParams" );    desc4391.putBoolean( idvectorMaskParams, true );executeAction( idsetd, desc4391, DialogModes.NO );}SelectArea.prototype.eraseAndDeletePath =  function(pathName,destLayer){this.selectPathArea(pathName)app.activeDocument.activeLayer  = destLayer// =======================================================var idDlt = charIDToTypeID( "Dlt " );executeAction( idDlt, undefined, DialogModes.NO );// =======================================================var idDlt = charIDToTypeID( "Dlt " );executeAction( idDlt, undefined, DialogModes.NO );}//>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>utils>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>function pushImage(filePath){// =======================================================var idPlc = charIDToTypeID( "Plc " );    var desc2219 = new ActionDescriptor();    var idnull = charIDToTypeID( "null" );    desc2219.putPath( idnull, new File(filePath));    var idFTcs = charIDToTypeID( "FTcs" );    var idQCSt = charIDToTypeID( "QCSt" );    var idQcsa = charIDToTypeID( "Qcsa" );    desc2219.putEnumerated( idFTcs, idQCSt, idQcsa );    var idOfst = charIDToTypeID( "Ofst" );        var desc2220 = new ActionDescriptor();        var idHrzn = charIDToTypeID( "Hrzn" );        var idRlt = charIDToTypeID( "#Pxl" );        desc2220.putUnitDouble( idHrzn, idRlt, 0.000000 );        var idVrtc = charIDToTypeID( "Vrtc" );        var idRlt = charIDToTypeID( "#Pxl" );        desc2220.putUnitDouble( idVrtc, idRlt, 0.000000 );    var idOfst = charIDToTypeID( "Ofst" );    desc2219.putObject( idOfst, idOfst, desc2220 );executeAction( idPlc, desc2219, DialogModes.NO );return app.activeDocument.activeLayer;} function covertPercent(obj_width){    _image_width = app.activeDocument.width    return _image_width/obj_width * 100 / _image_width}function moveTo(obj,x,y){    bound = obj.bounds    obj.translate(-bound[0] + x, -bound[1] + y)  }function resize(obj,size){    bound = obj.bounds    if(bound[2] == 0 || bound[3] == 0){        return;    }    var width = bound[2] - bound[0];    var height=  bound[3] - bound[1];    obj.resize(covertPercent(width)* size[0],covertPercent(height)* size[1],AnchorPosition.TOPLEFT);} function nameFromFullName(arrString){    arr = arrString.split("/")    return arr[arr.length - 1]}function objIndex(arrString){    if(arrString.indexOf("/") == 0){        arrString = arrString.substring (1, arrString.length)    }    arr = arrString.split("/")    select(arr[0])    var objnew = app.activeDocument.activeLayer    for(var i = 1; i < arr.length; i++){        objnew = objnew.layers.getByName (arr[i])    }    app.activeDocument.activeLayer = objnew    return objnew}function select(name){    var idslct = charIDToTypeID( "slct" );    var desc60 = new ActionDescriptor();    var idnull = charIDToTypeID( "null" );    var ref36 = new ActionReference();    var idLyr = charIDToTypeID( "Lyr " );    ref36.putName( idLyr, name );    desc60.putReference( idnull, ref36 );    var idMkVs = charIDToTypeID( "MkVs" );    desc60.putBoolean( idMkVs, false );    executeAction( idslct, desc60, DialogModes.NO );} function selectBound(arrs){    left = eval(arrs[0])    top = eval(arrs[1])    right = eval(arrs[2])    bottom = eval(arrs[3])var idsetd = charIDToTypeID( "setd" );    var desc86 = new ActionDescriptor();    var idnull = charIDToTypeID( "null" );        var ref76 = new ActionReference();        var idChnl = charIDToTypeID( "Chnl" );        var idfsel = charIDToTypeID( "fsel" );        ref76.putProperty( idChnl, idfsel );    desc86.putReference( idnull, ref76 );    var idT = charIDToTypeID( "T   " );        var desc87 = new ActionDescriptor();        var idTop = charIDToTypeID( "Top " );        var idRlt = charIDToTypeID( "#Pxl" );        desc87.putUnitDouble( idTop, idRlt, top );        var idLeft = charIDToTypeID( "Left" );        var idRlt = charIDToTypeID( "#Pxl" );        desc87.putUnitDouble( idLeft, idRlt, left );        var idBtom = charIDToTypeID( "Btom" );        var idRlt = charIDToTypeID( "#Pxl" );        desc87.putUnitDouble( idBtom, idRlt, bottom );        var idRght = charIDToTypeID( "Rght" );        var idRlt = charIDToTypeID( "#Pxl" );        desc87.putUnitDouble( idRght, idRlt, right );    var idRctn = charIDToTypeID( "Rctn" );    desc86.putObject( idT, idRctn, desc87 );executeAction( idsetd, desc86, DialogModes.NO );}function applyMask(){// ==============================栅格化图层=========================var idrasterizeLayer = stringIDToTypeID( "rasterizeLayer" );    var desc5 = new ActionDescriptor();    var idnull = charIDToTypeID( "null" );        var ref2 = new ActionReference();        var idLyr = charIDToTypeID( "Lyr " );        var idOrdn = charIDToTypeID( "Ordn" );        var idTrgt = charIDToTypeID( "Trgt" );        ref2.putEnumerated( idLyr, idOrdn, idTrgt );    desc5.putReference( idnull, ref2 );executeAction( idrasterizeLayer, desc5, DialogModes.NO );// =======================================================var idDlt = charIDToTypeID( "Dlt " );    var desc3487 = new ActionDescriptor();    var idnull = charIDToTypeID( "null" );        var ref704 = new ActionReference();        var idChnl = charIDToTypeID( "Chnl" );        var idChnl = charIDToTypeID( "Chnl" );        var idMsk = charIDToTypeID( "Msk " );        ref704.putEnumerated( idChnl, idChnl, idMsk );    desc3487.putReference( idnull, ref704 );    var idAply = charIDToTypeID( "Aply" );    desc3487.putBoolean( idAply, true );executeAction( idDlt, desc3487, DialogModes.NO );// ==============================新建智能对象=========================var idnewPlacedLayer = stringIDToTypeID( "newPlacedLayer" );executeAction( idnewPlacedLayer, undefined, DialogModes.NO );}function hasChannelMaskByName(){      var ref = new ActionReference();      ref.putEnumerated( app.charIDToTypeID( 'Lyr ' ), app.charIDToTypeID( 'Ordn' ), app.charIDToTypeID( 'Trgt' ) );    return executeActionGet(ref).getBoolean( stringIDToTypeID( 'hasUserMask' ) );  }function addMask(){    if(hasChannelMaskByName()){        // =======================================================var idslct = charIDToTypeID( "slct" );    var desc10 = new ActionDescriptor();    var idnull = charIDToTypeID( "null" );        var ref10 = new ActionReference();        var idChnl = charIDToTypeID( "Chnl" );        var idChnl = charIDToTypeID( "Chnl" );        var idMsk = charIDToTypeID( "Msk " );        ref10.putEnumerated( idChnl, idChnl, idMsk );    desc10.putReference( idnull, ref10 );    var idMkVs = charIDToTypeID( "MkVs" );    desc10.putBoolean( idMkVs, false );executeAction( idslct, desc10, DialogModes.NO );        // =======================================================var idDlt = charIDToTypeID( "Dlt " );    var desc6 = new ActionDescriptor();    var idnull = charIDToTypeID( "null" );        var ref6 = new ActionReference();        var idChnl = charIDToTypeID( "Chnl" );        var idOrdn = charIDToTypeID( "Ordn" );        var idTrgt = charIDToTypeID( "Trgt" );        ref6.putEnumerated( idChnl, idOrdn, idTrgt );    desc6.putReference( idnull, ref6 );executeAction( idDlt, desc6, DialogModes.NO );      }var idMk = charIDToTypeID( "Mk  " );    var desc147 = new ActionDescriptor();    var idNw = charIDToTypeID( "Nw  " );    var idChnl = charIDToTypeID( "Chnl" );    desc147.putClass( idNw, idChnl );    var idAt = charIDToTypeID( "At  " );        var ref127 = new ActionReference();        var idChnl = charIDToTypeID( "Chnl" );        var idChnl = charIDToTypeID( "Chnl" );        var idMsk = charIDToTypeID( "Msk " );        ref127.putEnumerated( idChnl, idChnl, idMsk );    desc147.putReference( idAt, ref127 );    var idUsng = charIDToTypeID( "Usng" );    var idUsrM = charIDToTypeID( "UsrM" );    var idRvlS = charIDToTypeID( "RvlS" );    desc147.putEnumerated( idUsng, idUsrM, idRvlS );executeAction( idMk, desc147, DialogModes.NO );}function helloworld(arrs){    return arrs}function bounds(parentname,ind){    //returnArr = new Array()    obj = objSelect(parentname)    targetObj = obj.layers.getName("content");    return targetObj.bounds;}function dumplicate(params){    group = params[0];    changedText = "dumplicated_object"    if(params.length == 2){        changedText = params[1];    }    act = objIndex(group)    newObj = act.duplicate ( app.activeDocument );     newObj.move(act,ElementPlacement.PLACEBEFORE)    newObj.name = changedText;    app.activeDocument.activeLayer = newObj}function getFilePath(){// returns path as a string if exists, undefined if not      var ref = new ActionReference();      ref.putEnumerated( charIDToTypeID("Dcmn"), charIDToTypeID("Ordn"), charIDToTypeID("Trgt") );      var desc = executeActionGet(ref);      if(desc.hasKey(stringIDToTypeID('fileReference'))) return decodeURI(desc.getPath(stringIDToTypeID('fileReference')));  };  function dumplicateExtendPsd(params){    fileName = params[0];    destName = params[1];    if(destName.length == 0){        destName = getFilePath();     }    group = params[2];    changedText = "dumplicated_object"    if(params.length == 4){        changedText = params[3];    }    var fileRef = File(destName)     var dest = app.open(fileRef)        var fileRef = File(fileName)     var docRef = app.open(fileRef)     if(group.length == 0){        act = app.activeDocument.layers[0]          }else{        act = objIndex(group)    }    act.duplicate ( dest );    app.activeDocument = dest    newObj = app.activeDocument.activeLayer    newObj.name = changedText;    newObj.move(dest.layers[0],ElementPlacement.PLACEBEFORE)   //     app.activeDocument.activeLayer = newObj}function moveLayerInto(params){   dest = params[0]    app.activeDocument.activeLayer .move(objIndex(dest).layers[0],ElementPlacement.PLACEBEFORE)}//function changeText(params){//    objName = params[0]; //   content = params[1]; //   objIndex(objName).textItem.contents = content//}function changeName(params){    objName = params[0];    objNameChanged = params[1]    objIndex(objName).name = objNameChanged}    function bounds(arrs){    returnArr = new Array()    for(var i = 0; i < arrs.length; i++){        returnArr.push (objIndex(arrs[i]).bounds)    }    return returnArr}_setBoundsEnlargeType = 1 //0small 1large 2shapeChangefunction setBoundsEnlargeType(params){    _setBoundsEnlargeType = params[0]}function setBounds(params){    obj = objIndex(params[0])    x = eval(params[1])    y = eval(params[2])    r = eval(params[3])    b = eval(params[4])     if(_setBoundsEnlargeType != 2){           objBounds = obj.bounds        objheight = objBounds[3] - objBounds[1]        objWidth = objBounds[2] - objBounds[0]                boundWidth = r - x        boundHeight = b - y        widthLarger = false;        if(boundWidth > boundHeight){            widthLarger = true;         }        if(_setBoundsEnlargeType == 1){            if(widthLarger){                b = objheight * ((boundWidth)/objWidth) + y            }else{                r = objWidth * ((boundHeight)/objheight) + x            }        }else{            if(widthLarger){                r = objWidth * ((boundHeight)/objheight) + x            }else{                b = objheight * ((boundWidth)/objWidth) + y            }        }        objWidth = r - x        objHeight = b - y        cenx = (boundWidth - objWidth)/2        ceny = (boundHeight - objHeight)/2        x += cenx        r += cenx        b += ceny        y += ceny    }    if(r != x && b!=y){        resize(obj,[r - x,b - y])    }    moveTo(obj, x,y)}function namesInLayer(params){    layerName = params[0]    returnArr = new Array()    obj = objIndex(layerName)    if(obj.layers == null){        returnArr.push(obj.name)        return returnArr    }    for(var i = 0; i < obj.layers.length; i++){        returnArr.push(obj.layers[i].name)    }    return returnArr;}function addImage(params){    if(params[0].indexOf(".psd") == -1){        newObj = pushImage(params[0])        newObj.name = params[1]    }else{        dumplicateExtendPsd([params[0],"","",params[1]])        var prefs = new File(params[0]);        prefs.open();         var dest = app.open(prefs)            dest.close()    }}//collegeInfo("libXML.xml")function collegeInfo(name){grabInformationsToXML(_scriptPath + name)}function makePathSelectJSX(params){    var sa = new SelectArea()    contentBound = new Array()    contentBound.push( eval(params[0]))    contentBound.push( eval(params[1]))    contentBound.push( eval(params[2]))    contentBound.push( eval(params[3]))    contentBound[1] += 5    contentBound[3] += 500    textObjName = params[4]    objIndex(textObjName)    textObj = app.activeDocument.activeLayer    text = textObj.textItem    objNames = new Array()    for(var i = 5; i<params.length; i++){        objNames.push(params[i])    }    sa.applyPath(objNames,contentBound)    sa.outputPath (_scriptPath + "newPath.ai" );    points = sa.readAI (_scriptPath + "newPath.ai" );    tempText = kaiti("tempText",points)    sa.deletePath("newTempPath")    deleteLayer(textObjName)    tempText.name = nameFromFullName(textObjName)    objIndex(textObjName)}function makePathSelectArea(params){    var sa = new SelectArea()    contentBound = new Array()    contentBound.push( eval(params[0]))    contentBound.push( eval(params[1]))    contentBound.push( eval(params[2]))    contentBound.push( eval(params[3]))    contentBound[1] += 5    contentBound[3] += 500    textObjName = params[4]    objIndex(textObjName)    textObj = app.activeDocument.activeLayer    text = textObj.textItem    objNames = new Array()    for(var i = 5; i<params.length; i++){        objNames.push(params[i])    }    sa.applyPath(objNames,contentBound)        sa.outputPath (_scriptPath + "newPath.ai" );    points = sa.readAI (_scriptPath + "newPath.ai" );    tempText = kaiti("tempText",points)    sa.deletePath("newTempPath")    //setText(["tempText",text])    objIndex("tempText")    active= app.activeDocument.activeLayer    app.activeDocument.activeLayer .move(objIndex(textObjName),ElementPlacement.PLACEBEFORE)    objIndex("tempText")    setContent(active,textObj.textItem.contents)    copyTextItem(textObj.textItem,active.textItem,0,app.activeDocument.activeLayer.textItem.contents.length)        deleteLayer(textObjName)    tempText.name = nameFromFullName(textObjName)}function setContent(dest,srcText){    dest.textItem.contents = srcText    tFont = dest.textItem.font;    fontType("simsun");    fontType(tFont);    idHard()}function copyTextItem(from,to,startInd,endInd){leadingVal = 0if(!from.useAutoLeading){    leadingVal = from.leading}//alert(from.justification)rgb = from.color.rgbsetFormatting(startInd, endInd, from.font, """Regular""", from.size, new Array(rgb.red, rgb.green, rgb.blue),from.direction,from.firstLineIndent,leadingVal,from.justification,0,from.baselineShift);//from.color?to.color = from.color:""//textDirection(from.direction)//fontType(from.font)//fontSize(from.size)//textJustify(from.justification)//firstLineIndent(from.size * 2)//if(from.useAutoLeading){//    leading(from.useAutoLeading,0)//}else{ //   leading(from.useAutoLeading,from.leading)//}//setContent(to, from.contents)/*to.alternateLigatures = from.alternateLigaturesto.antiAliasMethod = from.antiAliasMethodto.autoKerning = from.autoKerningto.baselineShift = from.baselineShiftto.capitalization = from.capitalizationto.desiredGlyphScaling = from.desiredGlyphScalingto.desiredLetterScaling = from.desiredLetterScalingto.desiredWordScaling = from.desiredWordScalingto.fauxBold = from.fauxBoldto.fauxItalic = from.fauxItalicto.firstLineIndent = from.firstLineIndentto.hangingPunctuation = from.hangingPunctuationto.height = from.heightto.horizontalScale = from.horizontalScaleto.hyphenateAfterFirst = from.hyphenateAfterFirst to.hyphenateBeforeLast = from.hyphenateBeforeLast to.hyphenateCapitalWords = from.hyphenateCapitalWords to.hyphenateWordsLongerThan = from.hyphenateWordsLongerThan to.hyphenation = from.hyphenation to.hyphenationZone = from.hyphenationZone to.hyphenLimit = from.hyphenLimit to.kind = from.kind to.language = from.language// from.leading?to.leading = from.leading:"" to.leftIndent = from.leftIndent to.ligatures = from.ligatures to.maximumGlyphScaling = from.maximumGlyphScaling to.maximumLetterScaling = from.maximumLetterScaling to.maximumWordScaling = from.maximumWordScaling to.minimumGlyphScaling = from.minimumGlyphScalingto.minimumLetterScaling = from.minimumLetterScaling to.minimumWordScaling = from.minimumWordScaling to.noBreak = from.noBreak// to.oldStyle = from.oldStyle to.parent = from.parent to.position = from.position to.rightIndent = from.rightIndent to.spaceAfter = from.spaceAfter to.strikeThru = from.strikeThruto.textComposer = from.textComposerto.tracking = from.trackingto.typename = from.typenameto.underline = from.underlineto.verticalScale = from.verticalScaleto.warpBend = from.warpBendto.warpDirection = from.warpDirectionto.warpHorizontalDistortion = from.warpHorizontalDistortionto.warpStyle = from.warpStyleto.width = from.width*/}function setText(params){    var textName = params[0]    text = params[1]        setContent (objIndex(textName), text)}function objIndexJSX(params){    objIndex(params[0])}function deleteLayerJSX(params){    deleteLayer(params[0])}function mergeLayerJSX(params){    objIndex(params[0])// =======================================================var idMrgtwo = charIDToTypeID( "Mrg2" );executeAction( idMrgtwo, undefined, DialogModes.NO );}//$.write("\"" + genFullName(app.activeDocument.activeLayer) + "\"")//manuPath("/_rect_2/景区快讯0/正文组1/image0_foreign")function manPath(){    var parent  =app.activeDocument.activeLayer.parent    layers = parent.layers    var theName = new Array()    for (var i = 0; i < layers.length; i++) {        if(layers[i].name.search("foreign") != -1){            theName.push(genFullName(layers[i]))        }    }    if(theName){        manuPath(theName)    }}function createPath(params){ //   for(int i = 0; i < points.length;i++){        params[0] = new UnitValue(params[0],"px")        params[1] = new UnitValue(params[1],"px")        params[2]  = new UnitValue(params[2],"px")        params[3]  = new UnitValue(params[3],"px")       // alert(app.activeDocument.baseUnit)        UnitValue.baseUnit =  UnitValue (1/72, "in");         params[0] .convert("pt")        params[2] .convert("pt")        points = [[params[0],params[1]],[params[2],params[3]]]        tempText = makePath(points)        textObj = app.activeDocument.activeLayer        textObj.name  =  params[4] //   }}function manuPath(masklayer){    textObj = app.activeDocument.activeLayer    array = [textObj.bounds[0],textObj.bounds[1],textObj.bounds[2],textObj.bounds[3],genFullName(textObj)]    for(var i = 0; i < masklayer.length; i++){            array.push(masklayer[i])    }    makePathSelectJSX(array)}function printJSX(){var idprintOneCopy = stringIDToTypeID( "printOneCopy" );executeAction( idprintOneCopy, undefined, DialogModes.NO );}function hide(params){objIndex(params[0]);var idHd = charIDToTypeID( "Hd  " );    var desc1173 = new ActionDescriptor();    var idnull = charIDToTypeID( "null" );        var list356 = new ActionList();            var ref495 = new ActionReference();            var idLyr = charIDToTypeID( "Lyr " );            var idOrdn = charIDToTypeID( "Ordn" );            var idTrgt = charIDToTypeID( "Trgt" );            ref495.putEnumerated( idLyr, idOrdn, idTrgt );        list356.putReference( ref495 );    desc1173.putList( idnull, list356 );executeAction( idHd, desc1173, DialogModes.NO );}function show(params){objIndex(params[0]);// =======================================================var idShw = charIDToTypeID( "Shw " );    var desc1174 = new ActionDescriptor();    var idnull = charIDToTypeID( "null" );        var list357 = new ActionList();            var ref496 = new ActionReference();            var idLyr = charIDToTypeID( "Lyr " );            var idOrdn = charIDToTypeID( "Ordn" );            var idTrgt = charIDToTypeID( "Trgt" );            ref496.putEnumerated( idLyr, idOrdn, idTrgt );        list357.putReference( ref496 );    desc1174.putList( idnull, list357 );executeAction( idShw, desc1174, DialogModes.NO );}function openDoc(params){var fileRef = File(params[0])var dest = app.open(fileRef)    fileRef.close();}function closeDoc(){// =======================================================var idCls = charIDToTypeID( "Cls " );    var desc1177 = new ActionDescriptor();    var idSvng = charIDToTypeID( "Svng" );    var idYsN = charIDToTypeID( "YsN " );    var idN = charIDToTypeID( "N   " );    desc1177.putEnumerated( idSvng, idYsN, idN );executeAction( idCls, desc1177, DialogModes.NO );}function setContentTypes(params){    active= params[0]    array = string2Array(params[1])    for(var i = 0; i < array.length; i++){       s = array[i][0]       e = array[i][1]       type = array[i][2]       typeItem = objIndex(type)       objIndex(params[0])       copyTextItem(typeItem.textItem,active.textItem,s,e)        }}function save(params){    var fileRef = File(params[0])    // =======================================================    var idsave = charIDToTypeID( "save" );    var desc41 = new ActionDescriptor();    var idIn = charIDToTypeID( "In  " );    desc41.putPath( idIn, new File(fileRef) );    var idDocI = charIDToTypeID( "DocI" );    desc41.putInteger( idDocI, 346 );    var idsaveStage = stringIDToTypeID( "saveStage" );    var idsaveStageType = stringIDToTypeID( "saveStageType" );    var idsaveSucceeded = stringIDToTypeID( "saveSucceeded" );    desc41.putEnumerated( idsaveStage, idsaveStageType, idsaveSucceeded );    executeAction( idsave, desc41, DialogModes.NO );}function string2Array(string){    string = string.substring(1,string.length - 1)    array = new Array()    while(string.indexOf("[") >= 0){        s = string.indexOf ("[")        e = string.indexOf ("]")        str = string.substring (s+1, e)        arr = str.split (",")        array.push(arr);        string = string.substring(e + 1)    }    return array;}function saveAsImage(params){imgName = params[0]// =======================================================// =======================================================var idExpr = charIDToTypeID( "Expr" );    var desc97 = new ActionDescriptor();    var idUsng = charIDToTypeID( "Usng" );        var desc98 = new ActionDescriptor();        var idOp = charIDToTypeID( "Op  " );        var idSWOp = charIDToTypeID( "SWOp" );        var idOpSa = charIDToTypeID( "OpSa" );        desc98.putEnumerated( idOp, idSWOp, idOpSa );        var idDIDr = charIDToTypeID( "DIDr" );        desc98.putBoolean( idDIDr, true );        var idIn = charIDToTypeID( "In  " );        desc98.putPath( idIn, new File( "/Users/pwl/Desktop" ) );        var idovFN = charIDToTypeID( "ovFN" );        desc98.putString( idovFN, imgName);        var idFmt = charIDToTypeID( "Fmt " );        var idIRFm = charIDToTypeID( "IRFm" );        var idJPEG = charIDToTypeID( "JPEG" );        desc98.putEnumerated( idFmt, idIRFm, idJPEG );        var idIntr = charIDToTypeID( "Intr" );        desc98.putBoolean( idIntr, false );        var idQlty = charIDToTypeID( "Qlty" );        desc98.putInteger( idQlty, 100 );        var idQChS = charIDToTypeID( "QChS" );        desc98.putInteger( idQChS, 0 );        var idQCUI = charIDToTypeID( "QCUI" );        desc98.putInteger( idQCUI, 0 );        var idQChT = charIDToTypeID( "QChT" );        desc98.putBoolean( idQChT, false );        var idQChV = charIDToTypeID( "QChV" );        desc98.putBoolean( idQChV, false );        var idOptm = charIDToTypeID( "Optm" );        desc98.putBoolean( idOptm, true );        var idPass = charIDToTypeID( "Pass" );        desc98.putInteger( idPass, 1 );        var idblur = charIDToTypeID( "blur" );        desc98.putDouble( idblur, 0.000000 );        var idEICC = charIDToTypeID( "EICC" );        desc98.putBoolean( idEICC, false );        var idMtt = charIDToTypeID( "Mtt " );        desc98.putBoolean( idMtt, true );        var idMttR = charIDToTypeID( "MttR" );        desc98.putInteger( idMttR, 255 );        var idMttG = charIDToTypeID( "MttG" );        desc98.putInteger( idMttG, 255 );        var idMttB = charIDToTypeID( "MttB" );        desc98.putInteger( idMttB, 255 );        var idSHTM = charIDToTypeID( "SHTM" );        desc98.putBoolean( idSHTM, false );        var idSImg = charIDToTypeID( "SImg" );        desc98.putBoolean( idSImg, true );        var idSWsl = charIDToTypeID( "SWsl" );        var idSTsl = charIDToTypeID( "STsl" );        var idSLAl = charIDToTypeID( "SLAl" );        desc98.putEnumerated( idSWsl, idSTsl, idSLAl );        var idSWch = charIDToTypeID( "SWch" );        var idSTch = charIDToTypeID( "STch" );        var idCHsR = charIDToTypeID( "CHsR" );        desc98.putEnumerated( idSWch, idSTch, idCHsR );        var idSWmd = charIDToTypeID( "SWmd" );        var idSTmd = charIDToTypeID( "STmd" );        var idMDCC = charIDToTypeID( "MDCC" );        desc98.putEnumerated( idSWmd, idSTmd, idMDCC );        var idohXH = charIDToTypeID( "ohXH" );        desc98.putBoolean( idohXH, false );        var idohIC = charIDToTypeID( "ohIC" );        desc98.putBoolean( idohIC, true );        var idohAA = charIDToTypeID( "ohAA" );        desc98.putBoolean( idohAA, true );        var idohQA = charIDToTypeID( "ohQA" );        desc98.putBoolean( idohQA, true );        var idohCA = charIDToTypeID( "ohCA" );        desc98.putBoolean( idohCA, false );        var idohIZ = charIDToTypeID( "ohIZ" );        desc98.putBoolean( idohIZ, true );        var idohTC = charIDToTypeID( "ohTC" );        var idSToc = charIDToTypeID( "SToc" );        var idOCzerothree = charIDToTypeID( "OC03" );        desc98.putEnumerated( idohTC, idSToc, idOCzerothree );        var idohAC = charIDToTypeID( "ohAC" );        var idSToc = charIDToTypeID( "SToc" );        var idOCzerothree = charIDToTypeID( "OC03" );        desc98.putEnumerated( idohAC, idSToc, idOCzerothree );        var idohIn = charIDToTypeID( "ohIn" );        desc98.putInteger( idohIn, -1 );        var idohLE = charIDToTypeID( "ohLE" );        var idSTle = charIDToTypeID( "STle" );        var idLEzerothree = charIDToTypeID( "LE03" );        desc98.putEnumerated( idohLE, idSTle, idLEzerothree );        var idohEn = charIDToTypeID( "ohEn" );        var idSTen = charIDToTypeID( "STen" );        var idENzerozero = charIDToTypeID( "EN00" );        desc98.putEnumerated( idohEn, idSTen, idENzerozero );        var idolCS = charIDToTypeID( "olCS" );        desc98.putBoolean( idolCS, false );        var idolEC = charIDToTypeID( "olEC" );        var idSTst = charIDToTypeID( "STst" );        var idSTzerozero = charIDToTypeID( "ST00" );        desc98.putEnumerated( idolEC, idSTst, idSTzerozero );        var idolWH = charIDToTypeID( "olWH" );        var idSTwh = charIDToTypeID( "STwh" );        var idWHzeroone = charIDToTypeID( "WH01" );        desc98.putEnumerated( idolWH, idSTwh, idWHzeroone );        var idolSV = charIDToTypeID( "olSV" );        var idSTsp = charIDToTypeID( "STsp" );        var idSPzerofour = charIDToTypeID( "SP04" );        desc98.putEnumerated( idolSV, idSTsp, idSPzerofour );        var idolSH = charIDToTypeID( "olSH" );        var idSTsp = charIDToTypeID( "STsp" );        var idSPzerofour = charIDToTypeID( "SP04" );        desc98.putEnumerated( idolSH, idSTsp, idSPzerofour );        var idolNC = charIDToTypeID( "olNC" );            var list46 = new ActionList();                var desc99 = new ActionDescriptor();                var idncTp = charIDToTypeID( "ncTp" );                var idSTnc = charIDToTypeID( "STnc" );                var idNCzerozero = charIDToTypeID( "NC00" );                desc99.putEnumerated( idncTp, idSTnc, idNCzerozero );            var idSCnc = charIDToTypeID( "SCnc" );            list46.putObject( idSCnc, desc99 );                var desc100 = new ActionDescriptor();                var idncTp = charIDToTypeID( "ncTp" );                var idSTnc = charIDToTypeID( "STnc" );                var idNConenine = charIDToTypeID( "NC19" );                desc100.putEnumerated( idncTp, idSTnc, idNConenine );            var idSCnc = charIDToTypeID( "SCnc" );            list46.putObject( idSCnc, desc100 );                var desc101 = new ActionDescriptor();                var idncTp = charIDToTypeID( "ncTp" );                var idSTnc = charIDToTypeID( "STnc" );                var idNCtwoeight = charIDToTypeID( "NC28" );                desc101.putEnumerated( idncTp, idSTnc, idNCtwoeight );            var idSCnc = charIDToTypeID( "SCnc" );            list46.putObject( idSCnc, desc101 );                var desc102 = new ActionDescriptor();                var idncTp = charIDToTypeID( "ncTp" );                var idSTnc = charIDToTypeID( "STnc" );                var idNCtwofour = charIDToTypeID( "NC24" );                desc102.putEnumerated( idncTp, idSTnc, idNCtwofour );            var idSCnc = charIDToTypeID( "SCnc" );            list46.putObject( idSCnc, desc102 );                var desc103 = new ActionDescriptor();                var idncTp = charIDToTypeID( "ncTp" );                var idSTnc = charIDToTypeID( "STnc" );                var idNCtwofour = charIDToTypeID( "NC24" );                desc103.putEnumerated( idncTp, idSTnc, idNCtwofour );            var idSCnc = charIDToTypeID( "SCnc" );            list46.putObject( idSCnc, desc103 );                var desc104 = new ActionDescriptor();                var idncTp = charIDToTypeID( "ncTp" );                var idSTnc = charIDToTypeID( "STnc" );                var idNCtwofour = charIDToTypeID( "NC24" );                desc104.putEnumerated( idncTp, idSTnc, idNCtwofour );            var idSCnc = charIDToTypeID( "SCnc" );            list46.putObject( idSCnc, desc104 );        desc98.putList( idolNC, list46 );        var idobIA = charIDToTypeID( "obIA" );        desc98.putBoolean( idobIA, false );        var idobIP = charIDToTypeID( "obIP" );        desc98.putString( idobIP, "" );        var idobCS = charIDToTypeID( "obCS" );        var idSTcs = charIDToTypeID( "STcs" );        var idCSzeroone = charIDToTypeID( "CS01" );        desc98.putEnumerated( idobCS, idSTcs, idCSzeroone );        var idovNC = charIDToTypeID( "ovNC" );            var list47 = new ActionList();                var desc105 = new ActionDescriptor();                var idncTp = charIDToTypeID( "ncTp" );                var idSTnc = charIDToTypeID( "STnc" );                var idNCzeroone = charIDToTypeID( "NC01" );                desc105.putEnumerated( idncTp, idSTnc, idNCzeroone );            var idSCnc = charIDToTypeID( "SCnc" );            list47.putObject( idSCnc, desc105 );                var desc106 = new ActionDescriptor();                var idncTp = charIDToTypeID( "ncTp" );                var idSTnc = charIDToTypeID( "STnc" );                var idNCtwozero = charIDToTypeID( "NC20" );                desc106.putEnumerated( idncTp, idSTnc, idNCtwozero );            var idSCnc = charIDToTypeID( "SCnc" );            list47.putObject( idSCnc, desc106 );                var desc107 = new ActionDescriptor();                var idncTp = charIDToTypeID( "ncTp" );                var idSTnc = charIDToTypeID( "STnc" );                var idNCzerotwo = charIDToTypeID( "NC02" );                desc107.putEnumerated( idncTp, idSTnc, idNCzerotwo );            var idSCnc = charIDToTypeID( "SCnc" );            list47.putObject( idSCnc, desc107 );                var desc108 = new ActionDescriptor();                var idncTp = charIDToTypeID( "ncTp" );                var idSTnc = charIDToTypeID( "STnc" );                var idNConenine = charIDToTypeID( "NC19" );                desc108.putEnumerated( idncTp, idSTnc, idNConenine );            var idSCnc = charIDToTypeID( "SCnc" );            list47.putObject( idSCnc, desc108 );                var desc109 = new ActionDescriptor();                var idncTp = charIDToTypeID( "ncTp" );                var idSTnc = charIDToTypeID( "STnc" );                var idNCzerosix = charIDToTypeID( "NC06" );                desc109.putEnumerated( idncTp, idSTnc, idNCzerosix );            var idSCnc = charIDToTypeID( "SCnc" );            list47.putObject( idSCnc, desc109 );                var desc110 = new ActionDescriptor();                var idncTp = charIDToTypeID( "ncTp" );                var idSTnc = charIDToTypeID( "STnc" );                var idNCtwofour = charIDToTypeID( "NC24" );                desc110.putEnumerated( idncTp, idSTnc, idNCtwofour );            var idSCnc = charIDToTypeID( "SCnc" );            list47.putObject( idSCnc, desc110 );                var desc111 = new ActionDescriptor();                var idncTp = charIDToTypeID( "ncTp" );                var idSTnc = charIDToTypeID( "STnc" );                var idNCtwofour = charIDToTypeID( "NC24" );                desc111.putEnumerated( idncTp, idSTnc, idNCtwofour );            var idSCnc = charIDToTypeID( "SCnc" );            list47.putObject( idSCnc, desc111 );                var desc112 = new ActionDescriptor();                var idncTp = charIDToTypeID( "ncTp" );                var idSTnc = charIDToTypeID( "STnc" );                var idNCtwofour = charIDToTypeID( "NC24" );                desc112.putEnumerated( idncTp, idSTnc, idNCtwofour );            var idSCnc = charIDToTypeID( "SCnc" );            list47.putObject( idSCnc, desc112 );                var desc113 = new ActionDescriptor();                var idncTp = charIDToTypeID( "ncTp" );                var idSTnc = charIDToTypeID( "STnc" );                var idNCtwotwo = charIDToTypeID( "NC22" );                desc113.putEnumerated( idncTp, idSTnc, idNCtwotwo );            var idSCnc = charIDToTypeID( "SCnc" );            list47.putObject( idSCnc, desc113 );        desc98.putList( idovNC, list47 );        var idovCM = charIDToTypeID( "ovCM" );        desc98.putBoolean( idovCM, false );        var idovCW = charIDToTypeID( "ovCW" );        desc98.putBoolean( idovCW, false );        var idovCU = charIDToTypeID( "ovCU" );        desc98.putBoolean( idovCU, true );        var idovSF = charIDToTypeID( "ovSF" );        desc98.putBoolean( idovSF, true );        var idovCB = charIDToTypeID( "ovCB" );        desc98.putBoolean( idovCB, true );        var idovSN = charIDToTypeID( "ovSN" );        desc98.putString( idovSN, """images""" );    var idSaveForWeb = stringIDToTypeID( "SaveForWeb" );    desc97.putObject( idUsng, idSaveForWeb, desc98 );executeAction( idExpr, desc97, DialogModes.NO );}